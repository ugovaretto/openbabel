<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>base.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">base.h</div>  </div>
</div>
<div class="contents">
<a href="base_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">base.h - Base class for OpenBabel objects</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span>
<a name="l00005"></a>00005 <span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00008"></a>00008 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00009"></a>00009 <span class="comment"></span>
<a name="l00010"></a>00010 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment">***********************************************************************/</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef OB_BASE_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define OB_BASE_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="tokenst_8h.shtml" title="Tokenize strings, open data files.">openbabel/tokenst.h</a>&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#ifdef UNUSED</span>
<a name="l00032"></a>00032 <span class="preprocessor"></span><span class="preprocessor">#elif (__GNUC__ == 4)</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span><span class="preprocessor"># define UNUSED(x) UNUSED_ ## x __attribute__((unused))</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="preprocessor">#elif defined(__LCLINT__)</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="preprocessor"># define UNUSED(x) </span><span class="comment">/*@unused@*/</span> x
<a name="l00036"></a>00036 <span class="preprocessor">#else</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span><span class="preprocessor"># define UNUSED(x) x</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 <span class="keyword">namespace </span>OpenBabel
<a name="l00041"></a>00041 {
<a name="l00042"></a>00042 
<a name="l00043"></a>00043   <span class="comment">//Forward declaration of the base class for OBMol OBReaction, OBAtom, etc.</span>
<a name="l00044"></a>00044   <span class="comment">//Declaration later in this file.</span>
<a name="l00045"></a>00045 <span class="keyword">class </span>OBBase;
<a name="l00046"></a>00046 <span class="keyword">class </span>OBConversion; <span class="comment">//used only as pointer</span>
<a name="l00047"></a>00047 
<a name="l00049"></a>00049   OBAPI std::string <a class="code" href="namespaceOpenBabel.shtml#a456fbf388c19a1a63a95fe60d28dd869">OBReleaseVersion</a>();
<a name="l00050"></a>00050 
<a name="l00062"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml">00062</a>   <span class="keyword">namespace </span>OBGenericDataType
<a name="l00063"></a>00063   {
<a name="l00064"></a>00064     <span class="keyword">enum</span>
<a name="l00065"></a>00065     {
<a name="l00067"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e">00067</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e" title="Unknown data type (default)">UndefinedData</a> =      0,
<a name="l00068"></a>00068 
<a name="l00070"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a">00070</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf37b8c94a903cbf5fc45475c815c541a" title="Arbitrary key/value data, i.e., OBPairData.">PairData</a>      =      1,
<a name="l00071"></a>00071 
<a name="l00073"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baed27589416d0d35119923437b476c33c">00073</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baed27589416d0d35119923437b476c33c" title="Energetics data (e.g., total energy, heat of formation, etc.)">EnergyData</a>    =      2,
<a name="l00074"></a>00074 
<a name="l00076"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad015d8b14f8fa9e2c8107ec0b6d637a2">00076</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad015d8b14f8fa9e2c8107ec0b6d637a2" title="Storing text comments (one per molecule, atom, bond, etc.) (for other data, e.g., author...">CommentData</a>   =      3,
<a name="l00077"></a>00077 
<a name="l00079"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baa8504383b864769bce6f9962ff55711c">00079</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baa8504383b864769bce6f9962ff55711c" title="Arbitrary information about conformers, i.e., OBConformerData.">ConformerData</a> =      4,
<a name="l00080"></a>00080 
<a name="l00082"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55babbdeac68debaebaea148a0f2271c8128">00082</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55babbdeac68debaebaea148a0f2271c8128" title="Bond data external to OpenBabel, i.e., OBExternalBond, OBExternalBondData.">ExternalBondData</a> =   5,
<a name="l00083"></a>00083 
<a name="l00085"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1">00085</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1" title="Information for generating &amp; manipulating rotamers, i.e. OBRotamerList.">RotamerList</a> =        6,
<a name="l00086"></a>00086 
<a name="l00088"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba71d63bc919dfc9800e9e274301882557">00088</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba71d63bc919dfc9800e9e274301882557" title="Info. for storing bonds to atoms yet to be added, i.e. OBVirtualBond.">VirtualBondData</a> =    7,
<a name="l00089"></a>00089 
<a name="l00091"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba614fe63c6aaa519336589c0b3dcbcdb9">00091</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba614fe63c6aaa519336589c0b3dcbcdb9" title="Information on rings in a molecule, i.e., OBRingData.">RingData</a> =           8,
<a name="l00092"></a>00092 
<a name="l00094"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba9cf293f0b1ed83d3b1b804ca947ddcd8">00094</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba9cf293f0b1ed83d3b1b804ca947ddcd8" title="Information about torsion/dihedral angles, i.e., OBTorsionData and OBTorsion.">TorsionData</a> =        9,
<a name="l00095"></a>00095 
<a name="l00097"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba99b8d17f7ee6c09b008ab6bf5b5bf0cc">00097</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba99b8d17f7ee6c09b008ab6bf5b5bf0cc" title="Bond angles in a molecule, i.e., OBAngle, OBAngleData.">AngleData</a> =         10,
<a name="l00098"></a>00098 
<a name="l00100"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00">00100</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4804a06df36aa971eb112ada03885b00" title="Residue serial numbers.">SerialNums</a> =        11,
<a name="l00101"></a>00101 
<a name="l00103"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba26d8504c2596c9ef59dab47c01a4dd1b">00103</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba26d8504c2596c9ef59dab47c01a4dd1b" title="Crystallographic unit cell data, i.e., OBUnitCell.">UnitCell</a> =          12,
<a name="l00104"></a>00104 
<a name="l00106"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab44db07941815c91fbc8e01f66252208">00106</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab44db07941815c91fbc8e01f66252208" title="Spin data, including NMR, atomic and molecular spin, etc.">SpinData</a> =          13,
<a name="l00107"></a>00107 
<a name="l00109"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bae1fbcef5ed6d30c670148af84890d0af">00109</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bae1fbcef5ed6d30c670148af84890d0af" title="Arbitrary partial and total charges, dipole moments, etc.">ChargeData</a> =        14,
<a name="l00110"></a>00110 
<a name="l00112"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2ed92f76270c3218036e96ad1044301d">00112</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2ed92f76270c3218036e96ad1044301d" title="Symmetry data -- point and space groups, transforms, etc. i.e., OBSymmetryData.">SymmetryData</a> =      15,
<a name="l00113"></a>00113 
<a name="l00115"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baab3b5ad7023167aa297c4c555c10acdd">00115</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baab3b5ad7023167aa297c4c555c10acdd" title="Arbitrary chiral information (atom, bond, molecule, etc.) i.e., OBChiralData.">ChiralData</a> =        16,
<a name="l00116"></a>00116 
<a name="l00118"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baac4fd2f8c1bedfe2d09c303e9c1b8e0a">00118</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baac4fd2f8c1bedfe2d09c303e9c1b8e0a" title="Atomic and molecular occupation data (e.g., for crystal structures)">OccupationData</a> =    17,
<a name="l00119"></a>00119 
<a name="l00121"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba5b0d37c5cdfbcc15ee852b769c25d1b7">00121</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba5b0d37c5cdfbcc15ee852b769c25d1b7" title="Density (cube) data and surfaces.">DensityData</a> =       18,
<a name="l00122"></a>00122 
<a name="l00124"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2">00124</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba88ee5a5e80dd4e9523761d17ba9b81f2" title="Electronic levels, redox states, orbitals, etc.">ElectronicData</a> =    19,
<a name="l00125"></a>00125 
<a name="l00127"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2">00127</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab69829f7efb675ca0f6a4d8f245ceaf2" title="Vibrational modes, frequencies, etc.">VibrationData</a> =     20,
<a name="l00128"></a>00128 
<a name="l00130"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899">00130</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab7c011beb81d9ba86035c1c0b7609899" title="Rotational energy information.">RotationData</a> =      21,
<a name="l00131"></a>00131 
<a name="l00133"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55badd3a99a5a7d554d150d7241368f2ba1d">00133</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55badd3a99a5a7d554d150d7241368f2ba1d" title="Nuclear transitions (e.g., decay, capture, fission, fusion)">NuclearData</a> =       22,
<a name="l00134"></a>00134 
<a name="l00136"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39">00136</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39" title="Set Data (a set of OBGenericData)">SetData</a> =           23,
<a name="l00137"></a>00137 
<a name="l00139"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d">00139</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba851ab4fe739bc6b4cc7b968ab9c4e61d" title="Grid Data (e.g., 3D grids of data a.k.a. cubes)">GridData</a> =          24,
<a name="l00140"></a>00140 
<a name="l00142"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9">00142</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba46bb764382af04b5c32d3370e6b677f9" title="Vector Data (i.e., one vector like a dipole moment)">VectorData</a> =        25,
<a name="l00143"></a>00143 
<a name="l00145"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe">00145</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8239a3bb53f99dfa7da4734d77733abe" title="Matrix data (i.e., a 3x3 matrix like a rotation or quadrupole moment)">MatrixData</a> =        26,
<a name="l00146"></a>00146 
<a name="l00148"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3f9974bdbccde7c26064d7ec21d570ef">00148</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3f9974bdbccde7c26064d7ec21d570ef" title="Stereochemistry data (see OBStereoBase)">StereoData</a> =        27,
<a name="l00149"></a>00149 
<a name="l00151"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a">00151</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baad6691689525c8623b3c0d08d49c424a" title="Density of States data (fermi energy and energy vs. density data)">DOSData</a> =           28,
<a name="l00152"></a>00152 
<a name="l00154"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8">00154</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baeb82edb7e1b51246c53e0dd7248365a8" title="Electronic transition data (e.g., UV/Vis, excitation energies, etc.)">ElectronicTransitionData</a> = 29,
<a name="l00155"></a>00155 
<a name="l00156"></a>00156       <span class="comment">// space for up to 2^14 more entries...</span>
<a name="l00157"></a>00157 
<a name="l00159"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad4a188d7201f00f99ec649edead73c1e">00159</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bad4a188d7201f00f99ec649edead73c1e" title="Custom (user-defined data)">CustomData0</a> = 16384,
<a name="l00160"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7bd8533c833569ccbd4a701378ccffb7">00160</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7bd8533c833569ccbd4a701378ccffb7">CustomData1</a> = 16385,
<a name="l00161"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7be53c3112d0111bbbee98cefbac4850">00161</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba7be53c3112d0111bbbee98cefbac4850">CustomData2</a> = 16386,
<a name="l00162"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba012e8681e30646e38989b9a0f6ace98f">00162</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba012e8681e30646e38989b9a0f6ace98f">CustomData3</a> = 16387,
<a name="l00163"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba342cb4110346a130dc73e4e3491533de">00163</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba342cb4110346a130dc73e4e3491533de">CustomData4</a> = 16388,
<a name="l00164"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf20627567e8d1835670ff531d5cb9d1a">00164</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baf20627567e8d1835670ff531d5cb9d1a">CustomData5</a> = 16389,
<a name="l00165"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4c2040d0daf33eff43588933be9150a7">00165</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4c2040d0daf33eff43588933be9150a7">CustomData6</a> = 16390,
<a name="l00166"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba40d766aa8e0726ef56b99986ec4d275d">00166</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba40d766aa8e0726ef56b99986ec4d275d">CustomData7</a> = 16391,
<a name="l00167"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab32f4336d6de7ee7fdf6557bcd9b01c4">00167</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bab32f4336d6de7ee7fdf6557bcd9b01c4">CustomData8</a> = 16392,
<a name="l00168"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4a0f2b355a4e2d24d617f2824c165a61">00168</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba4a0f2b355a4e2d24d617f2824c165a61">CustomData9</a> = 16393,
<a name="l00169"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba240964387d336b8321d240044762c8e6">00169</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba240964387d336b8321d240044762c8e6">CustomData10</a> = 16394,
<a name="l00170"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba806a44c47ce81d45527562fca2917d0f">00170</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba806a44c47ce81d45527562fca2917d0f">CustomData11</a> = 16395,
<a name="l00171"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3b6e862da975578f9b8f2a5cef18935c">00171</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3b6e862da975578f9b8f2a5cef18935c">CustomData12</a> = 16396,
<a name="l00172"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bafe6b84e76821b52a2eb5f3a761dc8c6a">00172</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55bafe6b84e76821b52a2eb5f3a761dc8c6a">CustomData13</a> = 16397,
<a name="l00173"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3cbbbad42fbfe9766b0892ccc88b47c5">00173</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba3cbbbad42fbfe9766b0892ccc88b47c5">CustomData14</a> = 16398,
<a name="l00174"></a><a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8051d4056f7d8a89233dfa0ebc949bc1">00174</a>       <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba8051d4056f7d8a89233dfa0ebc949bc1">CustomData15</a> = 16399
<a name="l00175"></a>00175     };
<a name="l00176"></a>00176   } <span class="comment">// end namespace</span>
<a name="l00177"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">00177</a>   <span class="keyword">enum</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> {
<a name="l00178"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048">00178</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048" title="Undefined or unspecified (default)">any</a>,                 
<a name="l00179"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50">00179</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a887e83e320499ec89236722bbdf56f50" title="Read from an input file.">fileformatInput</a>,     
<a name="l00180"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a928a3db32b4975c3d42d0ca5d8d9f44d">00180</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a928a3db32b4975c3d42d0ca5d8d9f44d" title="Added by the user.">userInput</a>,           
<a name="l00181"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14ab1c8706dce6832c9ce173260ba2bf392">00181</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14ab1c8706dce6832c9ce173260ba2bf392" title="Perceived by Open Babel library methods.">perceived</a>,           
<a name="l00182"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a6aef01ed9b1c198e6944f87e370f00b2">00182</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a6aef01ed9b1c198e6944f87e370f00b2" title="Added by an external program.">external</a>,            
<a name="l00183"></a><a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a140dc6ce49ef5aee319af1854c3dad23">00183</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a140dc6ce49ef5aee319af1854c3dad23" title="Not for routine external use (e.g. in sdf or cml properties)">local</a>                
<a name="l00184"></a>00184   };
<a name="l00185"></a>00185 
<a name="l00187"></a>00187   <span class="comment">// Class introduction in generic.cpp</span>
<a name="l00188"></a>00188   <span class="comment">// This base class declaration  has no dependence on mol.h</span>
<a name="l00189"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml">00189</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>
<a name="l00190"></a>00190   {
<a name="l00191"></a>00191   <span class="keyword">protected</span>:
<a name="l00192"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">00192</a>     std::string  <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51" title="attribute tag (e.g., &quot;UnitCell&quot;, &quot;Comment&quot; or &quot;Author&quot;)">_attr</a>;  
<a name="l00193"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">00193</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef" title="attribute type -- declared for each subclass">_type</a>;  
<a name="l00194"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">00194</a>     <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>   <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856" title="source of data for accounting">_source</a>;
<a name="l00195"></a>00195   <span class="keyword">public</span>:
<a name="l00196"></a>00196     <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>(<span class="keyword">const</span> std::string attr = <span class="stringliteral">&quot;undefined&quot;</span>,
<a name="l00197"></a>00197                   <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type =  <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55baaed11c625f3ba337a0468e31990a832e" title="Unknown data type (default)">OBGenericDataType::UndefinedData</a>,
<a name="l00198"></a>00198                   <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source = <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14a08e68258d108979edaae8bed94e25048" title="Undefined or unspecified (default)">any</a>);
<a name="l00199"></a>00199     <span class="comment">//Use default copy constructor and assignment operators</span>
<a name="l00200"></a>00200     <span class="comment">//OBGenericData(const OBGenericData&amp;);</span>
<a name="l00201"></a>00201 
<a name="l00202"></a>00202     <span class="comment">/* Virtual constructors added. see</span>
<a name="l00203"></a>00203 <span class="comment">       http://www.parashift.com/c++-faq-lite/abcs.html#faq-22.5</span>
<a name="l00204"></a>00204 <span class="comment">       to allow copying given only a base class OBGenericData pointer.</span>
<a name="l00205"></a>00205 <span class="comment">       It may be necessary to cast the return pointer to the derived class</span>
<a name="l00206"></a>00206 <span class="comment">       type, since we are doing without Covariant Return Types</span>
<a name="l00207"></a>00207 <span class="comment">       http://www.parashift.com/c++-faq-lite/virtual-functions.html#faq-20.8</span>
<a name="l00208"></a>00208 <span class="comment"></span>
<a name="l00209"></a>00209 <span class="comment">       A derived class may return NULL if copying is inappropriate */</span>
<a name="l00210"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a67bda850335747e7ac5d66629bda0a67">00210</a>     <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>* Clone(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* <span class="comment">/*parent*/</span>)<span class="keyword"> const</span>
<a name="l00211"></a>00211 <span class="keyword">    </span>{ <span class="keywordflow">return</span> NULL; }
<a name="l00212"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#acb834533508953a264ed93b74fddad8d">00212</a>     <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#acb834533508953a264ed93b74fddad8d">~OBGenericData</a>()    {}
<a name="l00213"></a>00213     <span class="comment">//Use default copy constructor and assignment operators</span>
<a name="l00214"></a>00214     <span class="comment">//OBGenericData&amp; operator=(const OBGenericData &amp;src);</span>
<a name="l00215"></a>00215 
<a name="l00217"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">00217</a>     <span class="keywordtype">void</span>                      SetAttribute(<span class="keyword">const</span> std::string &amp;v)
<a name="l00218"></a>00218     {        _attr = v;        }
<a name="l00220"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">00220</a>     <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0" title="Set the origin of this data, which can be used to filter the data.">SetOrigin</a>(<span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s) { _source = s; }
<a name="l00222"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#ac72c28db8b5bb8911845ada56220a1e0">00222</a>     <span class="keyword">virtual</span> <span class="keyword">const</span> std::string &amp;GetAttribute()<span class="keyword">  const</span>
<a name="l00223"></a>00223 <span class="keyword">    </span>{        <span class="keywordflow">return</span>(_attr);    }
<a name="l00225"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#ac20b99b31895c99422fb1244def6e213">00225</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                GetDataType()<span class="keyword">    const</span>
<a name="l00226"></a>00226 <span class="keyword">    </span>{        <span class="keywordflow">return</span>(_type);    }
<a name="l00229"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#ac9527475c246fadbbab63a35376fd5fe">00229</a>     <span class="keyword">virtual</span> <span class="keyword">const</span> std::string &amp;GetValue()<span class="keyword">  const</span>
<a name="l00230"></a>00230 <span class="keyword">    </span>{                   <span class="keywordflow">return</span> _attr; }
<a name="l00231"></a><a class="code" href="classOpenBabel_1_1OBGenericData.shtml#ad080c58f230c474935ed3e27cb2ba906">00231</a>     <span class="keyword">virtual</span> <a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin()<span class="keyword"> const</span>
<a name="l00232"></a>00232 <span class="keyword">    </span>{     <span class="keywordflow">return</span> _source; }
<a name="l00233"></a>00233   };
<a name="l00234"></a>00234 
<a name="l00236"></a><a class="code" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">00236</a>   <span class="keyword">typedef</span> std::vector&lt;OBGenericData*&gt;::iterator <a class="code" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d" title="A standard iterator over vectors of OBGenericData (e.g., inherited from OBBase)">OBDataIterator</a>;
<a name="l00237"></a>00237 
<a name="l00239"></a>00239   <span class="comment">// introduction in base.cpp</span>
<a name="l00240"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml">00240</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>
<a name="l00241"></a>00241     {
<a name="l00242"></a>00242     <span class="keyword">public</span>:
<a name="l00243"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a7a58af02c4e2dd0d9b174b3032f1ffa3">00243</a>       <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>()
<a name="l00244"></a>00244         {
<a name="l00245"></a>00245           <span class="keywordflow">if</span> (!_vdata.empty())
<a name="l00246"></a>00246             {
<a name="l00247"></a>00247               std::vector&lt;OBGenericData*&gt;::iterator m;
<a name="l00248"></a>00248               <span class="keywordflow">for</span> (m = _vdata.begin();m != _vdata.end();m++)
<a name="l00249"></a>00249                 <span class="keyword">delete</span> *m;
<a name="l00250"></a>00250               _vdata.clear();
<a name="l00251"></a>00251             }
<a name="l00252"></a>00252         }
<a name="l00253"></a>00253 
<a name="l00255"></a>00255       <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Clear();
<a name="l00256"></a>00256 
<a name="l00262"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">00262</a>       <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* DoTransformations(<span class="keyword">const</span> std::map&lt;std::string,std::string&gt;* <span class="comment">/*pOptions*/</span>,
<a name="l00263"></a>00263                                         <a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* <span class="comment">/*pConv*/</span>)
<a name="l00264"></a>00264         {
<a name="l00265"></a>00265           <span class="keywordflow">return</span> <span class="keyword">this</span>;
<a name="l00266"></a>00266         }
<a name="l00267"></a>00267 
<a name="l00269"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">00269</a>       <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* ClassDescription()
<a name="l00270"></a>00270         {
<a name="l00271"></a>00271           <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;
<a name="l00272"></a>00272         }
<a name="l00273"></a>00273 
<a name="l00275"></a>00275       <span class="keyword">template</span>&lt; <span class="keyword">class</span> T &gt;
<a name="l00276"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">00276</a>       <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#abc5c98fcc1211af2b80116dd6e0a035da21f40778b7db9343a6ca75ec2c41ccce">T</a>* CastAndClear(<span class="keywordtype">bool</span> clear=<span class="keyword">true</span>)
<a name="l00277"></a>00277         {
<a name="l00278"></a>00278           <a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#abc5c98fcc1211af2b80116dd6e0a035da21f40778b7db9343a6ca75ec2c41ccce">T</a>* pOb = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="namespaceOpenBabel_1_1OBResidueIndex.shtml#abc5c98fcc1211af2b80116dd6e0a035da21f40778b7db9343a6ca75ec2c41ccce">T</a>*<span class="keyword">&gt;</span>(<span class="keyword">this</span>);
<a name="l00279"></a>00279           <span class="keywordflow">if</span>(pOb &amp;&amp; clear)<span class="comment">// Clear only if this is of target class</span>
<a name="l00280"></a>00280             Clear();
<a name="l00281"></a>00281           <span class="keywordflow">return</span> pOb;
<a name="l00282"></a>00282         }
<a name="l00283"></a>00283 
<a name="l00286"></a>00286       <span class="comment">//Currently no title data member in base class.</span>
<a name="l00287"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a6726eb1601555e8e7d712c43416e6af7">00287</a>       <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>  *<a class="code" href="classOpenBabel_1_1OBBase.shtml#a6726eb1601555e8e7d712c43416e6af7" title="Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*...">GetTitle</a>(<span class="keywordtype">bool</span> UNUSED(replaceNewlines) = <span class="keyword">true</span>)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;}
<a name="l00288"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">00288</a>       <span class="keyword">virtual</span> <span class="keywordtype">void</span>  <a class="code" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *) {}
<a name="l00289"></a>00289 
<a name="l00291"></a>00291 
<a name="l00292"></a>00292 
<a name="l00293"></a>00293       <span class="keywordtype">bool</span>                              HasData(<span class="keyword">const</span> std::string &amp;);
<a name="l00295"></a>00295       <span class="keywordtype">bool</span>                              HasData(<span class="keyword">const</span> <span class="keywordtype">char</span> *);
<a name="l00297"></a>00297       <span class="keywordtype">bool</span>                              HasData(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);
<a name="l00299"></a>00299       <span class="keywordtype">void</span>                              DeleteData(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);
<a name="l00301"></a>00301       <span class="keywordtype">void</span>                              DeleteData(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>*);
<a name="l00303"></a>00303       <span class="keywordtype">void</span>                              DeleteData(std::vector&lt;OBGenericData*&gt;&amp;);
<a name="l00305"></a>00305       <span class="keywordtype">bool</span>                              DeleteData(<span class="keyword">const</span> std::string&amp; s);
<a name="l00307"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">00307</a>       <span class="keywordtype">void</span>                              <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba2442f017449974c68f80c0f40c6f1a39" title="Set Data (a set of OBGenericData)">SetData</a>(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a> *d)
<a name="l00308"></a>00308         {
<a name="l00309"></a>00309           <span class="keywordflow">if</span>(d) _vdata.push_back(d);
<a name="l00310"></a>00310         }
<a name="l00313"></a>00313       <span class="keywordtype">void</span>                              CloneData(<a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a> *d);
<a name="l00315"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a69c3286ed127949ba747afcc5b9a514a">00315</a>       <span class="keywordtype">size_t</span>                      DataSize()<span class="keyword"> const</span>
<a name="l00316"></a>00316 <span class="keyword">        </span>{ <span class="keywordflow">return</span>(_vdata.size()); }
<a name="l00319"></a>00319       <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>                    *GetData(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);
<a name="l00321"></a>00321       <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>                    *GetData(<span class="keyword">const</span> std::string&amp;);
<a name="l00323"></a>00323       <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>                    *GetData(<span class="keyword">const</span> <span class="keywordtype">char</span> *);
<a name="l00327"></a>00327       std::vector&lt;OBGenericData*&gt;       GetAllData(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> type);
<a name="l00329"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">00329</a>       std::vector&lt;OBGenericData*&gt;      &amp;<a class="code" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a>() { <span class="keywordflow">return</span>(_vdata); }
<a name="l00331"></a>00331       std::vector&lt;OBGenericData*&gt;      GetData(<a class="code" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source);
<a name="l00333"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">00333</a>       <a class="code" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d" title="A standard iterator over vectors of OBGenericData (e.g., inherited from OBBase)">OBDataIterator</a>  BeginData()
<a name="l00334"></a>00334         { <span class="keywordflow">return</span>(_vdata.begin());        }
<a name="l00336"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">00336</a>       <a class="code" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d" title="A standard iterator over vectors of OBGenericData (e.g., inherited from OBBase)">OBDataIterator</a>  EndData()
<a name="l00337"></a>00337         { <span class="keywordflow">return</span>(_vdata.end());          }
<a name="l00339"></a>00339     <span class="keyword">protected</span>:
<a name="l00340"></a><a class="code" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">00340</a>       std::vector&lt;OBGenericData*&gt; <a class="code" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797" title="Custom data.">_vdata</a>; 
<a name="l00341"></a>00341 
<a name="l00342"></a>00342     };
<a name="l00343"></a>00343 
<a name="l00344"></a>00344 } <span class="comment">//namespace OpenBabel</span>
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 <span class="preprocessor">#endif // OB_BASE_H</span>
<a name="l00347"></a>00347 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
