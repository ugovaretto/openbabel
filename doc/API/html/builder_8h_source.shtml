<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>builder.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">builder.h</div>  </div>
</div>
<div class="contents">
<a href="builder_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">builder.h - OBBuilder class.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2007-2008 by Tim Vandermeersch</span>
<a name="l00005"></a>00005 <span class="comment">                           &lt;tim.vandermeersch@gmail.com&gt;</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00008"></a>00008 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00009"></a>00009 <span class="comment"></span>
<a name="l00010"></a>00010 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment">***********************************************************************/</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef OB_BUILDER_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define OB_BUILDER_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;list&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml" title="Base classes to build a graph.">openbabel/base.h</a>&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel)...">openbabel/mol.h</a>&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;<a class="code" href="stereo_8h.shtml" title="Process molecular stereochemistry information.">openbabel/stereo/stereo.h</a>&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="keyword">namespace </span>OpenBabel
<a name="l00034"></a>00034 {
<a name="l00037"></a><a class="code" href="classOpenBabel_1_1OBBuilder.shtml">00037</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBBuilder.shtml" title="Class to build 3D structures.">OBBuilder</a> {
<a name="l00038"></a>00038     <span class="keyword">public</span>:
<a name="l00039"></a>00039 
<a name="l00040"></a><a class="code" href="classOpenBabel_1_1OBBuilder.shtml#a7bb41c313c47405a2040198e671caad5">00040</a>       <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#a7bb41c313c47405a2040198e671caad5">OBBuilder</a>(): _keeprings(false) {}
<a name="l00041"></a>00041 
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 
<a name="l00049"></a>00049       <span class="keywordtype">bool</span> Build(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00051"></a>00051 
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 
<a name="l00062"></a><a class="code" href="classOpenBabel_1_1OBBuilder.shtml#acf9a71f4ec162379069afdcae3088beb">00062</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#acf9a71f4ec162379069afdcae3088beb">SetKeepRings</a>() { _keeprings = <span class="keyword">true</span>; }
<a name="l00063"></a><a class="code" href="classOpenBabel_1_1OBBuilder.shtml#aa981684e16a4cc7f7acf0cb9df1ce55b">00063</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBBuilder.shtml#aa981684e16a4cc7f7acf0cb9df1ce55b">UnsetKeepRings</a>() { _keeprings = <span class="keyword">false</span>; }
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 
<a name="l00068"></a>00068       <span class="keywordtype">void</span> LoadFragments();
<a name="l00069"></a>00069 
<a name="l00074"></a>00074       <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetNewBondVector(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom);
<a name="l00075"></a>00075       <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetNewBondVector(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom, <span class="keywordtype">double</span> length);
<a name="l00076"></a>00076 
<a name="l00088"></a>00088       <span class="keyword">static</span> <span class="keywordtype">bool</span> Connect(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;newpos, <span class="keywordtype">int</span> bondOrder = 1);
<a name="l00099"></a>00099       <span class="keyword">static</span> <span class="keywordtype">bool</span> Connect(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> bondOrder = 1);
<a name="l00127"></a>00127       <span class="keyword">static</span> <span class="keywordtype">bool</span> Swap(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> d);
<a name="l00134"></a>00134       <span class="comment">//bool Insert(OBMol &amp;mol, int a, int b, std::string smiles, int c, int d);</span>
<a name="l00137"></a>00137 <span class="comment"></span>      <span class="keyword">static</span> <span class="keywordtype">void</span> CorrectStereoBonds(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00141"></a>00141       <span class="keyword">static</span> <span class="keywordtype">void</span> CorrectStereoAtoms(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00144"></a>00144       <span class="keyword">static</span> <span class="keywordtype">bool</span> IsSpiroAtom(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> atomId, <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00149"></a>00149       <span class="keyword">static</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a> GetFragment(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom);
<a name="l00150"></a>00150       <span class="keyword">static</span> <span class="keywordtype">void</span> AddNbrs(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a> &amp;fragment, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom);
<a name="l00151"></a>00151 
<a name="l00152"></a>00152     <span class="keyword">private</span>:
<a name="l00154"></a>00154       <span class="keyword">static</span> std::vector&lt;std::pair&lt;OBSmartsPattern*, std::vector&lt;vector3&gt; &gt; &gt; _fragments;
<a name="l00156"></a>00156       <span class="comment">//  supports the case where the fragments overlap at a spiro atom only.</span>
<a name="l00157"></a>00157       <span class="keyword">static</span> <span class="keywordtype">void</span> ConnectFrags(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;workmol, std::vector&lt;int&gt; match, std::vector&lt;vector3&gt; coords,
<a name="l00158"></a>00158                                std::vector&lt;int&gt; pivot);
<a name="l00160"></a>00160       <span class="keyword">static</span> <span class="keywordtype">void</span> FlipSpiro(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> idx);
<a name="l00161"></a>00161       <span class="keyword">static</span> <span class="keywordtype">bool</span> FixRingStereo(std::vector&lt;std::pair&lt;OBStereo::Ref, bool&gt; &gt; atomIds,
<a name="l00162"></a>00162                                 <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;unfixedcenters);
<a name="l00163"></a>00163       <span class="keyword">static</span> <span class="keywordtype">void</span> AddRingNbrs(<a class="code" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a> &amp;fragment, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom, <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00164"></a>00164       <span class="keyword">static</span> <span class="keywordtype">bool</span> SwapWithVector(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b, <span class="keywordtype">int</span> c, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;newlocation);
<a name="l00165"></a>00165       <span class="keywordtype">bool</span> _keeprings;
<a name="l00166"></a>00166   }; <span class="comment">// class OBBuilder</span>
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 }<span class="comment">// namespace OpenBabel</span>
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 <span class="preprocessor">#endif   // OB_BUILDER_H</span>
<a name="l00171"></a>00171 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
