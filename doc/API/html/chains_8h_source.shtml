<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>chains.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">chains.h</div>  </div>
</div>
<div class="contents">
<a href="chains_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">chains.h - Parse for macromolecule chains and residues</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span>
<a name="l00005"></a>00005 <span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span>
<a name="l00006"></a>00006 <span class="comment">Some portions Copyright (C) 2008 by Tim Vandermeersch</span>
<a name="l00007"></a>00007 <span class="comment"></span>
<a name="l00008"></a>00008 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00009"></a>00009 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00010"></a>00010 <span class="comment"></span>
<a name="l00011"></a>00011 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00012"></a>00012 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00013"></a>00013 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00016"></a>00016 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00017"></a>00017 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00018"></a>00018 <span class="comment">GNU General Public License for more details.</span>
<a name="l00019"></a>00019 <span class="comment">***********************************************************************/</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef OB_CHAINS_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define OB_CHAINS_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a><a class="code" href="chains_8h.shtml#a0a30b6310d4dca99e49673f6e530bdc4">00024</a> <span class="preprocessor">#define MaxMonoAtom 20</span>
<a name="l00025"></a><a class="code" href="chains_8h.shtml#ad6c9530ebbe94406872e1a4eb18b3b7c">00025</a> <span class="preprocessor"></span><span class="preprocessor">#define MaxMonoBond 20</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">namespace </span>OpenBabel
<a name="l00031"></a>00031 {
<a name="l00032"></a>00032 
<a name="l00033"></a>00033   <span class="keyword">class </span>OBAtom;
<a name="l00034"></a>00034   <span class="keyword">class </span>OBMol;
<a name="l00035"></a>00035 
<a name="l00037"></a>00037   <span class="comment">// implementation in chains.cpp</span>
<a name="l00038"></a>00038   <span class="keyword">struct </span><a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a>;
<a name="l00039"></a><a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33">00039</a>   <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a> <a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a>;
<a name="l00040"></a>00040 
<a name="l00049"></a><a class="code" href="classOpenBabel_1_1OBChainsParser.shtml">00049</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBChainsParser.shtml" title="Perceives peptide or nucleotide chains and residues in an OBMol.">OBChainsParser</a>
<a name="l00050"></a>00050   {
<a name="l00051"></a>00051     <span class="keyword">public</span>:
<a name="l00052"></a>00052 
<a name="l00053"></a>00053       <a class="code" href="classOpenBabel_1_1OBChainsParser.shtml" title="Perceives peptide or nucleotide chains and residues in an OBMol.">OBChainsParser</a>(<span class="keywordtype">void</span>);
<a name="l00054"></a>00054       ~<a class="code" href="classOpenBabel_1_1OBChainsParser.shtml" title="Perceives peptide or nucleotide chains and residues in an OBMol.">OBChainsParser</a>(<span class="keywordtype">void</span>);
<a name="l00055"></a>00055 
<a name="l00062"></a>00062       <span class="keywordtype">bool</span> PerceiveChains(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">bool</span> nukeSingleResidue = <span class="keyword">false</span>);
<a name="l00063"></a>00063 
<a name="l00064"></a>00064     <span class="keyword">private</span>: <span class="comment">// internal methods</span>
<a name="l00065"></a>00065 
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 
<a name="l00075"></a>00075       <span class="keywordtype">bool</span> DetermineHetAtoms(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00077"></a>00077 
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 
<a name="l00089"></a>00089       <span class="keywordtype">bool</span> DetermineConnectedChains(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00098"></a>00098       <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> RecurseChain(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i, <span class="keywordtype">int</span> c);
<a name="l00100"></a>00100 
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 
<a name="l00110"></a>00110       <span class="keywordtype">bool</span> DeterminePeptideBackbone(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00121"></a>00121       <span class="keywordtype">void</span> ConstrainBackbone(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a> *templ, <span class="keywordtype">int</span> tmax);
<a name="l00125"></a>00125       <span class="keywordtype">bool</span> MatchConstraint(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom, <span class="keywordtype">int</span> mask);
<a name="l00130"></a>00130       <span class="keywordtype">bool</span> Match2Constraints(<a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a> *templ, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *na, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *nb);
<a name="l00135"></a>00135       <span class="keywordtype">bool</span> Match3Constraints(<a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a> *templ, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *na, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *nb, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *nc);
<a name="l00140"></a>00140       <span class="keywordtype">bool</span> Match4Constraints(<a class="code" href="namespaceOpenBabel.shtml#a8eff09d0456c2308e2afb34e824d9c33" title="Structure template for atomic patterns in residues for OBChainsParser.">Template</a> *templ, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *na, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *nb, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *nc, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *nd);
<a name="l00150"></a>00150       <span class="keywordtype">void</span> TracePeptideChain(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i, <span class="keywordtype">int</span> r);
<a name="l00152"></a>00152 
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 
<a name="l00161"></a>00161       <span class="keywordtype">bool</span>  DeterminePeptideSidechains(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00173"></a>00173       <span class="keywordtype">int</span> IdentifyResidue(<span class="keywordtype">void</span> *tree, <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> seed, <span class="keywordtype">int</span> resno); <span class="comment">// ByteCode *</span>
<a name="l00181"></a>00181 <span class="comment"></span>      <span class="keywordtype">void</span>  AssignResidue(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> r, <span class="keywordtype">int</span> c, <span class="keywordtype">int</span> i);
<a name="l00183"></a>00183 
<a name="l00185"></a>00185 
<a name="l00186"></a>00186 
<a name="l00190"></a>00190       <span class="keywordtype">bool</span>  DetermineHydrogens(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00192"></a>00192 
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 
<a name="l00201"></a>00201       <span class="keywordtype">void</span>  SetResidueInformation(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, <span class="keywordtype">bool</span> nukeSingleResidue);
<a name="l00203"></a>00203 
<a name="l00205"></a>00205 
<a name="l00206"></a>00206 
<a name="l00213"></a>00213       <span class="keywordtype">bool</span>  DetermineNucleicBackbone(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00221"></a>00221       <span class="keywordtype">void</span>  TraceNucleicChain(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i, <span class="keywordtype">int</span> r);
<a name="l00228"></a>00228       <span class="keywordtype">bool</span>  DetermineNucleicSidechains(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00230"></a>00230 
<a name="l00235"></a>00235       <span class="keywordtype">void</span>  SetupMol(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00239"></a>00239       <span class="keywordtype">void</span>  ClearResidueInformation(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00243"></a>00243       <span class="keywordtype">void</span> CleanupMol();
<a name="l00250"></a>00250       <span class="keywordtype">void</span>  DefineMonomer(<span class="keywordtype">void</span> **tree, <span class="keywordtype">int</span> resid, <span class="keyword">const</span> <span class="keywordtype">char</span> *smiles); <span class="comment">// ByteCode **</span>
<a name="l00255"></a>00255 <span class="comment"></span>      <span class="keywordtype">int</span>   IdentifyElement(<span class="keywordtype">char</span> *ptr);
<a name="l00261"></a>00261       <span class="keyword">const</span> <span class="keywordtype">char</span> *ParseSmiles(<span class="keyword">const</span> <span class="keywordtype">char</span> *smiles, <span class="keywordtype">int</span> prev);
<a name="l00265"></a>00265       <span class="keywordtype">void</span> DumpState();
<a name="l00266"></a>00266 
<a name="l00267"></a>00267       <span class="keywordtype">void</span> *PDecisionTree; 
<a name="l00268"></a>00268       <span class="keywordtype">void</span> *NDecisionTree; 
<a name="l00269"></a>00269 
<a name="l00270"></a>00270       <span class="keywordtype">int</span>   ResMonoAtom[<a class="code" href="chains_8h.shtml#a0a30b6310d4dca99e49673f6e530bdc4">MaxMonoAtom</a>];
<a name="l00271"></a>00271       <span class="keywordtype">int</span>   ResMonoBond[<a class="code" href="chains_8h.shtml#ad6c9530ebbe94406872e1a4eb18b3b7c">MaxMonoBond</a>];
<a name="l00272"></a>00272 
<a name="l00273"></a>00273       std::vector&lt;unsigned short&gt; bitmasks;
<a name="l00274"></a>00274       std::vector&lt;bool&gt;           visits;   
<a name="l00275"></a>00275       std::vector&lt;unsigned char&gt;  resids;
<a name="l00276"></a>00276       std::vector&lt;unsigned char&gt;  flags;
<a name="l00277"></a>00277       std::vector&lt;bool&gt;           hetflags;
<a name="l00278"></a>00278       std::vector&lt;int&gt;            atomids;
<a name="l00279"></a>00279       std::vector&lt;short&gt;          resnos;
<a name="l00280"></a>00280       std::vector&lt;short&gt;          sernos;   
<a name="l00281"></a>00281       std::vector&lt;char&gt;           hcounts;
<a name="l00282"></a>00282       std::vector&lt;char&gt;           chains;
<a name="l00283"></a>00283     };
<a name="l00284"></a>00284 
<a name="l00285"></a>00285 }
<a name="l00286"></a>00286 <span class="preprocessor">#endif // OB_CHAINS_H</span>
<a name="l00287"></a>00287 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
