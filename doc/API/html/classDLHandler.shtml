<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>DLHandler Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">DLHandler Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="DLHandler" -->
<p><code>#include &lt;<a class="el" href="dlhandler_8h_source.shtml">openbabel/dlhandler.h</a>&gt;</code></p>

<p><a href="classDLHandler-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#a796e3b4c52affa6141048aa12d326ac5">getConvDirectory</a> (std::string &amp;convPath)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#afbc430181268f2ea18cf3f5a9a6198ab">findFiles</a> (std::vector&lt; std::string &gt; &amp;file_list, const std::string &amp;pattern, const std::string &amp;path)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#a87db0476cc4091a16b9e7a67309253dc">findFiles</a> (std::vector&lt; std::string &gt; &amp;file_list, const std::string &amp;filename)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#aace44b593957d50c6396a1e23d67189d">openLib</a> (const std::string &amp;lib_name)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#a853b3b684971405e16e9f2b464b950bc">getFormatFilePattern</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#ae7b0bd97cdb5896fd2731f2d856f525a">getSeparator</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDLHandler.shtml#ac640b35541b94f0d35525de80c2b003d">Sleep</a> (int n)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Interface for dynamic libraries. </p>
<p>This class defines an interface for finding and opening dynamic loadable libraries on different platforms (e.g., modular plugins) via different source code files. It has only what is needed for <a class="el" href="namespaceOpenBabel.shtml" title="Global namespace for all Open Babel code.">OpenBabel</a> and is not intended to be general purpose. Internally, it is used for dynamic loading and unloading OBFormat file translation modules. </p>
</div><hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a796e3b4c52affa6141048aa12d326ac5"></a><!-- doxytag: member="DLHandler::getConvDirectory" ref="a796e3b4c52affa6141048aa12d326ac5" args="(std::string &amp;convPath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool getConvDirectory </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>convPath</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the directory containing the dynamic library plugins.</p>
<p>The result is stored in <code>convPath</code> and depends on the operating system and build tools.</p>
<p>Linux: always returns OB_MODULE_PATH (defined in src/config.h.cmake).</p>
<p>Windows cygwin: Uses windows' GetModuleHandle to get a handle to the application module. From this, the applications path can be extracted. The appname.exe is removed and ..\lib\openbabel\BABEL_VERSION\ is appended.</p>
<p>Windows MSVC: Uses windows' GetModuleHandle to get a handle to the OBError dll module. From this, the dll's path can be extracted.</p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classDLHandler.shtml#afbc430181268f2ea18cf3f5a9a6198ab">findFiles</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#acb5fa3f38f036bd82ba49a44d6b7a998">OBConversion::LoadFormatFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="afbc430181268f2ea18cf3f5a9a6198ab"></a><!-- doxytag: member="DLHandler::findFiles" ref="afbc430181268f2ea18cf3f5a9a6198ab" args="(std::vector&lt; std::string &gt; &amp;file_list, const std::string &amp;pattern, const std::string &amp;path)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int findFiles </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>file_list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>pattern</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Searches a directory specified by path for files whose name matches a pattern which can include * as a wildcard. If the BABEL_LIBDIR environment variable is set, this will override the <code>path</code> parameter. The path name should include a final separator (\ or /). The routine fills a vector of strings with the matching file names (including path). Note that this is not recursive: it only matches files in the specified path. For example, if path = e:\path\to\ and pattern = *.obf it will return vector entries lik e:\path\to\cmlformat.obf </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of valid files. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#acb5fa3f38f036bd82ba49a44d6b7a998">OBConversion::LoadFormatFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="a87db0476cc4091a16b9e7a67309253dc"></a><!-- doxytag: member="DLHandler::findFiles" ref="a87db0476cc4091a16b9e7a67309253dc" args="(std::vector&lt; std::string &gt; &amp;file_list, const std::string &amp;filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int findFiles </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>file_list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Searches for files which match a full filename (including the path) which contains a wildcard. The routine adds matching file names (including path) to a vector of strings . </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of matching files. If no wildcard in name adds name to vector and returns -1. </dd></dl>

</div>
</div>
<a class="anchor" id="aace44b593957d50c6396a1e23d67189d"></a><!-- doxytag: member="DLHandler::openLib" ref="aace44b593957d50c6396a1e23d67189d" args="(const std::string &amp;lib_name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openLib </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>lib_name</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Open a dynamic library with path <code>lib_name</code>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#acb5fa3f38f036bd82ba49a44d6b7a998">OBConversion::LoadFormatFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="a853b3b684971405e16e9f2b464b950bc"></a><!-- doxytag: member="DLHandler::getFormatFilePattern" ref="a853b3b684971405e16e9f2b464b950bc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * getFormatFilePattern </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The file extension pattern for Open Babel plugin modules (e.g. *.obf on Windows) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConversion.shtml#acb5fa3f38f036bd82ba49a44d6b7a998">OBConversion::LoadFormatFiles()</a>, and <a class="el" href="dlhandler__unix_8cpp.shtml#a49757ecb4390f764ddd3af245302969a">matchFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="ae7b0bd97cdb5896fd2731f2d856f525a"></a><!-- doxytag: member="DLHandler::getSeparator" ref="ae7b0bd97cdb5896fd2731f2d856f525a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char getSeparator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The system directory separator (i.e. "\" on Windows, "/" on UNIX) </dd></dl>

</div>
</div>
<a class="anchor" id="ac640b35541b94f0d35525de80c2b003d"></a><!-- doxytag: member="DLHandler::Sleep" ref="ac640b35541b94f0d35525de80c2b003d" args="(int n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Sleep </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Call the system routine to wait (sleep) this process for <code>n</code> seconds. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="dlhandler_8h_source.shtml">dlhandler.h</a></li>
<li><a class="el" href="dlhandler__unix_8cpp.shtml">dlhandler_unix.cpp</a></li>
<li><a class="el" href="dlhandler__win32_8cpp.shtml">dlhandler_win32.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:09 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
