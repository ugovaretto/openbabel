<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>CairoPainter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml">CairoPainter</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">CairoPainter Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::CairoPainter" --><!-- doxytag: inherits="OpenBabel::OBPainter" -->
<p><code>#include &lt;<a class="el" href="cairopainter_8h_source.shtml">cairopainter.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for CairoPainter:</div>
<div class="dyncontent">
<div class="center"><img src="classOpenBabel_1_1CairoPainter__inherit__graph.png" border="0" usemap="#CairoPainter_inherit__map" alt="Inheritance graph"/></div>
<map name="CairoPainter_inherit__map" id="CairoPainter_inherit__map">
<area shape="rect" id="node2" href="classOpenBabel_1_1OBPainter.shtml" title="Abstract painter base class used by OBDepict." alt="" coords="12,5,103,35"/></map>
<center><span class="legend">[<a href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classOpenBabel_1_1CairoPainter-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ac3b270ce7060e236a9c4d1f88190dab9">CairoPainter</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ac4b92d3b5bf40820898d1691f244c47b">~CairoPainter</a> ()</td></tr>
<tr><td colspan="2"><div class="groupHeader">OBPainter methods</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a550d23b07eacaa9b599c86821c72d918">NewCanvas</a> (double width, double height)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#af8e4fa4f6521108fdad88c402c3963e0">IsGood</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a9fd65900e68befc5f17d836c58d74590">SetFontFamily</a> (const std::string &amp;fontFamily)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a642db2c67b0a803ddf516a309cf3db63">SetFontSize</a> (int pointSize)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ab8eebb0cb991191d0add843b581a6995">SetFillColor</a> (const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;color)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ac15e0798f03a90030b7476216ea80c9b">SetPenColor</a> (const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;color)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a533cee84ce534e491635dbfa48a38c88">SetPenWidth</a> (double width)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a3743d551c10de455c399c8f9a940b88c">DrawLine</a> (double x1, double y1, double x2, double y2)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ad58425475eb726e5a312d33f6a9b18a8">DrawPolygon</a> (const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp;points)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ae85b79bdf3eca6e115ca27ab9d4a3fcc">DrawCircle</a> (double x, double y, double r)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a69d3479c35fd7b378e1ac94ded85d3ad">DrawText</a> (double x, double y, const std::string &amp;text)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBFontMetrics.shtml">OBFontMetrics</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a28e06a6647207a2da44748adb732ad7c">GetFontMetrics</a> (const std::string &amp;text)</td></tr>
<tr><td colspan="2"><div class="groupHeader">CairoPainter specific</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a4846cb7387845b2cf0ae91e06daa918e">WriteImage</a> (const std::string &amp;filename)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a4d4f4af7bb982d7292b4bf598f3f559f">WriteImage</a> (std::ostream &amp;ofs, int newWidth=300, int newHeight=300)</td></tr>
</table>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac3b270ce7060e236a9c4d1f88190dab9"></a><!-- doxytag: member="OpenBabel::CairoPainter::CairoPainter" ref="ac3b270ce7060e236a9c4d1f88190dab9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1CairoPainter.shtml">CairoPainter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac4b92d3b5bf40820898d1691f244c47b"></a><!-- doxytag: member="OpenBabel::CairoPainter::~CairoPainter" ref="ac4b92d3b5bf40820898d1691f244c47b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1CairoPainter.shtml">CairoPainter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a550d23b07eacaa9b599c86821c72d918"></a><!-- doxytag: member="OpenBabel::CairoPainter::NewCanvas" ref="a550d23b07eacaa9b599c86821c72d918" args="(double width, double height)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NewCanvas </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a new canvas to paint on with size <code>width</code> x <code>height</code>. <a class="el" href="classOpenBabel_1_1OBDepict.shtml" title="2D depiction of molecules using OBPainter.">OBDepict</a> will always call NewCanvas before performing any drawing operations. Painters that are capable of drawing on a previously unspecified area don't need to implement this. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a135a190c2d8717af6c4b491504a17458">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="af8e4fa4f6521108fdad88c402c3963e0"></a><!-- doxytag: member="OpenBabel::CairoPainter::IsGood" ref="af8e4fa4f6521108fdad88c402c3963e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsGood </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Before <a class="el" href="classOpenBabel_1_1OBDepict.shtml" title="2D depiction of molecules using OBPainter.">OBDepict</a> performes any drawing operation, this method is called to check if the painter is ready to start drawing. If this method returns false, drawing is aborted. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a6b00885efc9bf26c5868f53f13ff3995">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a9fd65900e68befc5f17d836c58d74590"></a><!-- doxytag: member="OpenBabel::CairoPainter::SetFontFamily" ref="a9fd65900e68befc5f17d836c58d74590" args="(const std::string &amp;fontFamily)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFontFamily </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>fontFamily</em></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's font family. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a7180ada44a877dec7004fe197ac353d9">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a642db2c67b0a803ddf516a309cf3db63"></a><!-- doxytag: member="OpenBabel::CairoPainter::SetFontSize" ref="a642db2c67b0a803ddf516a309cf3db63" args="(int pointSize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFontSize </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pointSize</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's font point size. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a39a2ee83c7d868d98fb6d6505448368c">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="ab8eebb0cb991191d0add843b581a6995"></a><!-- doxytag: member="OpenBabel::CairoPainter::SetFillColor" ref="ab8eebb0cb991191d0add843b581a6995" args="(const OBColor &amp;color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFillColor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's fill color. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a38087c772403c5a64295e847e52d88f8">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="ac15e0798f03a90030b7476216ea80c9b"></a><!-- doxytag: member="OpenBabel::CairoPainter::SetPenColor" ref="ac15e0798f03a90030b7476216ea80c9b" args="(const OBColor &amp;color)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetPenColor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's pen color. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a10c3142535e0162c928ad36b9c7ad7ff">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a533cee84ce534e491635dbfa48a38c88"></a><!-- doxytag: member="OpenBabel::CairoPainter::SetPenWidth" ref="a533cee84ce534e491635dbfa48a38c88" args="(double width)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetPenWidth </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's pen width. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a6a49a7a87584f4321e7a9c2d1d1cd4ae">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a3743d551c10de455c399c8f9a940b88c"></a><!-- doxytag: member="OpenBabel::CairoPainter::DrawLine" ref="a3743d551c10de455c399c8f9a940b88c" args="(double x1, double y1, double x2, double y2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DrawLine </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Draw a line from <code>x1</code>, <code>y1</code> to <code>x2</code>, <code>y2</code>. The line is drawn using the current pen color and width. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a8e28d0754cf8475fc015fd6b82d064eb">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="ad58425475eb726e5a312d33f6a9b18a8"></a><!-- doxytag: member="OpenBabel::CairoPainter::DrawPolygon" ref="ad58425475eb726e5a312d33f6a9b18a8" args="(const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp;points)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DrawPolygon </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>points</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Draw a polygon by connecting consecutive points. The last point will be connected to the first one. The lines are drawn using the current pen color and width. The area inside the polygon is filled with the current fill color. </p>

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a47edaf962916310d2b3eb21aeecace05">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="ae85b79bdf3eca6e115ca27ab9d4a3fcc"></a><!-- doxytag: member="OpenBabel::CairoPainter::DrawCircle" ref="ae85b79bdf3eca6e115ca27ab9d4a3fcc" args="(double x, double y, double r)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DrawCircle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#a863bcec97ffd4ca82a3669860943ad2c">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a69d3479c35fd7b378e1ac94ded85d3ad"></a><!-- doxytag: member="OpenBabel::CairoPainter::DrawText" ref="a69d3479c35fd7b378e1ac94ded85d3ad" args="(double x, double y, const std::string &amp;text)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DrawText </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#abd406d7a4ecb123aaf335a5eed7a559f">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a28e06a6647207a2da44748adb732ad7c"></a><!-- doxytag: member="OpenBabel::CairoPainter::GetFontMetrics" ref="a28e06a6647207a2da44748adb732ad7c" args="(const std::string &amp;text)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBFontMetrics.shtml">OBFontMetrics</a> GetFontMetrics </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implements <a class="el" href="classOpenBabel_1_1OBPainter.shtml#aec3268ffd531e78091929eaaaf99634a">OBPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a4846cb7387845b2cf0ae91e06daa918e"></a><!-- doxytag: member="OpenBabel::CairoPainter::WriteImage" ref="a4846cb7387845b2cf0ae91e06daa918e" args="(const std::string &amp;filename)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void WriteImage </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4d4f4af7bb982d7292b4bf598f3f559f"></a><!-- doxytag: member="OpenBabel::CairoPainter::WriteImage" ref="a4d4f4af7bb982d7292b4bf598f3f559f" args="(std::ostream &amp;ofs, int newWidth=300, int newHeight=300)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void WriteImage </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>ofs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>newWidth</em> = <code>300</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>newHeight</em> = <code>300</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="cairopainter_8h_source.shtml">cairopainter.h</a></li>
<li><a class="el" href="cairopainter_8cpp.shtml">cairopainter.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
