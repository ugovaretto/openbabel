<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBAtom Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">OBAtom Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBAtom" --><!-- doxytag: inherits="OpenBabel::OBBase" -->
<p><code>#include &lt;<a class="el" href="atom_8h_source.shtml">openbabel/atom.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBAtom:</div>
<div class="dyncontent">
<div class="center"><img src="classOpenBabel_1_1OBAtom__inherit__graph.png" border="0" usemap="#OBAtom_inherit__map" alt="Inheritance graph"/></div>
<map name="OBAtom_inherit__map" id="OBAtom_inherit__map">
<area shape="rect" id="node2" href="classOpenBabel_1_1OBBase.shtml" title="Base Class." alt="" coords="7,5,84,35"/></map>
<center><span class="legend">[<a href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classOpenBabel_1_1OBAtom-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">StereoFlag</a> </td></tr>
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad5b5ccb4d16c9ce269b65ccc4e7fa1ae">OBAtom</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a52876d92719e68259ca43bf5cd19349a">~OBAtom</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fa1416db7f7f223cb5d77cc7a916f2e">operator=</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a43c3ac9fe061bbb6a7e714759400e35d">operator==</a> (const <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *other) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">Duplicate</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae93c2ea0464618c797ae509fb3f3f455">GetDistance</a> (int index)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac2a0e52810ad157f41a9ecbbae90ee48">GetDistance</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a02dada3ad01505b2d4ddcbe7b9f006c8">GetAngle</a> (int b, int c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6d6d9bdda3f480d358c14b2010034d41">GetAngle</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *b, <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">CastAndClear</a> (bool clear=true)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6726eb1601555e8e7d712c43416e6af7">GetTitle</a> (bool replaceNewlines=true) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a> (const char *)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to set atomic information</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab994a975e39f5c62288f4f972b6f90c9">SetIdx</a> (int idx)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a383094c5a19383cf09f3dfb4c1de1da2">SetId</a> (unsigned long id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9ca5228f1b568f7076cd930ad0902a83">SetHyb</a> (int hyb)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a573a9f96a971854938ab2db5eb4d4851">SetAtomicNum</a> (int atomicnum)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a90b69b7f0259fe3dcbde073f36ebf1c8">SetIsotope</a> (unsigned int iso)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4ebf98749415a00a56fdbc77f87fdc87">SetImplicitValence</a> (int val)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae048690c14e9258cc653231a56d5dfda">IncrementImplicitValence</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7acb91a903a31d698dc25d296b988f7f">DecrementImplicitValence</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa1d084182d025e6fa000b928807d7689">SetFormalCharge</a> (int fcharge)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a299285ee1effd21803b3c042a376e149">SetSpinMultiplicity</a> (short spin)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a473f946fc45e9a7e5479d260e4cfd107">SetType</a> (const char *type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aadd853960ce2a2382a7d2d451d5ab450">SetType</a> (const std::string &amp;type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a963851351ab3c084233a82d367f15607">SetPartialCharge</a> (double pcharge)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3b9594d66359ec366d2590459d0b617f">SetVector</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad69e26aebea5d59b5d79ccd514631297">SetVector</a> (const double x, const double y, const double z)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671">SetCoordPtr</a> (double **c)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5f11d9c7a42f6be6e4b6272526f3ad09">SetVector</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184">SetResidue</a> (<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a962b3010305cfb80ba816a0e54097dee">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *ptr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3d29498c15007d9b6729e26784f23a5b">SetAromatic</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2fcf3bf429f36281a43c879e40e75f34">UnsetAromatic</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adf069c94123595712cb7fa847b87e449">SetClockwiseStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af328f0aa99465103074b1d336c393919">SetAntiClockwiseStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6ddbbbc5f8e185c43e634a0425311275">SetPositiveStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aea322d9d450ee48fb2e89a4f7c34deda">SetNegativeStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afdf42f73fe8a0cec0db3c3e544830fcc">UnsetStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae6a016e7f67cf564e5f80254c425f65c">SetInRing</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad4e5a4c67101743f644b047b632d058b">SetChiral</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fa3634d92a924e5af69208768e839a5">ClearCoordPtr</a> ()</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to retrieve atomic information</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a25098f4715711b9755fa50ca18ac2f99">GetFormalCharge</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade227de93fbe080fc1c2854e530df81a">GetAtomicNum</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned short int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adfdbf1a8c9bf80588039b4f08cfc1069">GetIsotope</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a14ccfaca2264c8f8141f4c0ed7343c25">GetSpinMultiplicity</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a635bb1edc5190cbe33eda4a34843be9b">GetAtomicMass</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a10b7a478773fee2a1a2bcc04c5ae5d0b">GetExactMass</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a80892a7fdfc7180a85160279c1186952">GetIdx</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae6b8fa1646a64b9fbe745af4719920ec">GetIndex</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1e4a97cdb0dce128f98c6c08ec7c85e4">GetId</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7c533796dfe7ce75f2a755b668ebd5c">GetCoordinateIdx</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a042ed0fe3ac49c9505f9f79d07469423">GetCIdx</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aebccc307cd3036d7a2ad0c80e90aef22">GetValence</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f510d8274d4d2a835c7c438aa794e57">GetHyb</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade9a7b6271ba3fb38bbaa20602d736ce">GetImplicitValence</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8def681dc1ce0b36145de5a8f4a46d9a">GetHvyValence</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af0cf20008ef74a7af30b2df9d9b7bc7a">GetHeteroValence</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7f02f5442f2ed3aa2045587d3319ab7e">GetType</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a140fe887c529e7b90eae3de197e8ceb6">GetX</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a7e0e3acd8a6e4016522b9cdbc8f5aeb5">GetY</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a885f0eb530803b77acf8ac2055c59ee8">GetZ</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9ccf82e6805fa3a2f34b977e1db6f4f9">x</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a0acce91d627a918ea20832d9b2fb8b93">y</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#abe77460b0bada97d73fc158579294931">z</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af9dd6c6924f23479933e0b8779a4bec2">GetCoordinate</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad15ec0c7f87cea35b02269fd53be159c">GetVector</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a33fed269ac5a6e12f2d58d09e623191a">GetVector</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeccf78db112723467e7756a5734c82b9">GetPartialCharge</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae8533afa0177a165ca51941872f85aee">GetResidue</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afac526c6de01759b568caddae4c4f2c3">GetResidue</a> (bool perception)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad8480b61159bc6cb861b17341dc2b29a">GetParent</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a818650a1b97f10bbc2204520ef65ad27">GetNewBondVector</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;v, double length)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aed271572fc66bbef1751cac6ccf3cade">GetBond</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad3bbdba4326cf884eeb110b02f7caef7">GetNextAtom</a> ()</td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac4ea48df79e239b506d3501dd42adde9">BeginBonds</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a87859f951e8ea33345b76d93014486c9">EndBonds</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad9d21c9b65678905c6d7d461160fcd9f">BeginBond</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a133c681e9534e7255b1fae272c40a511">NextBond</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a60c99e07cbd015b89dd0f41525150a74">BeginNbrAtom</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a37ef92842ef05f2084102f45b6a05caa">NextNbrAtom</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Addition of residue/bond info. for an atom</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a616b5aac27eec22be5be998bc15d6349">NewResidue</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3e3b0d3b268e6abe26f87d4c422c31cd">AddResidue</a> (<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *res)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a85fa173a3c3f488fc691a11eaad81439">DeleteResidue</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5abeab08afbd305a51b9a9b5bd8fe356">AddBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1773630938cf6a028368394b666d06bf">InsertBond</a> (<a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;i, <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af47adec983369f903208f5fbae863406">DeleteBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a03fe71c8266435b7a76682e5c1472894">ClearBond</a> ()</td></tr>
<tr><td colspan="2"><div class="groupHeader">Builder utilities</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">HtoMethyl</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">SetHybAndGeom</a> (int)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1a92c9eb656eb9ef43f03c717a38adc3">ForceNoH</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a55e8f858833eee0408aee7b0f1b9c22c">HasNoHForced</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a03e54abd32434bd610bfd4430d91b7b9">ForceImplH</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8920c0ef5c32f64887d09c3b2da857d5">HasImplHForced</a> ()</td></tr>
<tr><td colspan="2"><div class="groupHeader">Property information</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a599391b68a70a3a6ea87511e74e142e7">CountFreeOxygens</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae09ed28481ac044dab3f31c8605b44a9">ImplicitHydrogenCount</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2f3a84cfc5519d13e49880b6d2cc1b4e">ExplicitHydrogenCount</a> (bool ExcludeIsotopes=false) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7215961220abaa4e684bfafeca87bb0">MemberOfRingCount</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae7d5797a4c8b99c943f943034e3287d8">MemberOfRingSize</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4a027cbfb230638ae056ccd04b48fe8c">CountRingBonds</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a83db73f33e51b011f21358bd5a0463ff">SmallestBondAngle</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae9468871377da00c7b949b20d6d17f3d">AverageBondAngle</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6e7269e46f6f39fb598a9f3b74bba06c">BOSum</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a566764b6577e8ba6a4959bd0f2e25076">KBOSum</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae3177d9e8b583d3cda02b90c141894c5">HasResidue</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab633bc0f8f40dfcedf42940ab8a5316c">IsHydrogen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4659948e851d094d7ffddcc7d9c9ff4a">IsHydrogen</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1f0a167775136e911cd349cdd8923b24">IsCarbon</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aacb82bc548922e4f1276a255f212f143">IsNitrogen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7e8030ce19d79c9ad0b3cfbf116dc59">IsOxygen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa71152591d5cc51fc2f3701ff7de7dfd">IsSulfur</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab8c7f052f9380b98eef3b83da640eba3">IsPhosphorus</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4ef863ca7ed29e266960966a66dc8fb8">IsAromatic</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa17842bd610dc8b2ede2fe324738fe5b">IsInRing</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9ca260c28f84147e45c377cdb2254144">IsInRingSize</a> (int) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad89058fb178a4b056a0786a5ddc8e162">IsHeteroatom</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5d150980792220d4929ac312bfce1636">IsNotCorH</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a35892bf1255c1b8824c870e5460fd641">IsConnected</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a895cbd0d89d126571465b59ee0a3b79a">IsOneThree</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad1b5c7353abc13edd81339fc58206a3b">IsOneFour</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7dd88da6d7a1e72f636c50586d5551d">IsCarboxylOxygen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5b1d4c9a297629beacb66c0ef04070e9">IsPhosphateOxygen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a76ecda2fd4bf9207310088f25f526ea8">IsSulfateOxygen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a256fca254282407b1342875266769463">IsNitroOxygen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac8299dd769242a441864a7ad2fcb92b6">IsAmideNitrogen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6da4cfc5bbc2e4c9b358bccd5d97e51f">IsPolarHydrogen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae519982c28911c0906e9181c46d7bdbc">IsNonPolarHydrogen</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad651ae188decc15fa8ec3907860e585e">IsAromaticNOxide</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63258442848bd8e29e0d5224e145ad83">IsChiral</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">IsAxial</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4d1f38bbe03483629778078dcc4e75a0">IsClockwise</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af3abb70d4f818b9c3e416928afa2e844">IsAntiClockwise</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a9880a080dd0bce244291bde514b67d20">IsPositiveStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a61e5344c34c172e9b889e59255aff6de">IsNegativeStereo</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8844e382c76003229ee5fdd0341aacee">HasChiralitySpecified</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63911efd550113b275239d322670986d">HasChiralVolume</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a63e02252214e540d56815820715f1ae3">IsHbondAcceptor</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a71e3c9571430e3d6587f7b80ee8fb926">IsHbondDonor</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a135d08515315b5daa95e6081dc104a38">IsHbondDonorH</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">HasAlphaBetaUnsat</a> (bool includePandS=true)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#addb891e1fa000764b9030d5e08c0c67a">HasBondOfOrder</a> (unsigned int bo)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4fc49ec59966a08059750ecd2e9d20a5">CountBondsOfOrder</a> (unsigned int bo)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae3d85200b00bf0ad59725175d606acfe">HasNonSingleBond</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#af347b80d156587c2287754345606c78d">HasSingleBond</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a0cb35a21cc08897bc7f9b01ae4561e50">HasDoubleBond</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a11bf8aa7f79e9b9bdef2602808bb794d">HasAromaticBond</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#abfdefac42d3c895920f1f715f0d710a5">MatchesSMARTS</a> (const char *)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aaf61a3ecb8f2926aaf117299388d43c2">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">DeleteData</a> (const std::string &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa6f692332837387535e337413d0100de">CloneData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a69c3286ed127949ba747afcc5b9a514a">DataSize</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#afb56decc1b824c9fad980fc22e1d778c">GetAllData</a> (const unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6368d7673f23186649b2969ade3661d7">Visit</a></td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a0adfe60e7fb18cb7ca2fe3ac5bb6737a">GetFlag</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#adcdab8f96dc4fdc2940749e527087245">SetFlag</a> (int flag)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3a1dc0419a66d2e7288214342de43b7a">HasFlag</a> (int flag)</td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2a4ac28765690d9b074521327cb4876b">_ele</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab3e028e65ae7c0dac55997f2cb7281ce">_impval</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae34265581460024d37fb0ff25d97f110">_type</a> [6]</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6e636025c5db07bf67523b31a55f6327">_fcharge</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad60f474b9381f875e4b6e3f5df457c9a">_isotope</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aec3b74d938a5e47bc6a6627f64d86e27">_spinmultiplicity</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa15238ffbdb1330727678c9d6553d6ba">_parent</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3c7208419c7703e947e9a1c365838b98">_vbond</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#aef178db02607fe00f112bd1a7f5f4d2b">_cidx</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5d400386667c899017669303bdec09cd">_hyb</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5cc9f88f4cc5fda10e7932cd59a87f16">_flags</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae4b9cf0b2f94fc6befff220367fccd0a">_pcharge</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#a91a32f6c060e12e4d188974db5b111d3">_c</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae8dcade9402fad862f0391488350ea3e">_v</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac26545dc3d68694f0a7b6f4a776f7a17">_residue</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBAtom.shtml#accc49a515c7a81154bd46a8ea8a16204">_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Atom class. </p>
<p>To understand the <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> class it is important to state a key decision on which the design was based. The <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> class not only holds data, but facilitates extraction of data perceived from both the atom and the molecule. This prevents the <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> class from becoming overly large and complicated.</p>
<p>A number of data extraction methods perform what is called <a href="http://en.wikipedia.org/wiki/Lazy_evaluation">`Lazy Evaluation,'</a> which is essentially on-the-fly evaluation. For example, when an atom is queried as to whether it is cyclic or what it's hybridization state is the information is perceived automatically. The perception of a particular trait is actually performed on the entire molecule the first time it is requested of an atom or bond, and stored for subsequent requests for the same trait of additional atoms or bonds.The <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> class is similar to <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> and the whole of Open Babel in that data access and modification is done through Get and Set methods.</p>
<p>The following code demonstrates how to print out the atom numbers, element numbers, and coordinates of a molecule: </p>
<div class="fragment"><pre class="fragment">      OBMol mol;

      <a class="code" href="obiter_8h.shtml#afb051cb17b46d381998c24fc41db2a79">FOR_ATOMS_OF_MOL</a>(atom, mol)
      {
         cout &lt;&lt; atom-&gt;GetIdx() &lt;&lt; ` `;
         cout &lt;&lt; atom-&gt;GetAtomicNum() &lt;&lt; ` `;
         cout &lt;&lt; atom-&gt;GetVector() &lt;&lt; endl;
      }
</pre></div><p> A number of the property member functions indicate that atoms have some knowledge of their covalently attached neighbor atoms. Bonding information is partly redundant within a molecule in that an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> has a complete list of bonds in a molecule, and an <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> has a list bonds of which it is a member. The following code demonstrates how an <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> uses its bond information to loop over atoms attached to itself: </p>
<div class="fragment"><pre class="fragment">      OBMol mol;
      <a class="code" href="classOpenBabel_1_1OBAtom.shtml#ad5b5ccb4d16c9ce269b65ccc4e7fa1ae" title="Constructor.">OBAtom</a> *atom;

      atom = mol.GetAtom(1);
      <a class="code" href="obiter_8h.shtml#a18326b3c74bff171f5807ce9725e0c47">FOR_NBORS_OF_ATOM</a>(nbr, atom)
      {
         cout &lt;&lt; <span class="stringliteral">&quot;atom #&quot;</span> &lt;&lt; atom-&gt;GetIdx() &lt;&lt; <span class="stringliteral">&quot; is attached to atom #&quot;</span>
              &lt;&lt; nbr-&gt;GetIdx() &lt;&lt; endl;
      }
</pre></div><p>should produce an output like </p>
<div class="fragment"><pre class="fragment">      atom #1 is attached to atom #2
</pre></div> </div><hr/><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="afbdb429fe4a7d37960636a555de77326"></a><!-- doxytag: member="OpenBabel::OBAtom::StereoFlag" ref="afbdb429fe4a7d37960636a555de77326" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afbdb429fe4a7d37960636a555de77326">StereoFlag</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ad5b5ccb4d16c9ce269b65ccc4e7fa1ae"></a><!-- doxytag: member="OpenBabel::OBAtom::OBAtom" ref="ad5b5ccb4d16c9ce269b65ccc4e7fa1ae" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="a52876d92719e68259ca43bf5cd19349a"></a><!-- doxytag: member="OpenBabel::OBAtom::~OBAtom" ref="a52876d92719e68259ca43bf5cd19349a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a0adfe60e7fb18cb7ca2fe3ac5bb6737a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetFlag" ref="a0adfe60e7fb18cb7ca2fe3ac5bb6737a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetFlag </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>All flags </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>.</p>

</div>
</div>
<a class="anchor" id="adcdab8f96dc4fdc2940749e527087245"></a><!-- doxytag: member="OpenBabel::OBAtom::SetFlag" ref="adcdab8f96dc4fdc2940749e527087245" args="(int flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFlag </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets the bitwise <code>flag</code>. </p>

</div>
</div>
<a class="anchor" id="a3a1dc0419a66d2e7288214342de43b7a"></a><!-- doxytag: member="OpenBabel::OBAtom::HasFlag" ref="a3a1dc0419a66d2e7288214342de43b7a" args="(int flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasFlag </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flag</em></td><td>)</td>
          <td><code> [inline, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>True of the atom has the <code>flag</code> </dd></dl>

</div>
</div>
<a class="anchor" id="a3fa1416db7f7f223cb5d77cc7a916f2e"></a><!-- doxytag: member="OpenBabel::OBAtom::operator=" ref="a3fa1416db7f7f223cb5d77cc7a916f2e" args="(OBAtom &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Assignment. </p>

</div>
</div>
<a class="anchor" id="a43c3ac9fe061bbb6a7e714759400e35d"></a><!-- doxytag: member="OpenBabel::OBAtom::operator==" ref="a43c3ac9fe061bbb6a7e714759400e35d" args="(const OBAtom *other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Equivalence. </p>

</div>
</div>
<a class="anchor" id="af2ee969f23433f548e39a909547869c7"></a><!-- doxytag: member="OpenBabel::OBAtom::Duplicate" ref="af2ee969f23433f548e39a909547869c7" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Duplicate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Duplicate another atom. Copies all information with the exception of index </p>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a class="anchor" id="ad12fd937da5f4b0c4562888252fe214b"></a><!-- doxytag: member="OpenBabel::OBAtom::Clear" ref="ad12fd937da5f4b0c4562888252fe214b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clear all data. Calls <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object.">OBBase::Clear()</a> to handle any generic data. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>True if successful. </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b">OBBase</a>.</p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>.</p>

</div>
</div>
<a class="anchor" id="ab994a975e39f5c62288f4f972b6f90c9"></a><!-- doxytag: member="OpenBabel::OBAtom::SetIdx" ref="ab994a975e39f5c62288f4f972b6f90c9" args="(int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set atom index (i.e., in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa53209ef174b454eb99e269ef59ebbe0">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>.</p>

</div>
</div>
<a class="anchor" id="a383094c5a19383cf09f3dfb4c1de1da2"></a><!-- doxytag: member="OpenBabel::OBAtom::SetId" ref="a383094c5a19383cf09f3dfb4c1de1da2" args="(unsigned long id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetId </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa53209ef174b454eb99e269ef59ebbe0">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a3f9d2bbe4ae3f85ddca39be0a8ff4971">OBMol::operator+=()</a>.</p>

</div>
</div>
<a class="anchor" id="a9ca5228f1b568f7076cd930ad0902a83"></a><!-- doxytag: member="OpenBabel::OBAtom::SetHyb" ref="a9ca5228f1b568f7076cd930ad0902a83" args="(int hyb)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHyb </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>hyb</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set atom hybridization (i.e., 1 = sp, 2 = sp2, 3 = sp3 ...) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ae773554c61c3b4f4c855ead5bec93ee6">OBAtomTyper::AssignHyb()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a class="anchor" id="a573a9f96a971854938ab2db5eb4d4851"></a><!-- doxytag: member="OpenBabel::OBAtom::SetAtomicNum" ref="a573a9f96a971854938ab2db5eb4d4851" args="(int atomicnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAtomicNum </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>atomicnum</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set atomic number. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBChemTsfm.shtml#a1df01dc22c67cc084e1c82b8f9333cab">OBChemTsfm::Apply()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a class="anchor" id="a90b69b7f0259fe3dcbde073f36ebf1c8"></a><!-- doxytag: member="OpenBabel::OBAtom::SetIsotope" ref="a90b69b7f0259fe3dcbde073f36ebf1c8" args="(unsigned int iso)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIsotope </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>iso</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set isotope number (actual atomic weight is tabulated automatically, 0 = most abundant) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ebf98749415a00a56fdbc77f87fdc87"></a><!-- doxytag: member="OpenBabel::OBAtom::SetImplicitValence" ref="a4ebf98749415a00a56fdbc77f87fdc87" args="(int val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetImplicitValence </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the implicit valence to <code>val</code>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#a86b4345447c96d52bd0f44557729d285">OBAtomTyper::AssignImplicitValence()</a>.</p>

</div>
</div>
<a class="anchor" id="ae048690c14e9258cc653231a56d5dfda"></a><!-- doxytag: member="OpenBabel::OBAtom::IncrementImplicitValence" ref="ae048690c14e9258cc653231a56d5dfda" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IncrementImplicitValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Increase the implicit valence by one. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>.</p>

</div>
</div>
<a class="anchor" id="a7acb91a903a31d698dc25d296b988f7f"></a><!-- doxytag: member="OpenBabel::OBAtom::DecrementImplicitValence" ref="a7acb91a903a31d698dc25d296b988f7f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DecrementImplicitValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Decrease the implicit valence by one. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>.</p>

</div>
</div>
<a class="anchor" id="aa1d084182d025e6fa000b928807d7689"></a><!-- doxytag: member="OpenBabel::OBAtom::SetFormalCharge" ref="aa1d084182d025e6fa000b928807d7689" args="(int fcharge)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFormalCharge </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fcharge</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the formal charge of the atom to <code>fcharge</code>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBChemTsfm.shtml#a1df01dc22c67cc084e1c82b8f9333cab">OBChemTsfm::Apply()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="a299285ee1effd21803b3c042a376e149"></a><!-- doxytag: member="OpenBabel::OBAtom::SetSpinMultiplicity" ref="a299285ee1effd21803b3c042a376e149" args="(short spin)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpinMultiplicity </td>
          <td>(</td>
          <td class="paramtype">short&#160;</td>
          <td class="paramname"><em>spin</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the atomic spin to <code>spin</code>. See _spinmultiplicity. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>.</p>

</div>
</div>
<a class="anchor" id="a473f946fc45e9a7e5479d260e4cfd107"></a><!-- doxytag: member="OpenBabel::OBAtom::SetType" ref="a473f946fc45e9a7e5479d260e4cfd107" args="(const char *type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the atomic type symbol (see <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml" title="Atom Type Translation Table.">OBTypeTable</a> and <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges.">OBAtomTyper</a> for more) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a class="anchor" id="aadd853960ce2a2382a7d2d451d5ab450"></a><!-- doxytag: member="OpenBabel::OBAtom::SetType" ref="aadd853960ce2a2382a7d2d451d5ab450" args="(const std::string &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the atomic type symbol (see <a class="el" href="classOpenBabel_1_1OBTypeTable.shtml" title="Atom Type Translation Table.">OBTypeTable</a> and <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges.">OBAtomTyper</a> for more) </p>

</div>
</div>
<a class="anchor" id="a963851351ab3c084233a82d367f15607"></a><!-- doxytag: member="OpenBabel::OBAtom::SetPartialCharge" ref="a963851351ab3c084233a82d367f15607" args="(double pcharge)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetPartialCharge </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>pcharge</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the partial charge to <code>pcharge</code>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBPhModel.shtml#ae078817f50ab066f54fe58eb3d0dfd63">OBPhModel::AssignSeedPartialCharge()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeccf78db112723467e7756a5734c82b9">OBAtom::GetPartialCharge()</a>.</p>

</div>
</div>
<a class="anchor" id="a3b9594d66359ec366d2590459d0b617f"></a><!-- doxytag: member="OpenBabel::OBAtom::SetVector" ref="a3b9594d66359ec366d2590459d0b617f" args="(const vector3 &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the coordinate vector for this atom to <code>v</code> as a <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adaa889d3747ea9e2ba1a83207556dce3">OpenBabel::addFragment()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a56bd19e6ce3d11cd0ccdc0420e91ada3">OpenBabel::ApplyRotMatToBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1b5760b4c75b7631fffb54f84140b3e3">OBMol::BeginModify()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#af20dd57788f4898cd7377dffe63986fc">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, <a class="el" href="namespaceOpenBabel.shtml#a742566d425db558fa968c725f8a708cc">OpenBabel::generateDiagram()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="namespaceOpenBabel.shtml#a23997cd29f45df86f90e4f7de02baccd">OpenBabel::groupRedraw()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae82e7b7b74e5212eada681c15afb77f4">OpenBabel::InternalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f08066361ace92acfa362df93fafd76">OBForceField::LineSearch()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a2a6bafaddf41c8eb9d0bda246bb07c85">OBForceField::NumericalDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a499789742e7b2021f26f8d1cfe04045f">OBForceField::NumericalSecondDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac271a3bf117a79400817b696d11ea4a7">OBForceField::SetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06b2f4ac9f082f41da3ae01d4bb3f1cc">OBForceField::SetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a837dd6b4440b4fe77f23976bbdaa64a3">OBForceField::ValidateSteepestDescent()</a>.</p>

</div>
</div>
<a class="anchor" id="ad69e26aebea5d59b5d79ccd514631297"></a><!-- doxytag: member="OpenBabel::OBAtom::SetVector" ref="ad69e26aebea5d59b5d79ccd514631297" args="(const double x, const double y, const double z)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the coordinate vector for this atom based on <code>x</code> <code>y</code> &amp; <code>z</code>. </p>

</div>
</div>
<a class="anchor" id="aeff361260a8a4e9ea703d5d38f5fc671"></a><!-- doxytag: member="OpenBabel::OBAtom::SetCoordPtr" ref="aeff361260a8a4e9ea703d5d38f5fc671" args="(double **c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetCoordPtr </td>
          <td>(</td>
          <td class="paramtype">double **&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the position of this atom from a pointer-driven array of coordinates. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a10c76fe88720e6ca2e17865b847edbf7">OBMol::SetCoordinates()</a>.</p>

</div>
</div>
<a class="anchor" id="a5f11d9c7a42f6be6e4b6272526f3ad09"></a><!-- doxytag: member="OpenBabel::OBAtom::SetVector" ref="a5f11d9c7a42f6be6e4b6272526f3ad09" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the position of this atom based on the internal pointer array (i.e. from <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671" title="Set the position of this atom from a pointer-driven array of coordinates.">SetCoordPtr()</a> ) </p>

</div>
</div>
<a class="anchor" id="ade786f15ee67979fbb9c48970b22e184"></a><!-- doxytag: member="OpenBabel::OBAtom::SetResidue" ref="ade786f15ee67979fbb9c48970b22e184" args="(OBResidue *res)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetResidue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td>
          <td class="paramname"><em>res</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Attach an <a class="el" href="classOpenBabel_1_1OBResidue.shtml" title="Residue information.">OBResidue</a> <code>res</code> as containing this atom. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>.</p>

</div>
</div>
<a class="anchor" id="a962b3010305cfb80ba816a0e54097dee"></a><!-- doxytag: member="OpenBabel::OBAtom::SetParent" ref="a962b3010305cfb80ba816a0e54097dee" args="(OBMol *ptr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Attach an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> <code>ptr</code> as the parent container for this atom. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa53209ef174b454eb99e269ef59ebbe0">OBMol::AddAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>.</p>

</div>
</div>
<a class="anchor" id="a3d29498c15007d9b6729e26784f23a5b"></a><!-- doxytag: member="OpenBabel::OBAtom::SetAromatic" ref="a3d29498c15007d9b6729e26784f23a5b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Mark atom as being aromatic. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a2fcf3bf429f36281a43c879e40e75f34"></a><!-- doxytag: member="OpenBabel::OBAtom::UnsetAromatic" ref="a2fcf3bf429f36281a43c879e40e75f34" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clear aromatic information from the atom. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>.</p>

</div>
</div>
<a class="anchor" id="adf069c94123595712cb7fa847b87e449"></a><!-- doxytag: member="OpenBabel::OBAtom::SetClockwiseStereo" ref="adf069c94123595712cb7fa847b87e449" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetClockwiseStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000001">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a class="anchor" id="af328f0aa99465103074b1d336c393919"></a><!-- doxytag: member="OpenBabel::OBAtom::SetAntiClockwiseStereo" ref="af328f0aa99465103074b1d336c393919" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAntiClockwiseStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000002">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a class="anchor" id="a6ddbbbc5f8e185c43e634a0425311275"></a><!-- doxytag: member="OpenBabel::OBAtom::SetPositiveStereo" ref="a6ddbbbc5f8e185c43e634a0425311275" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetPositiveStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000003">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="aea322d9d450ee48fb2e89a4f7c34deda"></a><!-- doxytag: member="OpenBabel::OBAtom::SetNegativeStereo" ref="aea322d9d450ee48fb2e89a4f7c34deda" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNegativeStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000004">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="afdf42f73fe8a0cec0db3c3e544830fcc"></a><!-- doxytag: member="OpenBabel::OBAtom::UnsetStereo" ref="afdf42f73fe8a0cec0db3c3e544830fcc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void UnsetStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000005">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a class="anchor" id="ae6a016e7f67cf564e5f80254c425f65c"></a><!-- doxytag: member="OpenBabel::OBAtom::SetInRing" ref="ae6a016e7f67cf564e5f80254c425f65c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetInRing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Mark an atom as belonging to at least one ring. </p>

</div>
</div>
<a class="anchor" id="ad4e5a4c67101743f644b047b632d058b"></a><!-- doxytag: member="OpenBabel::OBAtom::SetChiral" ref="ad4e5a4c67101743f644b047b632d058b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChiral </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Mark an atom as being chiral with unknown stereochemistry. </p>

</div>
</div>
<a class="anchor" id="a3fa3634d92a924e5af69208768e839a5"></a><!-- doxytag: member="OpenBabel::OBAtom::ClearCoordPtr" ref="a3fa3634d92a924e5af69208768e839a5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ClearCoordPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clear the internal coordinate pointer. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1b5760b4c75b7631fffb54f84140b3e3">OBMol::BeginModify()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>.</p>

</div>
</div>
<a class="anchor" id="a25098f4715711b9755fa50ca18ac2f99"></a><!-- doxytag: member="OpenBabel::OBAtom::GetFormalCharge" ref="a25098f4715711b9755fa50ca18ac2f99" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetFormalCharge </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the formal charge for this atom </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBChargeModel.shtml#aefec0fbdf06bb4199614da22f1a9deee">OBChargeModel::FillChargeVectors()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab78d46b60f04702fa6f450ef6f8dae62">OBMol::GetTotalCharge()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6d03ef3f811fa2c085694ccbf76051d4">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a class="anchor" id="ade227de93fbe080fc1c2854e530df81a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAtomicNum" ref="ade227de93fbe080fc1c2854e530df81a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetAtomicNum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the atomic number for this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a69c4665c3756720ac6f0d62b2488fdd6">OpenBabel::GetCorrectedBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a5a63a8b7f30958105ce72602da6715e9">OBBond::GetEquibLength()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="namespaceOpenBabel.shtml#add2cdb4d7ec3918bac8fa18eb32d4d4c">OpenBabel::isFerroceneBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae519982c28911c0906e9181c46d7bdbc">OBAtom::IsNonPolarHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6da4cfc5bbc2e4c9b358bccd5d97e51f">OBAtom::IsPolarHydrogen()</a>, <a class="el" href="namespaceOpenBabel.shtml#a7b44d43b56950aff23fbca88664ad996">OpenBabel::isPotentialAromaticAtom()</a>, <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml#a4cc21e93fd84c4713b24d965cb90a28c">OBQueryAtom::Matches()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a class="anchor" id="adfdbf1a8c9bf80588039b4f08cfc1069"></a><!-- doxytag: member="OpenBabel::OBAtom::GetIsotope" ref="adfdbf1a8c9bf80588039b4f08cfc1069" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short int GetIsotope </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the isotope for this atom, if specified, or 0 for unspecified </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2f3a84cfc5519d13e49880b6d2cc1b4e">OBAtom::ExplicitHydrogenCount()</a>.</p>

</div>
</div>
<a class="anchor" id="a14ccfaca2264c8f8141f4c0ed7343c25"></a><!-- doxytag: member="OpenBabel::OBAtom::GetSpinMultiplicity" ref="a14ccfaca2264c8f8141f4c0ed7343c25" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetSpinMultiplicity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the atomic spin, e.g., 0 (default) for normal atoms - note that this value is a convention, 2 for radical 1 or 3 for carbene </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa431b859ed26f5a45e6ddc3448da1d1f">OBMol::GetTotalSpinMultiplicity()</a>.</p>

</div>
</div>
<a class="anchor" id="a635bb1edc5190cbe33eda4a34843be9b"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAtomicMass" ref="a635bb1edc5190cbe33eda4a34843be9b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAtomicMass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the atomic mass of this atom given by standard IUPAC average molar mass </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a77cd52b60b431c19aa7debcd0d92e07d">OBMol::GetMolWt()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>.</p>

</div>
</div>
<a class="anchor" id="a10b7a478773fee2a1a2bcc04c5ae5d0b"></a><!-- doxytag: member="OpenBabel::OBAtom::GetExactMass" ref="a10b7a478773fee2a1a2bcc04c5ae5d0b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetExactMass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the atomic mass of given by the isotope (default of 0 gives the most abundant isotope) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7cac960f30506aa53d083983845032df">OBMol::GetExactMass()</a>.</p>

</div>
</div>
<a class="anchor" id="a80892a7fdfc7180a85160279c1186952"></a><!-- doxytag: member="OpenBabel::OBAtom::GetIdx" ref="a80892a7fdfc7180a85160279c1186952" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the internal atom index (e.g., inside an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa53209ef174b454eb99e269ef59ebbe0">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a56bd19e6ce3d11cd0ccdc0420e91ada3">OpenBabel::ApplyRotMatToBond()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#af20dd57788f4898cd7377dffe63986fc">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a902077219ff1df4935790b354a00909b">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a7145217d4de73e243d2d3888dac404ba">OpenBabel::CartesianToInternal()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af74913b3d793c41d1f005afdba11da35">OBMol::ContigFragList()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a568e42fdfa07962a14761bb9875ee138">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8f302cc167630d63e3ca5a4c4d86e41b">OpenBabel::CreateNewClassVector()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ae259c581e29bfc30fe551b6d54b1a0b1">OBMolAtomBFSIter::CurrentDepth()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="namespaceOpenBabel.shtml#a31ce8b089ca36508940585406a2f93f1">OpenBabel::expand_cycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a9645071cedc98dac304402a63e32d700">OpenBabel::expand_kekulize_lssr()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="namespaceOpenBabel.shtml#a62de79552e98ffdb88a9b8509a705158">OpenBabel::expandKekulize()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">OBSmartsMatcher::FastSingleMatch()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1205b2669e02dbc289c65ab1f56110c1">OBMol::FindChildren()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa797df5bf72cb5e220e13171dd9c7d4a">OBMol::FindLargestFragment()</a>, <a class="el" href="classOpenBabel_1_1OBRTree.shtml#a90ece8ae13e0c49b7c2c0b0bef2df3a0">OBRTree::GetAtomIdx()</a>, <a class="el" href="namespaceOpenBabel.shtml#a534fe2a629963b79ffbd499f461ca5df">OpenBabel::GetDFFVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#a04fb8cae80f1866e2921853c509b07b4">OpenBabel::getFragment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a3ab05c6d2aa0e1597398b85b825b57b1">OBBuilder::GetFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad0da17ffd83c1041f1d0657404b4724d">OBForceField::GetGradient()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac4260148aa21c7ada7d625bc0c6f2f7a">OBMol::GetGTDVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="namespaceOpenBabel.shtml#a07faa5acbed4a3cbbfd0d711321c0439">OpenBabel::has_leftover_electrons()</a>, <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae82e7b7b74e5212eada681c15afb77f4">OpenBabel::InternalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ab91f9d866c216bcb3ffc5aa0774b5177">OBBond::IsClosure()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abf7ff40c898c129bba2020623f7394b3">OBRotorList::IsFixedBond()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#acafd9be7a3a74bed05e552a20aa0fccf">OBForceField::IsInSameRing()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a30bcd8070ca5df7d8f9c665e22666d2e">OBRing::IsMember()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#abfdefac42d3c895920f1f715f0d710a5">OBAtom::MatchesSMARTS()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad2762de927ca28384c48bf618603aab2">OBMol::NewAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ac46bde575f155b4c67ec277d7659a847">OBMolAtomBFSIter::OBMolAtomBFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#a30e32a5f76406721c6e04f431e2d46bc">OBMolAtomDFSIter::OBMolAtomDFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a19ad5800c1b20981621429c4c16a845e">OBMolPairIter::OBMolPairIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#aaf97dbc49b4f8743f21874c99257de73">OBMolAtomDFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#aa2197b65eb45814b73aac6f4f061e436">OBMolAtomBFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a82f19c09f49162a5d747e6d302f2bd74">OBMolPairIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3fa1416db7f7f223cb5d77cc7a916f2e">OBAtom::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a43c3ac9fe061bbb6a7e714759400e35d">OBAtom::operator==()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#aad45f9f1cd93fdef9c658091f034cce5">OBAromaticTyper::PropagatePotentialAromatic()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afa417798ba7c13bf75a7ab04f2803cdb">OBMol::RenumberAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a501e76993e9deb8ec8ab24c464d4ed3c">OBMol::SetTorsion()</a>, <a class="el" href="classOpenBabel_1_1OBProxGrid.shtml#a396800b8a8f488a60854d5ae69c89658">OBProxGrid::Setup()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a2530846ca78e83a8050a28ccbbc76059">OBSmartsMatcher::SetupAtomMatchTable()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6d03ef3f811fa2c085694ccbf76051d4">OBMol::start_kekulize()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="ae6b8fa1646a64b9fbe745af4719920ec"></a><!-- doxytag: member="OpenBabel::OBAtom::GetIndex" ref="ae6b8fa1646a64b9fbe745af4719920ec" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>.</p>

</div>
</div>
<a class="anchor" id="a1e4a97cdb0dce128f98c6c08ec7c85e4"></a><!-- doxytag: member="OpenBabel::OBAtom::GetId" ref="a1e4a97cdb0dce128f98c6c08ec7c85e4" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long GetId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa53209ef174b454eb99e269ef59ebbe0">OBMol::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#af20dd57788f4898cd7377dffe63986fc">OBBuilder::Build()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a class="anchor" id="ab7c533796dfe7ce75f2a755b668ebd5c"></a><!-- doxytag: member="OpenBabel::OBAtom::GetCoordinateIdx" ref="ab7c533796dfe7ce75f2a755b668ebd5c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetCoordinateIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the index into a pointer-driven array as used by GetCoordPtr() or <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671" title="Set the position of this atom from a pointer-driven array of coordinates.">SetCoordPtr()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a042ed0fe3ac49c9505f9f79d07469423"></a><!-- doxytag: member="OpenBabel::OBAtom::GetCIdx" ref="a042ed0fe3ac49c9505f9f79d07469423" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetCIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000006">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7c533796dfe7ce75f2a755b668ebd5c">GetCoordinateIdx()</a> instead </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="namespaceOpenBabel.shtml#a3d3039fda855c4c8c37c8345f0b51a64">OpenBabel::SetRotorToAngle()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a501e76993e9deb8ec8ab24c464d4ed3c">OBMol::SetTorsion()</a>.</p>

</div>
</div>
<a class="anchor" id="aebccc307cd3036d7a2ad0c80e90aef22"></a><!-- doxytag: member="OpenBabel::OBAtom::GetValence" ref="aebccc307cd3036d7a2ad0c80e90aef22" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The current number of explicit connections </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#a86b4345447c96d52bd0f44557729d285">OBAtomTyper::AssignImplicitValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="namespaceOpenBabel.shtml#ae050b0cbe133308c07688d2438155504">OpenBabel::construct_c_matrix()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="namespaceOpenBabel.shtml#add2cdb4d7ec3918bac8fa18eb32d4d4c">OpenBabel::isFerroceneBond()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6d03ef3f811fa2c085694ccbf76051d4">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a class="anchor" id="a4f510d8274d4d2a835c7c438aa794e57"></a><!-- doxytag: member="OpenBabel::OBAtom::GetHyb" ref="a4f510d8274d4d2a835c7c438aa794e57" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHyb </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The hybridization of this atom: 1 for sp, 2 for sp2, 3 for sp3, 4 for sq. planar, 5 for trig. bipy, 6 for octahedral </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a69c4665c3756720ac6f0d62b2488fdd6">OpenBabel::GetCorrectedBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a5a63a8b7f30958105ce72602da6715e9">OBBond::GetEquibLength()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a51618686d8ad1b5f66ff2fc2c607493e">OBAtom::HtoMethyl()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>.</p>

</div>
</div>
<a class="anchor" id="ade9a7b6271ba3fb38bbaa20602d736ce"></a><!-- doxytag: member="OpenBabel::OBAtom::GetImplicitValence" ref="ade9a7b6271ba3fb38bbaa20602d736ce" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetImplicitValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The implicit valence of this atom type (i.e. maximum number of connections expected) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5efe4ccada855f2e0c4b0f57614f8607">OBAromaticTyper::AssignAromaticFlags()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#a86b4345447c96d52bd0f44557729d285">OBAtomTyper::AssignImplicitValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="namespaceOpenBabel.shtml#ad87b019400c810f14603c6532435030b">OpenBabel::GetCurrentValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a86eb2acbb9c5811e645df18b8b0bacf7">OBBond::IsAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a8e455dc2d94f2394a21dd76db3af8325">OpenBabel::ValenceSum()</a>.</p>

</div>
</div>
<a class="anchor" id="a8def681dc1ce0b36145de5a8f4a46d9a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetHvyValence" ref="a8def681dc1ce0b36145de5a8f4a46d9a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHvyValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of non-hydrogens connected to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a599391b68a70a3a6ea87511e74e142e7">OBAtom::CountFreeOxygens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>, <a class="el" href="namespaceOpenBabel.shtml#a7b44d43b56950aff23fbca88664ad996">OpenBabel::isPotentialAromaticAtom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>.</p>

</div>
</div>
<a class="anchor" id="af0cf20008ef74a7af30b2df9d9b7bc7a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetHeteroValence" ref="af0cf20008ef74a7af30b2df9d9b7bc7a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetHeteroValence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of heteroatoms connected to an atom </dd></dl>

</div>
</div>
<a class="anchor" id="a7f02f5442f2ed3aa2045587d3319ab7e"></a><!-- doxytag: member="OpenBabel::OBAtom::GetType" ref="a7f02f5442f2ed3aa2045587d3319ab7e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the atomic type (e.g., for molecular mechanics) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>.</p>

</div>
</div>
<a class="anchor" id="a140fe887c529e7b90eae3de197e8ceb6"></a><!-- doxytag: member="OpenBabel::OBAtom::GetX" ref="a140fe887c529e7b90eae3de197e8ceb6" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the x coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#aae1577c27936bc32d489469f228cc2a0">OBBond::GetLength()</a>, and <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>.</p>

</div>
</div>
<a class="anchor" id="a7e0e3acd8a6e4016522b9cdbc8f5aeb5"></a><!-- doxytag: member="OpenBabel::OBAtom::GetY" ref="a7e0e3acd8a6e4016522b9cdbc8f5aeb5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the y coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#aae1577c27936bc32d489469f228cc2a0">OBBond::GetLength()</a>, and <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>.</p>

</div>
</div>
<a class="anchor" id="a885f0eb530803b77acf8ac2055c59ee8"></a><!-- doxytag: member="OpenBabel::OBAtom::GetZ" ref="a885f0eb530803b77acf8ac2055c59ee8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetZ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the z coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBond.shtml#aae1577c27936bc32d489469f228cc2a0">OBBond::GetLength()</a>, and <a class="el" href="classOpenBabel_1_1OBGrid.shtml#ac64ef48829b8b0825d823194065a813e">OBGrid::Init()</a>.</p>

</div>
</div>
<a class="anchor" id="a9ccf82e6805fa3a2f34b977e1db6f4f9"></a><!-- doxytag: member="OpenBabel::OBAtom::x" ref="a9ccf82e6805fa3a2f34b977e1db6f4f9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double x </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the x coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afbf33662dacd733285409dfd85696457">OBMol::Has2D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4aaa8b5151395ad66ecfe896ca8a0114">OBMol::Has3D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a837dd6b4440b4fe77f23976bbdaa64a3">OBForceField::ValidateSteepestDescent()</a>.</p>

</div>
</div>
<a class="anchor" id="a0acce91d627a918ea20832d9b2fb8b93"></a><!-- doxytag: member="OpenBabel::OBAtom::y" ref="a0acce91d627a918ea20832d9b2fb8b93" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double y </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the y coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afbf33662dacd733285409dfd85696457">OBMol::Has2D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4aaa8b5151395ad66ecfe896ca8a0114">OBMol::Has3D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a837dd6b4440b4fe77f23976bbdaa64a3">OBForceField::ValidateSteepestDescent()</a>.</p>

</div>
</div>
<a class="anchor" id="abe77460b0bada97d73fc158579294931"></a><!-- doxytag: member="OpenBabel::OBAtom::z" ref="abe77460b0bada97d73fc158579294931" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double z </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the z coordinate </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afbf33662dacd733285409dfd85696457">OBMol::Has2D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4aaa8b5151395ad66ecfe896ca8a0114">OBMol::Has3D()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a751725f02bf62696515d79608198cd59">OBMol::ToInertialFrame()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a91538863099a02a981364ad66f47f4e8">OBForceField::ValidateConjugateGradients()</a>.</p>

</div>
</div>
<a class="anchor" id="af9dd6c6924f23479933e0b8779a4bec2"></a><!-- doxytag: member="OpenBabel::OBAtom::GetCoordinate" ref="af9dd6c6924f23479933e0b8779a4bec2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double* GetCoordinate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the coordinates as a double* or NULL if none.</dd></dl>
<p>See <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aeff361260a8a4e9ea703d5d38f5fc671" title="Set the position of this atom from a pointer-driven array of coordinates.">SetCoordPtr()</a> for more. If no coordinate pointer is used (e.g., only <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>), NULL will be returned. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f7ae482e5f2e4f4bda8fc6b6156f2a9">OBForceField::GetGrid()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a7bc49547f1ea2ebf09864495d324fe67">OBForceField::UpdatePairsSimple()</a>.</p>

</div>
</div>
<a class="anchor" id="ad15ec0c7f87cea35b02269fd53be159c"></a><!-- doxytag: member="OpenBabel::OBAtom::GetVector" ref="ad15ec0c7f87cea35b02269fd53be159c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp; GetVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the coordinates as a <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> object </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a228de88f48ee3ca6a11554b74d82dedd">OBMol::Align()</a>, <a class="el" href="namespaceOpenBabel.shtml#a56bd19e6ce3d11cd0ccdc0420e91ada3">OpenBabel::ApplyRotMatToBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae9468871377da00c7b949b20d6d17f3d">OBAtom::AverageBondAngle()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#a7145217d4de73e243d2d3888dac404ba">OpenBabel::CartesianToInternal()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9e896374801d7ea5f8986ecb2b54d65b">OBMol::Center()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac32ffc23db124156a953e8e5cb923ccd">OBMol::EndModify()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6d6d9bdda3f480d358c14b2010034d41">OBAtom::GetAngle()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac2a0e52810ad157f41a9ecbbae90ee48">OBAtom::GetDistance()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#adfd902d8de9eeb32ea476fe916a329fd">OBMol::GetTorsion()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abdda89a787d7ae0639d5127c2f6a4dfb">OBMol::HasNonZeroCoords()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#aed0dfa6939f68b337f13fbcf4e0f3da7">OBBond::IsDoubleBondGeometry()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a5f08066361ace92acfa362df93fafd76">OBForceField::LineSearch()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a2a6bafaddf41c8eb9d0bda246bb07c85">OBForceField::NumericalDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a499789742e7b2021f26f8d1cfe04045f">OBForceField::NumericalSecondDerivative()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#ac56e2c2ffd9fdf7448b3bda78cdc9549">OBAlign::SetRefMol()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#a2a325b0a2af5bbc3511c6f536e686e21">OBAlign::SetTargetMol()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a83db73f33e51b011f21358bd5a0463ff">OBAtom::SmallestBondAngle()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ab97bb4c77a46265bdedaead1a6463ca7">OBBuilder::Swap()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ac6e66726b2becbbccf39e6d4ecf6ae2e">OBForceField::ValidateLineSearch()</a>.</p>

</div>
</div>
<a class="anchor" id="a33fed269ac5a6e12f2d58d09e623191a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetVector" ref="a33fed269ac5a6e12f2d58d09e623191a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp; GetVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the coordinates as a <a class="el" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> object </dd></dl>

</div>
</div>
<a class="anchor" id="aeccf78db112723467e7756a5734c82b9"></a><!-- doxytag: member="OpenBabel::OBAtom::GetPartialCharge" ref="aeccf78db112723467e7756a5734c82b9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetPartialCharge </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the partial charge of this atom, calculating a Gasteiger charge if needed </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBChargeModel.shtml#aefec0fbdf06bb4199614da22f1a9deee">OBChargeModel::FillChargeVectors()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>.</p>

</div>
</div>
<a class="anchor" id="ae8533afa0177a165ca51941872f85aee"></a><!-- doxytag: member="OpenBabel::OBAtom::GetResidue" ref="ae8533afa0177a165ca51941872f85aee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> * GetResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the residue which contains this atom, or NULL if none exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a55b3d11326ee365438d9c1cf97d0c51c">OBResidue::GetBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="afac526c6de01759b568caddae4c4f2c3"></a><!-- doxytag: member="OpenBabel::OBAtom::GetResidue" ref="afac526c6de01759b568caddae4c4f2c3" args="(bool perception)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> * GetResidue </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>perception</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">perception</td><td>implies whether chain perception should occur </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>the residue which contains this atom, or NULL if none exists </dd></dl>

</div>
</div>
<a class="anchor" id="ad8480b61159bc6cb861b17341dc2b29a"></a><!-- doxytag: member="OpenBabel::OBAtom::GetParent" ref="ad8480b61159bc6cb861b17341dc2b29a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* GetParent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the molecule which contains this atom, or NULL if none exists </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a723b609c4e82a3b0ae91f4aa44196740">OpenBabel::addNbrs()</a>, <a class="el" href="namespaceOpenBabel.shtml#a902077219ff1df4935790b354a00909b">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac7d5e7adb0a537d92a628c811148dc21">OBBond::SetLength()</a>.</p>

</div>
</div>
<a class="anchor" id="a818650a1b97f10bbc2204520ef65ad27"></a><!-- doxytag: member="OpenBabel::OBAtom::GetNewBondVector" ref="a818650a1b97f10bbc2204520ef65ad27" args="(vector3 &amp;v, double length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetNewBondVector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a vector for a new bond from this atom, with length given by the supplied parameter </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>success or failure </dd></dl>

</div>
</div>
<a class="anchor" id="aed271572fc66bbef1751cac6ccf3cade"></a><!-- doxytag: member="OpenBabel::OBAtom::GetBond" ref="aed271572fc66bbef1751cac6ccf3cade" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * GetBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>nbr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the <a class="el" href="classOpenBabel_1_1OBBond.shtml" title="Bond class.">OBBond</a> object between this atom and that supplied, or NULL if the two atoms are not bonded </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#af20dd57788f4898cd7377dffe63986fc">OBBuilder::Build()</a>, <a class="el" href="namespaceOpenBabel.shtml#a13eb26f56a8a475622fba5fc01d4d50e">OpenBabel::CorrectBadResonanceForm()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a class="anchor" id="ad3bbdba4326cf884eeb110b02f7caef7"></a><!-- doxytag: member="OpenBabel::OBAtom::GetNextAtom" ref="ad3bbdba4326cf884eeb110b02f7caef7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * GetNextAtom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>a pointer to the "next" atom (by atom index) in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>, or NULL if no such atom exists. </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000007">Deprecated:</a></b></dt><dd>Use any of the other iterator methods. This method will be removed in the future. </dd></dl>

</div>
</div>
<a class="anchor" id="ac4ea48df79e239b506d3501dd42adde9"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginBonds" ref="ac4ea48df79e239b506d3501dd42adde9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> BeginBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator to the beginning of the bonds to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="a87859f951e8ea33345b76d93014486c9"></a><!-- doxytag: member="OpenBabel::OBAtom::EndBonds" ref="a87859f951e8ea33345b76d93014486c9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> EndBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator to the end of the bonds to this atom </dd></dl>

</div>
</div>
<a class="anchor" id="ad9d21c9b65678905c6d7d461160fcd9f"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginBond" ref="ad9d21c9b65678905c6d7d461160fcd9f" args="(OBBondIterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * BeginBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the iterator <code>i</code> to the beginning of the bonds </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first bond to this atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af74913b3d793c41d1f005afdba11da35">OBMol::ContigFragList()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa797df5bf72cb5e220e13171dd9c7d4a">OBMol::FindLargestFragment()</a>, <a class="el" href="namespaceOpenBabel.shtml#a0bc08c11af150479f14d23684fab908f">OpenBabel::FindRings()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a55b3d11326ee365438d9c1cf97d0c51c">OBResidue::GetBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#ad87b019400c810f14603c6532435030b">OpenBabel::GetCurrentValence()</a>, <a class="el" href="namespaceOpenBabel.shtml#a534fe2a629963b79ffbd499f461ca5df">OpenBabel::GetDFFVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac4260148aa21c7ada7d625bc0c6f2f7a">OBMol::GetGTDVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a86eb2acbb9c5811e645df18b8b0bacf7">OBBond::IsAmide()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac8299dd769242a441864a7ad2fcb92b6">OBAtom::IsAmideNitrogen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a783023d0c499c732c067d566c90b67ae">OBBond::IsEster()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad1b5c7353abc13edd81339fc58206a3b">OBAtom::IsOneFour()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a895cbd0d89d126571465b59ee0a3b79a">OBAtom::IsOneThree()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#a1e72a6b50b1b53a7d3c4b96ea26bd76a">OBAtomBondIter::OBAtomBondIter()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a8e455dc2d94f2394a21dd76db3af8325">OpenBabel::ValenceSum()</a>.</p>

</div>
</div>
<a class="anchor" id="a133c681e9534e7255b1fae272c40a511"></a><!-- doxytag: member="OpenBabel::OBAtom::NextBond" ref="a133c681e9534e7255b1fae272c40a511" args="(OBBondIterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * NextBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Increment the iterator <code>i</code> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The next bond to this atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af74913b3d793c41d1f005afdba11da35">OBMol::ContigFragList()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#acba192e5cf0db39c2ed6af7ba05328dc">OBMol::ConvertDativeBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa797df5bf72cb5e220e13171dd9c7d4a">OBMol::FindLargestFragment()</a>, <a class="el" href="namespaceOpenBabel.shtml#a0bc08c11af150479f14d23684fab908f">OpenBabel::FindRings()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a55b3d11326ee365438d9c1cf97d0c51c">OBResidue::GetBonds()</a>, <a class="el" href="namespaceOpenBabel.shtml#ad87b019400c810f14603c6532435030b">OpenBabel::GetCurrentValence()</a>, <a class="el" href="namespaceOpenBabel.shtml#a534fe2a629963b79ffbd499f461ca5df">OpenBabel::GetDFFVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac4260148aa21c7ada7d625bc0c6f2f7a">OBMol::GetGTDVector()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a86eb2acbb9c5811e645df18b8b0bacf7">OBBond::IsAmide()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac8299dd769242a441864a7ad2fcb92b6">OBAtom::IsAmideNitrogen()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a783023d0c499c732c067d566c90b67ae">OBBond::IsEster()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad1b5c7353abc13edd81339fc58206a3b">OBAtom::IsOneFour()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a895cbd0d89d126571465b59ee0a3b79a">OBAtom::IsOneThree()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a8d59ca837068a807d393dab30cf72775">OBBond::IsPrimaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a38f8ea65888a454fa07b77cdd4aa41ca">OBBond::IsSecondaryAmide()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#a771d7a8c76475f1e72a75e8330fac6d5">OBBond::IsTertiaryAmide()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomBondIter.shtml#ad5bb33e493787775e92d38f36da65a0d">OBAtomBondIter::operator++()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a8e455dc2d94f2394a21dd76db3af8325">OpenBabel::ValenceSum()</a>.</p>

</div>
</div>
<a class="anchor" id="a60c99e07cbd015b89dd0f41525150a74"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginNbrAtom" ref="a60c99e07cbd015b89dd0f41525150a74" args="(OBBondIterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * BeginNbrAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the iterator <code>i</code> to the beginning of the bonds </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first neighboring atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="namespaceOpenBabel.shtml#a902077219ff1df4935790b354a00909b">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8f302cc167630d63e3ca5a4c4d86e41b">OpenBabel::CreateNewClassVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ace02501ed235e4e6c37dca0585bb46bf">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="namespaceOpenBabel.shtml#a31ce8b089ca36508940585406a2f93f1">OpenBabel::expand_cycle()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">OBSmartsMatcher::FastSingleMatch()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1205b2669e02dbc289c65ab1f56110c1">OBMol::FindChildren()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0de1f5399c5c15b13d1db631951cb2c0">OBMol::GetBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ab91f9d866c216bcb3ffc5aa0774b5177">OBBond::IsClosure()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#aed0dfa6939f68b337f13fbcf4e0f3da7">OBBond::IsDoubleBondGeometry()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abf7ff40c898c129bba2020623f7394b3">OBRotorList::IsFixedBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#a9001f5dde4cd8a725f4cbbf1b3e0a6a6">OBAtomAtomIter::OBAtomAtomIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ac46bde575f155b4c67ec277d7659a847">OBMolAtomBFSIter::OBMolAtomBFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#a30e32a5f76406721c6e04f431e2d46bc">OBMolAtomDFSIter::OBMolAtomDFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#aaf97dbc49b4f8743f21874c99257de73">OBMolAtomDFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#aa2197b65eb45814b73aac6f4f061e436">OBMolAtomBFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#aad45f9f1cd93fdef9c658091f034cce5">OBAromaticTyper::PropagatePotentialAromatic()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="a37ef92842ef05f2084102f45b6a05caa"></a><!-- doxytag: member="OpenBabel::OBAtom::NextNbrAtom" ref="a37ef92842ef05f2084102f45b6a05caa" args="(OBBondIterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * NextNbrAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Increment the iterator <code>i</code> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The next neighboring atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtomTyper.shtml#ad7c6f09e6720f6041c81097b407d0961">OBAtomTyper::AssignTypes()</a>, <a class="el" href="namespaceOpenBabel.shtml#a902077219ff1df4935790b354a00909b">OpenBabel::BuildOBRTreeVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a52c124d41a6d5324d9ec6eb2c6faab87">OBAromaticTyper::CheckAromaticity()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8f302cc167630d63e3ca5a4c4d86e41b">OpenBabel::CreateNewClassVector()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ace02501ed235e4e6c37dca0585bb46bf">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="namespaceOpenBabel.shtml#a31ce8b089ca36508940585406a2f93f1">OpenBabel::expand_cycle()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af1afc15e37f48f63ea001277fef0e289">OBMol::expandcycle()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2f3a84cfc5519d13e49880b6d2cc1b4e">OBAtom::ExplicitHydrogenCount()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a7f1d7465125c206ca70c21ab5db30560">OBSmartsMatcher::FastSingleMatch()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1205b2669e02dbc289c65ab1f56110c1">OBMol::FindChildren()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0de1f5399c5c15b13d1db631951cb2c0">OBMol::GetBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a474093accb1df03b02d17bc4b7f00377">OpenBabel::GetLabelAlignment()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBBond.shtml#ab91f9d866c216bcb3ffc5aa0774b5177">OBBond::IsClosure()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#abf7ff40c898c129bba2020623f7394b3">OBRotorList::IsFixedBond()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, <a class="el" href="classOpenBabel_1_1OBSSMatch.shtml#a7de092daf1f354fd36f727346169a136">OBSSMatch::Match()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#ac46bde575f155b4c67ec277d7659a847">OBMolAtomBFSIter::OBMolAtomBFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#a30e32a5f76406721c6e04f431e2d46bc">OBMolAtomDFSIter::OBMolAtomDFSIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomDFSIter.shtml#aaf97dbc49b4f8743f21874c99257de73">OBMolAtomDFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMolAtomBFSIter.shtml#aa2197b65eb45814b73aac6f4f061e436">OBMolAtomBFSIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBAtomAtomIter.shtml#a9a63e08a6e01bb6e4c5588fc38909e62">OBAtomAtomIter::operator++()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#aad45f9f1cd93fdef9c658091f034cce5">OBAromaticTyper::PropagatePotentialAromatic()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a68ba77b0a1443e9e7276e3e97e16893c">OBAromaticTyper::TraverseCycle()</a>.</p>

</div>
</div>
<a class="anchor" id="ae93c2ea0464618c797ae509fb3f3f455"></a><!-- doxytag: member="OpenBabel::OBAtom::GetDistance" ref="ae93c2ea0464618c797ae509fb3f3f455" args="(int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the distance to the atom defined by <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2f78686dc35b7f79f44edc55b42d14a">OBMol::GetAtom()</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="ac2a0e52810ad157f41a9ecbbae90ee48"></a><!-- doxytag: member="OpenBabel::OBAtom::GetDistance" ref="ac2a0e52810ad157f41a9ecbbae90ee48" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDistance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the distance to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a02dada3ad01505b2d4ddcbe7b9f006c8"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAngle" ref="a02dada3ad01505b2d4ddcbe7b9f006c8" args="(int b, int c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAngle </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1589aac9963e7a8f58bffb24d85b9a16">OBMol::GetAngle()</a>.</p>

</div>
</div>
<a class="anchor" id="a6d6d9bdda3f480d358c14b2010034d41"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAngle" ref="a6d6d9bdda3f480d358c14b2010034d41" args="(OBAtom *b, OBAtom *c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAngle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the angle defined by this atom -&gt; b (vertex) -&gt; c </dd></dl>

</div>
</div>
<a class="anchor" id="a616b5aac27eec22be5be998bc15d6349"></a><!-- doxytag: member="OpenBabel::OBAtom::NewResidue" ref="a616b5aac27eec22be5be998bc15d6349" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void NewResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>If no residue has been set for this atom, create a new one. </p>

</div>
</div>
<a class="anchor" id="a3e3b0d3b268e6abe26f87d4c422c31cd"></a><!-- doxytag: member="OpenBabel::OBAtom::AddResidue" ref="a3e3b0d3b268e6abe26f87d4c422c31cd" args="(OBResidue *res)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddResidue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> *&#160;</td>
          <td class="paramname"><em>res</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add (set) the residue for this atom. </p>

</div>
</div>
<a class="anchor" id="a85fa173a3c3f488fc691a11eaad81439"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteResidue" ref="a85fa173a3c3f488fc691a11eaad81439" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete any residue associated with this atom. </p>

</div>
</div>
<a class="anchor" id="a5abeab08afbd305a51b9a9b5bd8fe356"></a><!-- doxytag: member="OpenBabel::OBAtom::AddBond" ref="a5abeab08afbd305a51b9a9b5bd8fe356" args="(OBBond *bond)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a bond to the internal list. Does not update the bond. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>, and <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#abe40cdbb1abc8939273d9cde6b7b638a">OBBuilder::Connect()</a>.</p>

</div>
</div>
<a class="anchor" id="a1773630938cf6a028368394b666d06bf"></a><!-- doxytag: member="OpenBabel::OBAtom::InsertBond" ref="a1773630938cf6a028368394b666d06bf" args="(OBBondIterator &amp;i, OBBond *bond)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void InsertBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a54495d3eb8f9749d0237e6bda59e0abe">OBBondIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Insert <code>bond</code> into the internal list at the position from <code>i</code> Does not modify the bond. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a62e485fd693d4458ab5c47835afab049">OBMol::AddBond()</a>.</p>

</div>
</div>
<a class="anchor" id="af47adec983369f903208f5fbae863406"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteBond" ref="af47adec983369f903208f5fbae863406" args="(OBBond *bond)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Find <code>bond</code> and remove it from the internal list. Does not update the bond. </p>

</div>
</div>
<a class="anchor" id="a03fe71c8266435b7a76682e5c1472894"></a><!-- doxytag: member="OpenBabel::OBAtom::ClearBond" ref="a03fe71c8266435b7a76682e5c1472894" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ClearBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Clear all bonding information in this atom (does not delete them) </p>

</div>
</div>
<a class="anchor" id="a51618686d8ad1b5f66ff2fc2c607493e"></a><!-- doxytag: member="OpenBabel::OBAtom::HtoMethyl" ref="a51618686d8ad1b5f66ff2fc2c607493e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HtoMethyl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>If this is a hydrogen atom, transform into a methyl group. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>success or failure </dd></dl>

</div>
</div>
<a class="anchor" id="af7a144a4ef755d5cc31e0d2e47a2e84a"></a><!-- doxytag: member="OpenBabel::OBAtom::SetHybAndGeom" ref="af7a144a4ef755d5cc31e0d2e47a2e84a" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetHybAndGeom </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>hyb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Change the hybridization of this atom and modify the geometry accordingly </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>success or failure</dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000083">Deprecated:</a></b></dt><dd>This will be removed in future versions of Open Babel </dd></dl>

</div>
</div>
<a class="anchor" id="a1a92c9eb656eb9ef43f03c717a38adc3"></a><!-- doxytag: member="OpenBabel::OBAtom::ForceNoH" ref="a1a92c9eb656eb9ef43f03c717a38adc3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ForceNoH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Mark that atom has no hydrogens attached. </p>

</div>
</div>
<a class="anchor" id="a55e8f858833eee0408aee7b0f1b9c22c"></a><!-- doxytag: member="OpenBabel::OBAtom::HasNoHForced" ref="a55e8f858833eee0408aee7b0f1b9c22c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasNoHForced </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>if atom has been marked as having no hydrogens attached </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>.</p>

</div>
</div>
<a class="anchor" id="a03e54abd32434bd610bfd4430d91b7b9"></a><!-- doxytag: member="OpenBabel::OBAtom::ForceImplH" ref="a03e54abd32434bd610bfd4430d91b7b9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ForceImplH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Mark that atom is not hydrogen deficient (For SMILES input) </p>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

</div>
</div>
<a class="anchor" id="a8920c0ef5c32f64887d09c3b2da857d5"></a><!-- doxytag: member="OpenBabel::OBAtom::HasImplHForced" ref="a8920c0ef5c32f64887d09c3b2da857d5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasImplHForced </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>if atom has been marked as having no hydrogens attached </dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>.</p>

</div>
</div>
<a class="anchor" id="a599391b68a70a3a6ea87511e74e142e7"></a><!-- doxytag: member="OpenBabel::OBAtom::CountFreeOxygens" ref="a599391b68a70a3a6ea87511e74e142e7" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int CountFreeOxygens </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of oxygen atoms connected that only have one heavy valence </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab7dd88da6d7a1e72f636c50586d5551d">OBAtom::IsCarboxylOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a256fca254282407b1342875266769463">OBAtom::IsNitroOxygen()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5b1d4c9a297629beacb66c0ef04070e9">OBAtom::IsPhosphateOxygen()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a76ecda2fd4bf9207310088f25f526ea8">OBAtom::IsSulfateOxygen()</a>.</p>

</div>
</div>
<a class="anchor" id="ae09ed28481ac044dab3f31c8605b44a9"></a><!-- doxytag: member="OpenBabel::OBAtom::ImplicitHydrogenCount" ref="ae09ed28481ac044dab3f31c8605b44a9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ImplicitHydrogenCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of hydrogens needed to fill the implicit valence of this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7cac960f30506aa53d083983845032df">OBMol::GetExactMass()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a77cd52b60b431c19aa7debcd0d92e07d">OBMol::GetMolWt()</a>.</p>

</div>
</div>
<a class="anchor" id="a2f3a84cfc5519d13e49880b6d2cc1b4e"></a><!-- doxytag: member="OpenBabel::OBAtom::ExplicitHydrogenCount" ref="a2f3a84cfc5519d13e49880b6d2cc1b4e" args="(bool ExcludeIsotopes=false) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ExplicitHydrogenCount </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>ExcludeIsotopes</em> = <code>false</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of hydrogens explicitly bound to this atom, optionally excluding D,T and isotope explicitly set to 1 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="af7215961220abaa4e684bfafeca87bb0"></a><!-- doxytag: member="OpenBabel::OBAtom::MemberOfRingCount" ref="af7215961220abaa4e684bfafeca87bb0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int MemberOfRingCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of rings that contain this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="ae7d5797a4c8b99c943f943034e3287d8"></a><!-- doxytag: member="OpenBabel::OBAtom::MemberOfRingSize" ref="ae7d5797a4c8b99c943f943034e3287d8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int MemberOfRingSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The size of the smallest ring that contains this atom (0 if not in a ring) </dd></dl>

</div>
</div>
<a class="anchor" id="a4a027cbfb230638ae056ccd04b48fe8c"></a><!-- doxytag: member="OpenBabel::OBAtom::CountRingBonds" ref="a4a027cbfb230638ae056ccd04b48fe8c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int CountRingBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of explicit ring connections to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="a83db73f33e51b011f21358bd5a0463ff"></a><!-- doxytag: member="OpenBabel::OBAtom::SmallestBondAngle" ref="a83db73f33e51b011f21358bd5a0463ff" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double SmallestBondAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The smallest angle of bonds to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>.</p>

</div>
</div>
<a class="anchor" id="ae9468871377da00c7b949b20d6d17f3d"></a><!-- doxytag: member="OpenBabel::OBAtom::AverageBondAngle" ref="ae9468871377da00c7b949b20d6d17f3d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double AverageBondAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The average angle of bonds to this atom </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a class="anchor" id="a6e7269e46f6f39fb598a9f3b74bba06c"></a><!-- doxytag: member="OpenBabel::OBAtom::BOSum" ref="a6e7269e46f6f39fb598a9f3b74bba06c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int BOSum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The sum of the bond orders of the bonds to the atom (i.e. double bond = 2...) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a class="anchor" id="a566764b6577e8ba6a4959bd0f2e25076"></a><!-- doxytag: member="OpenBabel::OBAtom::KBOSum" ref="a566764b6577e8ba6a4959bd0f2e25076" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int KBOSum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The sum of the bond orders of bonds to the atom, considering only KDouble, KTriple bonds </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000008">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6e7269e46f6f39fb598a9f3b74bba06c">BOSum()</a> instead </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="ae3177d9e8b583d3cda02b90c141894c5"></a><!-- doxytag: member="OpenBabel::OBAtom::HasResidue" ref="ae3177d9e8b583d3cda02b90c141894c5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasResidue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is there any residue information? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>.</p>

</div>
</div>
<a class="anchor" id="ab633bc0f8f40dfcedf42940ab8a5316c"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHydrogen" ref="ab633bc0f8f40dfcedf42940ab8a5316c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom hydrogen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1befb9ee43954207d09e3229e4b5753b">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad85ec95d1f909843737b67d70638f3c9">OBMol::AssignSpinMultiplicity()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a688b0d2367ab8e683821e6cff705d5f4">OBMol::DeleteAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a925b41d42ddf14c12b675d32bdf5e948">OBMol::DeleteHydrogen()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a4e2ddc39752d20fabcda1afc1cc4e8e4">OBMol::DeleteHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2f3a84cfc5519d13e49880b6d2cc1b4e">OBAtom::ExplicitHydrogenCount()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7cac960f30506aa53d083983845032df">OBMol::GetExactMass()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a8def681dc1ce0b36145de5a8f4a46d9a">OBAtom::GetHvyValence()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a77cd52b60b431c19aa7debcd0d92e07d">OBMol::GetMolWt()</a>, <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml#ab7527366ed1bf39da7123e3ad65d96ad">OBRotorRules::GetRotorIncrements()</a>, <a class="el" href="classOpenBabel_1_1OBStericConformerFilter.shtml#aa37ca1a89ffb71694922e4b90b012ab2">OBStericConformerFilter::IsGood()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a71e3c9571430e3d6587f7b80ee8fb926">OBAtom::IsHbondDonor()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#afa92da4c4cfc01b7c0d4385f487b42a4">OBMol::NumHvyAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af7a144a4ef755d5cc31e0d2e47a2e84a">OBAtom::SetHybAndGeom()</a>, <a class="el" href="classOpenBabel_1_1OBAlign.shtml#ac56e2c2ffd9fdf7448b3bda78cdc9549">OBAlign::SetRefMol()</a>, and <a class="el" href="classOpenBabel_1_1OBAlign.shtml#a2a325b0a2af5bbc3511c6f536e686e21">OBAlign::SetTargetMol()</a>.</p>

</div>
</div>
<a class="anchor" id="a4659948e851d094d7ffddcc7d9c9ff4a"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHydrogen" ref="a4659948e851d094d7ffddcc7d9c9ff4a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1f0a167775136e911cd349cdd8923b24"></a><!-- doxytag: member="OpenBabel::OBAtom::IsCarbon" ref="a1f0a167775136e911cd349cdd8923b24" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarbon </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom carbon? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="namespaceOpenBabel.shtml#a7e62ffcac6073c5fb792d2f5bc62c522">OpenBabel::potentialAromaticBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="aacb82bc548922e4f1276a255f212f143"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNitrogen" ref="aacb82bc548922e4f1276a255f212f143" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNitrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom nitrogen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6d03ef3f811fa2c085694ccbf76051d4">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a class="anchor" id="af7e8030ce19d79c9ad0b3cfbf116dc59"></a><!-- doxytag: member="OpenBabel::OBAtom::IsOxygen" ref="af7e8030ce19d79c9ad0b3cfbf116dc59" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom oxygen? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a599391b68a70a3a6ea87511e74e142e7">OBAtom::CountFreeOxygens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad651ae188decc15fa8ec3907860e585e">OBAtom::IsAromaticNOxide()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="aa71152591d5cc51fc2f3701ff7de7dfd"></a><!-- doxytag: member="OpenBabel::OBAtom::IsSulfur" ref="aa71152591d5cc51fc2f3701ff7de7dfd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSulfur </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom sulfur? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="namespaceOpenBabel.shtml#a5d65e3449d4d6a0a7a35ea4e13039f16">OpenBabel::ExpandKekule()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">OBRing::GetRootAtom()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1e9f06170626de367fba48ebbacd6f0e">OBMol::PerceiveKekuleBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6d03ef3f811fa2c085694ccbf76051d4">OBMol::start_kekulize()</a>.</p>

</div>
</div>
<a class="anchor" id="ab8c7f052f9380b98eef3b83da640eba3"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPhosphorus" ref="ab8c7f052f9380b98eef3b83da640eba3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPhosphorus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom phosphorus? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a4f5a47b31d2c120928f77dad66e655cc">OBAtom::HasAlphaBetaUnsat()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ef863ca7ed29e266960966a66dc8fb8"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAromatic" ref="a4ef863ca7ed29e266960966a66dc8fb8" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom aromatic? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="namespaceOpenBabel.shtml#a8d72e30a8da1c39c9906a27ef62dd5f6">OpenBabel::KekulePropagate()</a>, and <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml#a4cc21e93fd84c4713b24d965cb90a28c">OBQueryAtom::Matches()</a>.</p>

</div>
</div>
<a class="anchor" id="aa17842bd610dc8b2ede2fe324738fe5b"></a><!-- doxytag: member="OpenBabel::OBAtom::IsInRing" ref="aa17842bd610dc8b2ede2fe324738fe5b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom in a ring? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#af20dd57788f4898cd7377dffe63986fc">OBBuilder::Build()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a568e42fdfa07962a14761bb9875ee138">OBBuilder::CorrectStereoAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a94276831221d5693b3017da7fab3ccc8">OBMol::GetGIVector()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#afca1f93ec35d38ad6b7e8eb634bd5d45">OBAtom::IsAxial()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a7baa4d72adf170defdf09a225b3edf57">OBBuilder::IsSpiroAtom()</a>, <a class="el" href="classOpenBabel_1_1OBQueryAtom.shtml#a4cc21e93fd84c4713b24d965cb90a28c">OBQueryAtom::Matches()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>, and <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>.</p>

</div>
</div>
<a class="anchor" id="a9ca260c28f84147e45c377cdb2254144"></a><!-- doxytag: member="OpenBabel::OBAtom::IsInRingSize" ref="a9ca260c28f84147e45c377cdb2254144" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRingSize </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is the atom in a ring of a given size? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#ad17bc9b49b2504cb30ba9f6e6650e891">OBSmartsMatcher::EvalAtomExpr()</a>, <a class="el" href="namespaceOpenBabel.shtml#a0e9fff5044095331af29c5b0781557c4">OpenBabel::findMetalloceneBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>.</p>

</div>
</div>
<a class="anchor" id="ad89058fb178a4b056a0786a5ddc8e162"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHeteroatom" ref="ad89058fb178a4b056a0786a5ddc8e162" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHeteroatom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an element in the 15th or 16th main groups (i.e., N, O, P, S ...) ? </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a656a12d74df6452be30fd76d3860bca6">OpenBabel::alternate()</a>, and <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af0cf20008ef74a7af30b2df9d9b7bc7a">OBAtom::GetHeteroValence()</a>.</p>

</div>
</div>
<a class="anchor" id="a5d150980792220d4929ac312bfce1636"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNotCorH" ref="a5d150980792220d4929ac312bfce1636" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNotCorH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom any element except carbon or hydrogen? </dd></dl>

</div>
</div>
<a class="anchor" id="a35892bf1255c1b8824c870e5460fd641"></a><!-- doxytag: member="OpenBabel::OBAtom::IsConnected" ref="a35892bf1255c1b8824c870e5460fd641" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsConnected </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom directly connected to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a>? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a31d05972f7454e791641c4a7d0071d12">OBMol::ConnectTheDots()</a>, <a class="el" href="namespaceOpenBabel.shtml#a49d9094d3843107b37a072e7e4597fc3">OpenBabel::construct_g_matrix()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a5230bf1636e0f8f7f3113bb335123558">OBAromaticTyper::ExcludeSmallRing()</a>, <a class="el" href="classOpenBabel_1_1OBStericConformerFilter.shtml#aa37ca1a89ffb71694922e4b90b012ab2">OBStericConformerFilter::IsGood()</a>, <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a19ad5800c1b20981621429c4c16a845e">OBMolPairIter::OBMolPairIter()</a>, and <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a82f19c09f49162a5d747e6d302f2bd74">OBMolPairIter::operator++()</a>.</p>

</div>
</div>
<a class="anchor" id="a895cbd0d89d126571465b59ee0a3b79a"></a><!-- doxytag: member="OpenBabel::OBAtom::IsOneThree" ref="a895cbd0d89d126571465b59ee0a3b79a" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneThree </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> in a 1,3 bonding pattern? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a19ad5800c1b20981621429c4c16a845e">OBMolPairIter::OBMolPairIter()</a>, and <a class="el" href="classOpenBabel_1_1OBMolPairIter.shtml#a82f19c09f49162a5d747e6d302f2bd74">OBMolPairIter::operator++()</a>.</p>

</div>
</div>
<a class="anchor" id="ad1b5c7353abc13edd81339fc58206a3b"></a><!-- doxytag: member="OpenBabel::OBAtom::IsOneFour" ref="ad1b5c7353abc13edd81339fc58206a3b" args="(OBAtom *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsOneFour </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom related to the supplied <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> in a 1,4 bonding pattern? </dd></dl>

</div>
</div>
<a class="anchor" id="ab7dd88da6d7a1e72f636c50586d5551d"></a><!-- doxytag: member="OpenBabel::OBAtom::IsCarboxylOxygen" ref="ab7dd88da6d7a1e72f636c50586d5551d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsCarboxylOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an oxygen in a carboxyl (-CO2 or CO2H) group? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#ad0cefa50ad126c06c03bad33175ce2b4">OBBuilder::GetNewBondVector()</a>.</p>

</div>
</div>
<a class="anchor" id="a5b1d4c9a297629beacb66c0ef04070e9"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPhosphateOxygen" ref="a5b1d4c9a297629beacb66c0ef04070e9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPhosphateOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an oxygen in a phosphate (R-PO3) group? </dd></dl>

</div>
</div>
<a class="anchor" id="a76ecda2fd4bf9207310088f25f526ea8"></a><!-- doxytag: member="OpenBabel::OBAtom::IsSulfateOxygen" ref="a76ecda2fd4bf9207310088f25f526ea8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsSulfateOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an oxygen in a sulfate (-SO3) group? </dd></dl>

</div>
</div>
<a class="anchor" id="a256fca254282407b1342875266769463"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNitroOxygen" ref="a256fca254282407b1342875266769463" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNitroOxygen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an oxygen in a nitro (-NO2) group? </dd></dl>

</div>
</div>
<a class="anchor" id="ac8299dd769242a441864a7ad2fcb92b6"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAmideNitrogen" ref="ac8299dd769242a441864a7ad2fcb92b6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAmideNitrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns true if nitrogen is part of an amide. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom a nitrogen in an amide (-C(=O)NR2) group? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#af2e4cda76442b795b7e6f5d74dea0df8">OBMol::getorden()</a>.</p>

</div>
</div>
<a class="anchor" id="a6da4cfc5bbc2e4c9b358bccd5d97e51f"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPolarHydrogen" ref="a6da4cfc5bbc2e4c9b358bccd5d97e51f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPolarHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom a hydrogen connected to a polar atom (i.e., N, O, P, S) </dd></dl>

</div>
</div>
<a class="anchor" id="ae519982c28911c0906e9181c46d7bdbc"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNonPolarHydrogen" ref="ae519982c28911c0906e9181c46d7bdbc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNonPolarHydrogen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom a hydrogen connected to a non-polar atom (i.e., C) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a2993ead33ec2a4b15dd536d798ff844d">OBMol::DeleteNonPolarHydrogens()</a>.</p>

</div>
</div>
<a class="anchor" id="ad651ae188decc15fa8ec3907860e585e"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAromaticNOxide" ref="ad651ae188decc15fa8ec3907860e585e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromaticNOxide </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an aromatic nitrogen with at least one double bond to an oxygen atom </dd></dl>

</div>
</div>
<a class="anchor" id="a63258442848bd8e29e0d5224e145ad83"></a><!-- doxytag: member="OpenBabel::OBAtom::IsChiral" ref="a63258442848bd8e29e0d5224e145ad83" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsChiral </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom chiral?</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000008">Todo:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a63258442848bd8e29e0d5224e145ad83">OBMol::IsChiral()</a>.</p>

</div>
</div>
<a class="anchor" id="afca1f93ec35d38ad6b7e8eb634bd5d45"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAxial" ref="afca1f93ec35d38ad6b7e8eb634bd5d45" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAxial </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom an axial atom in a ring </dd></dl>

</div>
</div>
<a class="anchor" id="a4d1f38bbe03483629778078dcc4e75a0"></a><!-- doxytag: member="OpenBabel::OBAtom::IsClockwise" ref="a4d1f38bbe03483629778078dcc4e75a0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsClockwise </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000009">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a class="anchor" id="af3abb70d4f818b9c3e416928afa2e844"></a><!-- doxytag: member="OpenBabel::OBAtom::IsAntiClockwise" ref="af3abb70d4f818b9c3e416928afa2e844" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAntiClockwise </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000010">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a class="anchor" id="a9880a080dd0bce244291bde514b67d20"></a><!-- doxytag: member="OpenBabel::OBAtom::IsPositiveStereo" ref="a9880a080dd0bce244291bde514b67d20" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsPositiveStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000011">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a61e5344c34c172e9b889e59255aff6de"></a><!-- doxytag: member="OpenBabel::OBAtom::IsNegativeStereo" ref="a61e5344c34c172e9b889e59255aff6de" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsNegativeStereo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000012">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a8844e382c76003229ee5fdd0341aacee"></a><!-- doxytag: member="OpenBabel::OBAtom::HasChiralitySpecified" ref="a8844e382c76003229ee5fdd0341aacee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasChiralitySpecified </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000013">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>.</p>

</div>
</div>
<a class="anchor" id="a63911efd550113b275239d322670986d"></a><!-- doxytag: member="OpenBabel::OBAtom::HasChiralVolume" ref="a63911efd550113b275239d322670986d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasChiralVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000014">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a63e02252214e540d56815820715f1ae3"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHbondAcceptor" ref="a63e02252214e540d56815820715f1ae3" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondAcceptor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom a hydrogen-bond acceptor (receptor)? </dd></dl>

</div>
</div>
<a class="anchor" id="a71e3c9571430e3d6587f7b80ee8fb926"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHbondDonor" ref="a71e3c9571430e3d6587f7b80ee8fb926" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondDonor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this atom a hydrogen-bond donor? </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a135d08515315b5daa95e6081dc104a38">OBAtom::IsHbondDonorH()</a>.</p>

</div>
</div>
<a class="anchor" id="a135d08515315b5daa95e6081dc104a38"></a><!-- doxytag: member="OpenBabel::OBAtom::IsHbondDonorH" ref="a135d08515315b5daa95e6081dc104a38" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHbondDonorH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Is this a hydrogen atom attached to a hydrogen-bond donor? </dd></dl>

</div>
</div>
<a class="anchor" id="a4f5a47b31d2c120928f77dad66e655cc"></a><!-- doxytag: member="OpenBabel::OBAtom::HasAlphaBetaUnsat" ref="a4f5a47b31d2c120928f77dad66e655cc" args="(bool includePandS=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasAlphaBetaUnsat </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>includePandS</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether a neighboring atom (alpha) has an unsaturated bond to a third atom (beta). </dd></dl>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">includePandS</td><td>Whether to include phosphorus and sulfur neighbors in this determination (or to exclude them)</td></tr>
  </table>
  </dd>
</dl>
<p>This can be sketched as follows </p>
<div class="fragment"><pre class="fragment">              <span class="charliteral">&#39;*&#39;</span>
                 \
                  a=b
</pre></div><p> where a and b are the 'apha' and 'beta' atoms, respectively and '*' indicates the current atom. </p>

</div>
</div>
<a class="anchor" id="addb891e1fa000764b9030d5e08c0c67a"></a><!-- doxytag: member="OpenBabel::OBAtom::HasBondOfOrder" ref="addb891e1fa000764b9030d5e08c0c67a" args="(unsigned int bo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasBondOfOrder </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>bo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether this atom is connected to any bond with order == <code>bo</code> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a class="anchor" id="a4fc49ec59966a08059750ecd2e9d20a5"></a><!-- doxytag: member="OpenBabel::OBAtom::CountBondsOfOrder" ref="a4fc49ec59966a08059750ecd2e9d20a5" args="(unsigned int bo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int CountBondsOfOrder </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>bo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The count of bonds connected to this atom with order == <code>bo</code> </dd></dl>

</div>
</div>
<a class="anchor" id="ae3d85200b00bf0ad59725175d606acfe"></a><!-- doxytag: member="OpenBabel::OBAtom::HasNonSingleBond" ref="ae3d85200b00bf0ad59725175d606acfe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasNonSingleBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether this atom is connected to any bond with order &gt;1 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac749cfb04173f6f35ef64b1ac1d87178">OBMol::PerceiveBondOrders()</a>.</p>

</div>
</div>
<a class="anchor" id="af347b80d156587c2287754345606c78d"></a><!-- doxytag: member="OpenBabel::OBAtom::HasSingleBond" ref="af347b80d156587c2287754345606c78d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasSingleBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Does this atom have a single bond </dd></dl>

</div>
</div>
<a class="anchor" id="a0cb35a21cc08897bc7f9b01ae4561e50"></a><!-- doxytag: member="OpenBabel::OBAtom::HasDoubleBond" ref="a0cb35a21cc08897bc7f9b01ae4561e50" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasDoubleBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Does this atom have a double bond </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBBondTyper.shtml#aa5af3b65ac3956ea6ee5e16198e5bb7a">OBBondTyper::AssignFunctionalGroupBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="a11bf8aa7f79e9b9bdef2602808bb794d"></a><!-- doxytag: member="OpenBabel::OBAtom::HasAromaticBond" ref="a11bf8aa7f79e9b9bdef2602808bb794d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasAromaticBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Does this atom have an aromatic bond </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab74a82552a9576514b189e2a265d5f5a">OBMol::NewPerceiveKekuleBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="abfdefac42d3c895920f1f715f0d710a5"></a><!-- doxytag: member="OpenBabel::OBAtom::MatchesSMARTS" ref="abfdefac42d3c895920f1f715f0d710a5" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool MatchesSMARTS </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pattern</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether this atom matches the first atom in a given SMARTS pattern </dd></dl>

</div>
</div>
<a class="anchor" id="abdc8ffeb0749b563e1108a9ceaa0b394"></a><!-- doxytag: member="OpenBabel::OBAtom::DoTransformations" ref="abdc8ffeb0749b563e1108a9ceaa0b394" args="(const std::map&lt; std::string, std::string &gt; *, OBConversion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Perform a set of transformations specified by the user</p>
<p>Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol::ClassDescription()</a> Base type does nothing </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol</a>.</p>

</div>
</div>
<a class="anchor" id="a6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBAtom::ClassDescription" ref="a6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations()</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>, and <a class="el" href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">OBReaction</a>.</p>

</div>
</div>
<a class="anchor" id="ab2f0cea1c162bbe8dd603528a3da5c87"></a><!-- doxytag: member="OpenBabel::OBAtom::CastAndClear" ref="ab2f0cea1c162bbe8dd603528a3da5c87" args="(bool clear=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clear</em> = <code>true</code></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>By default clears the object. Called from ReadMolecule of most format classes. </p>

</div>
</div>
<a class="anchor" id="a6726eb1601555e8e7d712c43416e6af7"></a><!-- doxytag: member="OpenBabel::OBAtom::GetTitle" ref="a6726eb1601555e8e7d712c43416e6af7" args="(bool replaceNewlines=true) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* GetTitle </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>replaceNewlines</em> = <code>true</code></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6f656d9b9241846d93d6bfbe2ee89818">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a class="anchor" id="a366c8a142b8c16554597e82320dfd0e0"></a><!-- doxytag: member="OpenBabel::OBAtom::SetTitle" ref="a366c8a142b8c16554597e82320dfd0e0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetTitle </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#acfe3b729dc90c4c5e21684e3a60653af">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a class="anchor" id="a86dd58fc1da5652d70e823fa77cc1637"></a><!-- doxytag: member="OpenBabel::OBAtom::HasData" ref="a86dd58fc1da5652d70e823fa77cc1637" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a4e794d96851deaad479e17b30928a3cd">OBDescriptor::MatchPairData()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a2a5208bfd803385534526eea570bf6b0">OBMoleculeFormat::ReadChemObjectImpl()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a class="anchor" id="a01b429ffcaf47cf265acd439ed2faca0"></a><!-- doxytag: member="OpenBabel::OBAtom::HasData" ref="a01b429ffcaf47cf265acd439ed2faca0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

</div>
</div>
<a class="anchor" id="a6cb103f12f49d86132ece200000da830"></a><!-- doxytag: member="OpenBabel::OBAtom::HasData" ref="a6cb103f12f49d86132ece200000da830" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a797e5b4d20b6233062d2fdba78a08e06"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="a797e5b4d20b6233062d2fdba78a08e06" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1a089d9c827830b5a9a2e644b267e510">OBDescriptor::DeleteProperties()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#afa417798ba7c13bf75a7ab04f2803cdb">OBMol::RenumberAtoms()</a>.</p>

</div>
</div>
<a class="anchor" id="ab586df65e3f115b69510820b34098ce9"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="ab586df65e3f115b69510820b34098ce9" args="(OBGenericData *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>gd</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete the given generic data from this object. </p>

</div>
</div>
<a class="anchor" id="aaf61a3ecb8f2926aaf117299388d43c2"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="aaf61a3ecb8f2926aaf117299388d43c2" args="(std::vector&lt; OBGenericData * &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>vg</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete all of the given generic data from this object. </p>

</div>
</div>
<a class="anchor" id="aa068a2a7b64d2ee73aedb8c6e3cf0c4c"></a><!-- doxytag: member="OpenBabel::OBAtom::DeleteData" ref="aa068a2a7b64d2ee73aedb8c6e3cf0c4c" args="(const std::string &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes the generic data with the specified attribute, returning false if not found. </p>

</div>
</div>
<a class="anchor" id="adb6b0ec89bfea783825b3b466e4dbc00"></a><!-- doxytag: member="OpenBabel::OBAtom::SetData" ref="adb6b0ec89bfea783825b3b466e4dbc00" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds a data object; does nothing if d==NULL. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a class="anchor" id="aa6f692332837387535e337413d0100de"></a><!-- doxytag: member="OpenBabel::OBAtom::CloneData" ref="aa6f692332837387535e337413d0100de" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CloneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Adds a copy of a data object; does nothing if d == NULL </p>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

</div>
</div>
<a class="anchor" id="a69c3286ed127949ba747afcc5b9a514a"></a><!-- doxytag: member="OpenBabel::OBAtom::DataSize" ref="a69c3286ed127949ba747afcc5b9a514a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t DataSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a> items attached to this molecule. </dd></dl>

</div>
</div>
<a class="anchor" id="aee672d91b694547fb072fdaa8e03cfe9"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="aee672d91b694547fb072fdaa8e03cfe9" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a48b73b591ecad6e541b5ceedb6618715">OBMolAngleIter::OBMolAngleIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a15547553c4072355819acbcf350dde77">OBMolRingIter::OBMolRingIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml#a7746689f376b4b9f2fc6a103dc101d38">OBMolTorsionIter::OBMolTorsionIter()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>.</p>

</div>
</div>
<a class="anchor" id="a22f0eade8b5924eec28ad50f0ce2031f"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="a22f0eade8b5924eec28ad50f0ce2031f" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a class="anchor" id="a483b277678a8ca48998742c80985fd0b"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="a483b277678a8ca48998742c80985fd0b" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a class="anchor" id="a90a551ff0a0ed3fa58745dff0ecacdaa"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="a90a551ff0a0ed3fa58745dff0ecacdaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>all data, suitable for iterating </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a class="anchor" id="aa959146c3f7b458009dc04f61b5a2e7f"></a><!-- doxytag: member="OpenBabel::OBAtom::GetData" ref="aa959146c3f7b458009dc04f61b5a2e7f" args="(DataOrigin source)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

</div>
</div>
<a class="anchor" id="afb56decc1b824c9fad980fc22e1d778c"></a><!-- doxytag: member="OpenBabel::OBAtom::GetAllData" ref="afb56decc1b824c9fad980fc22e1d778c" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetAllData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the all matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or an empty vector if nothing matches </dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a568e42fdfa07962a14761bb9875ee138">OBBuilder::CorrectStereoAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a6898b04c792072e4ace54885e9ff7b10">OBBuilder::CorrectStereoBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="a15b47c65393d46fde62d1f0a19bcf9fa"></a><!-- doxytag: member="OpenBabel::OBAtom::BeginData" ref="a15b47c65393d46fde62d1f0a19bcf9fa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> BeginData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a117c836710dd3aaa8748509262a5c280"></a><!-- doxytag: member="OpenBabel::OBAtom::EndData" ref="a117c836710dd3aaa8748509262a5c280" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> EndData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a2a4ac28765690d9b074521327cb4876b"></a><!-- doxytag: member="OpenBabel::OBAtom::_ele" ref="a2a4ac28765690d9b074521327cb4876b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a2a4ac28765690d9b074521327cb4876b">_ele</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>atomic number (type unsigned char to minimize space -- allows for 0..255 elements) </p>

</div>
</div>
<a class="anchor" id="ab3e028e65ae7c0dac55997f2cb7281ce"></a><!-- doxytag: member="OpenBabel::OBAtom::_impval" ref="ab3e028e65ae7c0dac55997f2cb7281ce" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab3e028e65ae7c0dac55997f2cb7281ce">_impval</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>implicit valence </p>

</div>
</div>
<a class="anchor" id="ae34265581460024d37fb0ff25d97f110"></a><!-- doxytag: member="OpenBabel::OBAtom::_type" ref="ae34265581460024d37fb0ff25d97f110" args="[6]" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae34265581460024d37fb0ff25d97f110">_type</a>[6]<code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>atomic type </p>

</div>
</div>
<a class="anchor" id="a6e636025c5db07bf67523b31a55f6327"></a><!-- doxytag: member="OpenBabel::OBAtom::_fcharge" ref="a6e636025c5db07bf67523b31a55f6327" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6e636025c5db07bf67523b31a55f6327">_fcharge</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>formal charge </p>

</div>
</div>
<a class="anchor" id="ad60f474b9381f875e4b6e3f5df457c9a"></a><!-- doxytag: member="OpenBabel::OBAtom::_isotope" ref="ad60f474b9381f875e4b6e3f5df457c9a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ad60f474b9381f875e4b6e3f5df457c9a">_isotope</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>isotope (0 = most abundant) </p>

</div>
</div>
<a class="anchor" id="aec3b74d938a5e47bc6a6627f64d86e27"></a><!-- doxytag: member="OpenBabel::OBAtom::_spinmultiplicity" ref="aec3b74d938a5e47bc6a6627f64d86e27" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aec3b74d938a5e47bc6a6627f64d86e27">_spinmultiplicity</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>atomic spin, e.g., 2 for radical 1 or 3 for carbene </p>

</div>
</div>
<a class="anchor" id="a1219a011a5e0ec59c67a5a873d81986c"></a><!-- doxytag: member="OpenBabel::OBAtom::_idx" ref="a1219a011a5e0ec59c67a5a873d81986c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>unique node index (<a class="el" href="classOpenBabel_1_1OBAtom.shtml#a80892a7fdfc7180a85160279c1186952">GetIdx()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ab994a975e39f5c62288f4f972b6f90c9" title="Set atom index (i.e., in an OBMol)">SetIdx()</a>) </p>

</div>
</div>
<a class="anchor" id="aa15238ffbdb1330727678c9d6553d6ba"></a><!-- doxytag: member="OpenBabel::OBAtom::_parent" ref="aa15238ffbdb1330727678c9d6553d6ba" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aa15238ffbdb1330727678c9d6553d6ba">_parent</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>parent molecule (if any) </p>

</div>
</div>
<a class="anchor" id="a3c7208419c7703e947e9a1c365838b98"></a><!-- doxytag: member="OpenBabel::OBAtom::_vbond" ref="a3c7208419c7703e947e9a1c365838b98" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>*&gt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a3c7208419c7703e947e9a1c365838b98">_vbond</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>bonds to this atom -- assumed to be one of the endpoints </p>

</div>
</div>
<a class="anchor" id="aef178db02607fe00f112bd1a7f5f4d2b"></a><!-- doxytag: member="OpenBabel::OBAtom::_cidx" ref="aef178db02607fe00f112bd1a7f5f4d2b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBAtom.shtml#aef178db02607fe00f112bd1a7f5f4d2b">_cidx</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>index into coordinate array </p>

</div>
</div>
<a class="anchor" id="a5d400386667c899017669303bdec09cd"></a><!-- doxytag: member="OpenBabel::OBAtom::_hyb" ref="a5d400386667c899017669303bdec09cd" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5d400386667c899017669303bdec09cd">_hyb</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>hybridization </p>

</div>
</div>
<a class="anchor" id="a5cc9f88f4cc5fda10e7932cd59a87f16"></a><!-- doxytag: member="OpenBabel::OBAtom::_flags" ref="a5cc9f88f4cc5fda10e7932cd59a87f16" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned short <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a5cc9f88f4cc5fda10e7932cd59a87f16">_flags</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>bitwise flags (e.g. aromaticity) </p>

</div>
</div>
<a class="anchor" id="ae4b9cf0b2f94fc6befff220367fccd0a"></a><!-- doxytag: member="OpenBabel::OBAtom::_pcharge" ref="ae4b9cf0b2f94fc6befff220367fccd0a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae4b9cf0b2f94fc6befff220367fccd0a">_pcharge</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>partial charge </p>

</div>
</div>
<a class="anchor" id="a91a32f6c060e12e4d188974db5b111d3"></a><!-- doxytag: member="OpenBabel::OBAtom::_c" ref="a91a32f6c060e12e4d188974db5b111d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double** <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a91a32f6c060e12e4d188974db5b111d3">_c</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>coordinate array in double* </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a7145217d4de73e243d2d3888dac404ba">OpenBabel::CartesianToInternal()</a>.</p>

</div>
</div>
<a class="anchor" id="ae8dcade9402fad862f0391488350ea3e"></a><!-- doxytag: member="OpenBabel::OBAtom::_v" ref="ae8dcade9402fad862f0391488350ea3e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ae8dcade9402fad862f0391488350ea3e">_v</a><code> [mutable, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>coordinate vector </p>

</div>
</div>
<a class="anchor" id="ac26545dc3d68694f0a7b6f4a776f7a17"></a><!-- doxytag: member="OpenBabel::OBAtom::_residue" ref="ac26545dc3d68694f0a7b6f4a776f7a17" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>* <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ac26545dc3d68694f0a7b6f4a776f7a17">_residue</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>parent residue (if applicable) </p>

</div>
</div>
<a class="anchor" id="accc49a515c7a81154bd46a8ea8a16204"></a><!-- doxytag: member="OpenBabel::OBAtom::_id" ref="accc49a515c7a81154bd46a8ea8a16204" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="classOpenBabel_1_1OBAtom.shtml#accc49a515c7a81154bd46a8ea8a16204">_id</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>unique id </p>

</div>
</div>
<a class="anchor" id="a6368d7673f23186649b2969ade3661d7"></a><!-- doxytag: member="OpenBabel::OBAtom::Visit" ref="a6368d7673f23186649b2969ade3661d7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classOpenBabel_1_1OBAtom.shtml#a6368d7673f23186649b2969ade3661d7">Visit</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Used internally by graph traversal algorithms. </p>

</div>
</div>
<a class="anchor" id="af7811cf8aadbf3b3477c560b0ef2f797"></a><!-- doxytag: member="OpenBabel::OBAtom::_vdata" ref="af7811cf8aadbf3b3477c560b0ef2f797" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; <a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Custom data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aafa7e4623d4c3c0305b5523ca8a77e14">OBMol::OBMol()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="atom_8h_source.shtml">atom.h</a></li>
<li><a class="el" href="atom_8cpp.shtml">atom.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:09 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
