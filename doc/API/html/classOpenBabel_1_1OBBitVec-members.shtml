<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">OBBitVec Member List</div>  </div>
</div>
<div class="contents">
This is the complete list of members for <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ad06f035d55e669326f14cd7c6ff724cc">BitIsOn</a>(int bit_offset) const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a9cbd85a20d3c22eed705e4215b5beff7">BitIsSet</a>(unsigned bit_offset) const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aa71d36872f416feaa853788a7a7a7ef8">Clear</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#acf47ba30bf82aff0a9f03029917c5849">CountBits</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a6fcfd4a80bfd7dc324f815cd351bfbdf">Empty</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a787ec2b13a14e73a2732a5eb0941c89a">EndBit</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ac00671a01df7cc0b2751cf01576cb48b">FirstBit</a>(unsigned bit_offset=0) const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a47b489f96fb83fb92444dc4fc69d052e">Fold</a>(unsigned new_bit_size)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a0e38205f69ea775ac85766e8fa84aa09">FromString</a>(const std::string &amp;line, int bits)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a6919c04c8f2a7a600d926dfb69a2ccff">FromVecInt</a>(const std::vector&lt; int &gt; &amp;bit_offsets)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aa28b8191c62589d996ac605c9cbe5829">GetSize</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a56df5cb29ee1da7ea5626ab4c0f35882">GetWords</a>(word_vector &amp;vec)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aaef62c8761ddd1b95824fc57b1b277b5">IsEmpty</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a00e05e1bb6f3185b1a40728679be5274">Negate</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ab8bac9f6bedd4c94792757d965945ac6">NextBit</a>(int last_bit_offset) const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#af0100bd07b2642e38b29dc8e74ff765b">OBBitVec</a>()</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ac5a4c3682c88b8d666b5d7d33183fb55">OBBitVec</a>(unsigned size_in_bits)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1a1bd9c96031c99d3209b04ef50b4d6c">OBBitVec</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a9beb722c4fb6a164ca45704c92c2eb35">operator&amp;</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a089f455ab3d208b87f8492d900009a47">operator&amp;=</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aa7711d3edd25794568784a430fd7b062">operator+=</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a9afe9bbf2fcb9441afbb636aad51e27e">operator-</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a321d8efee0bf7ca07bbffe94bda40b87">operator-=</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#aff92f9cf4ab168373dd84cb3f50714b2">operator&lt;</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a7b0a6021022c32f1e21ea411427a1d00">operator&lt;&lt;</a>(std::ostream &amp;os, const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a24793888dd45beaff49d652ce07bd823">operator=</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1ebdca3306fde1d1553fb6f796121a34">operator==</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a159591a12e5958414000352f4fb32f85">operator&gt;&gt;</a>(std::istream &amp;is, OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1f22ca998400b0babe0bee468189225b">operator[]</a>(int bit_offset) const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a60e304c03f383f60b6bdddc2b989e77b">operator^</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#afb212210bd7dffef43eaca0db7e3a499">operator^=</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1c09da3d5e947c68ef25c4fa7a72fbc3">operator|</a>(const OBBitVec &amp;bv1, const OBBitVec &amp;bv2)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ad34fbd2840a8afd87d69f4f71174407d">operator|=</a>(const OBBitVec &amp;bv)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a3f7949c8ca082670fa93310be6576854">operator|=</a>(int bit_offset)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a7bc2d3a9e8b18736d47932ba327afd38">Resize</a>(unsigned size_in_bits)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a6b57d4f315f27f863dfaba863f9d6c4c">ResizeWords</a>(unsigned size_in_words)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a5ca76b0cbbf2dd86395b0af704c8cdfb">SetBitOff</a>(unsigned bit_offset)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a0920b57e131b9eab47d6939e890cd521">SetBitOn</a>(unsigned bit_offset)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#af248c931e7d8abdcb0ca18ba0a3e8533">SetRangeOff</a>(unsigned lo_bit_offset, unsigned hi_bit_offset)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a1a5ff904f4dbba5c3d92bb1d98fa23c2">SetRangeOn</a>(unsigned lo_bit_offset, unsigned hi_bit_offset)</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#ad336607832d6ef7e48bed9fe103e0fa5">ToVecInt</a>(std::vector&lt; int &gt; &amp;bit_offsets) const </td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml#a732c7bffa6fdaeb8996f3a63450f422f">word_vector</a> typedef</td><td><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a></td><td></td></tr>
</table></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:09 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
