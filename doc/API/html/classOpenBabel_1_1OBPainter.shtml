<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBPainter Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBPainter.shtml">OBPainter</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">OBPainter Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBPainter" -->
<p><code>#include &lt;<a class="el" href="painter_8h_source.shtml">openbabel/depict/painter.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBPainter:</div>
<div class="dyncontent">
<div class="center"><img src="classOpenBabel_1_1OBPainter__inherit__graph.png" border="0" usemap="#OBPainter_inherit__map" alt="Inheritance graph"/></div>
<map name="OBPainter_inherit__map" id="OBPainter_inherit__map">
<area shape="rect" id="node3" href="classOpenBabel_1_1CairoPainter.shtml" title="CairoPainter" alt="" coords="5,83,109,112"/></map>
<center><span class="legend">[<a href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classOpenBabel_1_1OBPainter-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a39de5fab752e8e6d2af9e86041ab59e9">~OBPainter</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a135a190c2d8717af6c4b491504a17458">NewCanvas</a> (double width, double height)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a6b00885efc9bf26c5868f53f13ff3995">IsGood</a> () const =0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a7180ada44a877dec7004fe197ac353d9">SetFontFamily</a> (const std::string &amp;fontFamily)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a39a2ee83c7d868d98fb6d6505448368c">SetFontSize</a> (int pointSize)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a38087c772403c5a64295e847e52d88f8">SetFillColor</a> (const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;color)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a10c3142535e0162c928ad36b9c7ad7ff">SetPenColor</a> (const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;color)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a6a49a7a87584f4321e7a9c2d1d1cd4ae">SetPenWidth</a> (double width)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a8e28d0754cf8475fc015fd6b82d064eb">DrawLine</a> (double x1, double y1, double x2, double y2)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a863bcec97ffd4ca82a3669860943ad2c">DrawCircle</a> (double x, double y, double r)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#a47edaf962916310d2b3eb21aeecace05">DrawPolygon</a> (const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp;points)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#abd406d7a4ecb123aaf335a5eed7a559f">DrawText</a> (double x, double y, const std::string &amp;text)=0</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structOpenBabel_1_1OBFontMetrics.shtml">OBFontMetrics</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBPainter.shtml#aec3268ffd531e78091929eaaaf99634a">GetFontMetrics</a> (const std::string &amp;text)=0</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Abstract painter base class used by <a class="el" href="classOpenBabel_1_1OBDepict.shtml" title="2D depiction of molecules using OBPainter.">OBDepict</a>. </p>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.3 </dd></dl>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a39de5fab752e8e6d2af9e86041ab59e9"></a><!-- doxytag: member="OpenBabel::OBPainter::~OBPainter" ref="a39de5fab752e8e6d2af9e86041ab59e9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual ~<a class="el" href="classOpenBabel_1_1OBPainter.shtml">OBPainter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Virtual destructor to be inhereted by subclasses </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a135a190c2d8717af6c4b491504a17458"></a><!-- doxytag: member="OpenBabel::OBPainter::NewCanvas" ref="a135a190c2d8717af6c4b491504a17458" args="(double width, double height)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void NewCanvas </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a new canvas to paint on with size <code>width</code> x <code>height</code>. <a class="el" href="classOpenBabel_1_1OBDepict.shtml" title="2D depiction of molecules using OBPainter.">OBDepict</a> will always call NewCanvas before performing any drawing operations. Painters that are capable of drawing on a previously unspecified area don't need to implement this. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a550d23b07eacaa9b599c86821c72d918">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a6b00885efc9bf26c5868f53f13ff3995"></a><!-- doxytag: member="OpenBabel::OBPainter::IsGood" ref="a6b00885efc9bf26c5868f53f13ff3995" args="() const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool IsGood </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Before <a class="el" href="classOpenBabel_1_1OBDepict.shtml" title="2D depiction of molecules using OBPainter.">OBDepict</a> performes any drawing operation, this method is called to check if the painter is ready to start drawing. If this method returns false, drawing is aborted. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#af8e4fa4f6521108fdad88c402c3963e0">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a7180ada44a877dec7004fe197ac353d9"></a><!-- doxytag: member="OpenBabel::OBPainter::SetFontFamily" ref="a7180ada44a877dec7004fe197ac353d9" args="(const std::string &amp;fontFamily)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetFontFamily </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>fontFamily</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's font family. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a9fd65900e68befc5f17d836c58d74590">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a39a2ee83c7d868d98fb6d6505448368c"></a><!-- doxytag: member="OpenBabel::OBPainter::SetFontSize" ref="a39a2ee83c7d868d98fb6d6505448368c" args="(int pointSize)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetFontSize </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pointSize</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's font point size. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a642db2c67b0a803ddf516a309cf3db63">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a38087c772403c5a64295e847e52d88f8"></a><!-- doxytag: member="OpenBabel::OBPainter::SetFillColor" ref="a38087c772403c5a64295e847e52d88f8" args="(const OBColor &amp;color)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetFillColor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's fill color. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ab8eebb0cb991191d0add843b581a6995">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a10c3142535e0162c928ad36b9c7ad7ff"></a><!-- doxytag: member="OpenBabel::OBPainter::SetPenColor" ref="a10c3142535e0162c928ad36b9c7ad7ff" args="(const OBColor &amp;color)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetPenColor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBColor.shtml">OBColor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's pen color. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ac15e0798f03a90030b7476216ea80c9b">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a6a49a7a87584f4321e7a9c2d1d1cd4ae"></a><!-- doxytag: member="OpenBabel::OBPainter::SetPenWidth" ref="a6a49a7a87584f4321e7a9c2d1d1cd4ae" args="(double width)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetPenWidth </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the painter's pen width. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a533cee84ce534e491635dbfa48a38c88">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a8e28d0754cf8475fc015fd6b82d064eb"></a><!-- doxytag: member="OpenBabel::OBPainter::DrawLine" ref="a8e28d0754cf8475fc015fd6b82d064eb" args="(double x1, double y1, double x2, double y2)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void DrawLine </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Draw a line from <code>x1</code>, <code>y1</code> to <code>x2</code>, <code>y2</code>. The line is drawn using the current pen color and width. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a3743d551c10de455c399c8f9a940b88c">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a863bcec97ffd4ca82a3669860943ad2c"></a><!-- doxytag: member="OpenBabel::OBPainter::DrawCircle" ref="a863bcec97ffd4ca82a3669860943ad2c" args="(double x, double y, double r)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void DrawCircle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ae85b79bdf3eca6e115ca27ab9d4a3fcc">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="a47edaf962916310d2b3eb21aeecace05"></a><!-- doxytag: member="OpenBabel::OBPainter::DrawPolygon" ref="a47edaf962916310d2b3eb21aeecace05" args="(const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp;points)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void DrawPolygon </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::pair&lt; double, double &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>points</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Draw a polygon by connecting consecutive points. The last point will be connected to the first one. The lines are drawn using the current pen color and width. The area inside the polygon is filled with the current fill color. </p>

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#ad58425475eb726e5a312d33f6a9b18a8">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="abd406d7a4ecb123aaf335a5eed7a559f"></a><!-- doxytag: member="OpenBabel::OBPainter::DrawText" ref="abd406d7a4ecb123aaf335a5eed7a559f" args="(double x, double y, const std::string &amp;text)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void DrawText </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a69d3479c35fd7b378e1ac94ded85d3ad">CairoPainter</a>.</p>

</div>
</div>
<a class="anchor" id="aec3268ffd531e78091929eaaaf99634a"></a><!-- doxytag: member="OpenBabel::OBPainter::GetFontMetrics" ref="aec3268ffd531e78091929eaaaf99634a" args="(const std::string &amp;text)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structOpenBabel_1_1OBFontMetrics.shtml">OBFontMetrics</a> GetFontMetrics </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implemented in <a class="el" href="classOpenBabel_1_1CairoPainter.shtml#a28e06a6647207a2da44748adb732ad7c">CairoPainter</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="painter_8h_source.shtml">painter.h</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
