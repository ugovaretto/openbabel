<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBResidue Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">OBResidue Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBResidue" --><!-- doxytag: inherits="OpenBabel::OBBase" -->
<p><code>#include &lt;<a class="el" href="residue_8h_source.shtml">openbabel/residue.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBResidue:</div>
<div class="dyncontent">
<div class="center"><img src="classOpenBabel_1_1OBResidue__inherit__graph.png" border="0" usemap="#OBResidue_inherit__map" alt="Inheritance graph"/></div>
<map name="OBResidue_inherit__map" id="OBResidue_inherit__map">
<area shape="rect" id="node2" href="classOpenBabel_1_1OBBase.shtml" title="Base Class." alt="" coords="15,5,92,35"/></map>
<center><span class="legend">[<a href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classOpenBabel_1_1OBResidue-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a209fe98baf20de8f3a9fa0e18ab1a397">OBResidue</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue</a> (const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#aef348075604c0cede393f255546b1a17">~OBResidue</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">AddAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#adcb2b5249a58b4d8f546c3216b86651c">InsertAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">RemoveAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">Clear</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">SetName</a> (const std::string &amp;resname)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a85b5552b9b6d699aed667f4587b9e94b">SetNum</a> (const unsigned int resnum)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1d578b82c73df3d3add2d854473e6350">SetNum</a> (const std::string resnum)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a035ecf9b12c0d62081d0a3e5a9d3c98c">SetChain</a> (const char chain)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac1cd4d44ddc8e40dad300a43d6288c53">SetChainNum</a> (const unsigned int chainnum)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1a0264682b159979a57ee478b19111c8">SetIdx</a> (const unsigned int idx)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad4945233e0066b2b6fbfbe0ed73ae7bc">SetAtomID</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, const std::string &amp;id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a52f53369a63eabccdc3ecf5f02b9d211">SetHetAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, bool hetatm)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a18a42bad6c8fa5ee0a23cbd292cfe034">SetSerialNum</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom, unsigned int sernum)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a2e96306d57a0b29618a90fd2f1eb5f31">GetName</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a817edbdbe14e2d1a2df56766fbf1e86e">GetNum</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a71456aeaa4af6240da0bc162ef15a7be">GetNumString</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a8fe8033a10515ce4583973e1ae8dfd6d">GetNumAtoms</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a79a18754e910a57089b83c0e4598bc99">GetChain</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a4d44b719e43894381c15f02c7b07c801">GetChainNum</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a2d5d0b2164b4af01e12ae914ebe49c5e">GetIdx</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#abf8f05944ae2bf94463ef557fb2f6e97">GetResKey</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#af55938feea9c6a504609111583dfdd2a">GetAtoms</a> (void) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a55b3d11326ee365438d9c1cf97d0c51c">GetBonds</a> (bool exterior=true) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad22f4f066b751f8d6c55f155d380f2bd">GetAtomID</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#aa3450ea312e3177645be2aff9a63a4cc">GetSerialNum</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1bee4700366f0455cc64c8f8fe4986eb">GetAminoAcidProperty</a> (int) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a5af8c25998c59898195719eb90dcb226">GetAtomProperty</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a, int) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a0bf504badd0f3f11d537ee9374e37098">GetResidueProperty</a> (int) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#acbf3d5f13bc263f0957a70dedca072c8">IsHetAtom</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *atom) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#afdd9827904836a3365af1af852fbe0f7">IsResidueType</a> (int) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations</a> (const std::map&lt; std::string, std::string &gt; *, <a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab2f0cea1c162bbe8dd603528a3da5c87">CastAndClear</a> (bool clear=true)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6726eb1601555e8e7d712c43416e6af7">GetTitle</a> (bool replaceNewlines=true) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a366c8a142b8c16554597e82320dfd0e0">SetTitle</a> (const char *)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae3b07b388e733d5a0e9ee9654a4411a1">BeginAtoms</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a81afb84c73fe3e57e8edd5a472e175f6">EndAtoms</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a075ad65cbdba2504245591ad25df77ee">BeginAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;i)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#af5eea31cca0592139ea68162f211d6b2">NextAtom</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;i)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Generic data handling methods (via OBGenericData)</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a86dd58fc1da5652d70e823fa77cc1637">HasData</a> (const std::string &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a01b429ffcaf47cf265acd439ed2faca0">HasData</a> (const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6cb103f12f49d86132ece200000da830">HasData</a> (const unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a797e5b4d20b6233062d2fdba78a08e06">DeleteData</a> (unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#ab586df65e3f115b69510820b34098ce9">DeleteData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aaf61a3ecb8f2926aaf117299388d43c2">DeleteData</a> (std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa068a2a7b64d2ee73aedb8c6e3cf0c4c">DeleteData</a> (const std::string &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#adb6b0ec89bfea783825b3b466e4dbc00">SetData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa6f692332837387535e337413d0100de">CloneData</a> (<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *d)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a69c3286ed127949ba747afcc5b9a514a">DataSize</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aee672d91b694547fb072fdaa8e03cfe9">GetData</a> (const unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a22f0eade8b5924eec28ad50f0ce2031f">GetData</a> (const std::string &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a483b277678a8ca48998742c80985fd0b">GetData</a> (const char *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a90a551ff0a0ed3fa58745dff0ecacdaa">GetData</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#aa959146c3f7b458009dc04f61b5a2e7f">GetData</a> (<a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> source)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#afb56decc1b824c9fad980fc22e1d778c">GetAllData</a> (const unsigned int type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a15b47c65393d46fde62d1f0a19bcf9fa">BeginData</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a117c836710dd3aaa8748509262a5c280">EndData</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#abdc35302d8b2ddbbd0cb48de079527eb">_chain</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad719c79a18fbf14911233bb6e6119370">_aakey</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#aa09358b69ef09f768b7316011e53af22">_reskey</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad8397c5248306c4a2ea1aa0b79539cbb">_resnum</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae5b2a83968919b021e1189020fe3492a">_resname</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#af48bc2090137ce8be5ab8b86125734b7">_hetatm</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a520b293262a31a65c78c69b6177f871c">_atomid</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#abfa0f02c4ad4146e7250fb38a89b9387">_atoms</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBResidue.shtml#a51fea0daea9bfeed01133d1a7376523a">_sernum</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Residue information. </p>
<p>The residue information is drawn from PDB or MOL2 files (or similar), which track biomolecule information, and are stored in the <a class="el" href="classOpenBabel_1_1OBResidue.shtml" title="Residue information.">OBResidue</a> class. OBResidues are stored inside the <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> class and <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> classes. The residue information for an atom can be requested in the following way: </p>
<div class="fragment"><pre class="fragment">      OBAtom *atom;
      <a class="code" href="classOpenBabel_1_1OBResidue.shtml#a209fe98baf20de8f3a9fa0e18ab1a397" title="Constructor.">OBResidue</a> *r;
      atom = mol.GetAtom(1);
      r = atom-&gt;GetResidue();
</pre></div><p> The residue information for a molecule can be manipulated too: </p>
<div class="fragment"><pre class="fragment">      cout &lt;&lt; <span class="stringliteral">&quot;This molecule has &quot;</span> &lt;&lt; mol.NumResidues() &lt;&lt; <span class="stringliteral">&quot; residues.&quot;</span> &lt;&lt; endl;
      <a class="code" href="classOpenBabel_1_1OBResidue.shtml#a209fe98baf20de8f3a9fa0e18ab1a397" title="Constructor.">OBResidue</a> *r;
      r = mol.GetResidue(1);
</pre></div> </div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a209fe98baf20de8f3a9fa0e18ab1a397"></a><!-- doxytag: member="OpenBabel::OBResidue::OBResidue" ref="a209fe98baf20de8f3a9fa0e18ab1a397" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="ab1c75d4e3f23b57af05e7da7ff2a81f1"></a><!-- doxytag: member="OpenBabel::OBResidue::OBResidue" ref="ab1c75d4e3f23b57af05e7da7ff2a81f1" args="(const OBResidue &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy constructor. </p>

</div>
</div>
<a class="anchor" id="aef348075604c0cede393f255546b1a17"></a><!-- doxytag: member="OpenBabel::OBResidue::~OBResidue" ref="aef348075604c0cede393f255546b1a17" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a19156f703dd34221b38ad4a787648771"></a><!-- doxytag: member="OpenBabel::OBResidue::operator=" ref="a19156f703dd34221b38ad4a787648771" args="(const OBResidue &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBResidue.shtml">OBResidue</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ad08955a5355b302e5054fb10239d4d40"></a><!-- doxytag: member="OpenBabel::OBResidue::AddAtom" ref="ad08955a5355b302e5054fb10239d4d40" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add <code>atom</code> to this residue. Updates the atom via <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184" title="Attach an OBResidue res as containing this atom.">OBAtom::SetResidue()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#adcb2b5249a58b4d8f546c3216b86651c">OBResidue::InsertAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="adcb2b5249a58b4d8f546c3216b86651c"></a><!-- doxytag: member="OpenBabel::OBResidue::InsertAtom" ref="adcb2b5249a58b4d8f546c3216b86651c" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void InsertAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add <code>atom</code> to this residue. Updates the atom via <a class="el" href="classOpenBabel_1_1OBAtom.shtml#ade786f15ee67979fbb9c48970b22e184" title="Attach an OBResidue res as containing this atom.">OBAtom::SetResidue()</a> </p>

</div>
</div>
<a class="anchor" id="af56cd8bd9860e5f011d802d88dc571c7"></a><!-- doxytag: member="OpenBabel::OBResidue::RemoveAtom" ref="af56cd8bd9860e5f011d802d88dc571c7" args="(OBAtom *atom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RemoveAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Remove <code>atom</code> from this residue and update the atom. </p>

</div>
</div>
<a class="anchor" id="ad12fd937da5f4b0c4562888252fe214b"></a><!-- doxytag: member="OpenBabel::OBResidue::Clear" ref="ad12fd937da5f4b0c4562888252fe214b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Clear </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clear any and all data associated with this residue. Updates all atoms included in the residue, as well as calling <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object.">OBBase::Clear()</a> for any generic data. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether the call was successful. </dd></dl>

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBBase.shtml#ad12fd937da5f4b0c4562888252fe214b">OBBase</a>.</p>

</div>
</div>
<a class="anchor" id="a7cf274421c8b6705d6470aa7e57b41ab"></a><!-- doxytag: member="OpenBabel::OBResidue::SetName" ref="a7cf274421c8b6705d6470aa7e57b41ab" args="(const std::string &amp;resname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>resname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the name of this residue (e.g., "ALA"). Use 3-char PDB standard names. <a href="http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_79.html">http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_79.html</a> MODRES records for modified residues: <a href="http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html.">http://www.rcsb.org/pdb/file_formats/pdb/pdbguide2.2/part_36.html.</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a85b5552b9b6d699aed667f4587b9e94b"></a><!-- doxytag: member="OpenBabel::OBResidue::SetNum" ref="a85b5552b9b6d699aed667f4587b9e94b" args="(const unsigned int resnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNum </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>resnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the residue number (in the sequence) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a1d578b82c73df3d3add2d854473e6350"></a><!-- doxytag: member="OpenBabel::OBResidue::SetNum" ref="a1d578b82c73df3d3add2d854473e6350" args="(const std::string resnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNum </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>resnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a035ecf9b12c0d62081d0a3e5a9d3c98c"></a><!-- doxytag: member="OpenBabel::OBResidue::SetChain" ref="a035ecf9b12c0d62081d0a3e5a9d3c98c" args="(const char chain)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChain </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>chain</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the chain ID for this residue. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="ac1cd4d44ddc8e40dad300a43d6288c53"></a><!-- doxytag: member="OpenBabel::OBResidue::SetChainNum" ref="ac1cd4d44ddc8e40dad300a43d6288c53" args="(const unsigned int chainnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetChainNum </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>chainnum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the chain number for this residue. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a1a0264682b159979a57ee478b19111c8"></a><!-- doxytag: member="OpenBabel::OBResidue::SetIdx" ref="a1a0264682b159979a57ee478b19111c8" args="(const unsigned int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the internal index of this residue in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>. Intended mostly for internal use </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad656115fdd6749ef7ad8394ee687f375">OBMol::AddResidue()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7662758d1fe46ab3a3392b1970c6a656">OBMol::NewResidue()</a>.</p>

</div>
</div>
<a class="anchor" id="ad4945233e0066b2b6fbfbe0ed73ae7bc"></a><!-- doxytag: member="OpenBabel::OBResidue::SetAtomID" ref="ad4945233e0066b2b6fbfbe0ed73ae7bc" args="(OBAtom *atom, const std::string &amp;id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAtomID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the character code ID for an ATOM record for the supplied atom This does nothing if the supplied atom is not found in the residue </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad3bab31bf64ff6cb18f6ee259b3b8c11">OBMol::AddHydrogens()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a52f53369a63eabccdc3ecf5f02b9d211"></a><!-- doxytag: member="OpenBabel::OBResidue::SetHetAtom" ref="a52f53369a63eabccdc3ecf5f02b9d211" args="(OBAtom *atom, bool hetatm)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetHetAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>hetatm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a18a42bad6c8fa5ee0a23cbd292cfe034"></a><!-- doxytag: member="OpenBabel::OBResidue::SetSerialNum" ref="a18a42bad6c8fa5ee0a23cbd292cfe034" args="(OBAtom *atom, unsigned int sernum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSerialNum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>sernum</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the atomic serial number for a given atom (see <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml" title="Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside a molecule...">OBSerialNums</a>) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a2e96306d57a0b29618a90fd2f1eb5f31"></a><!-- doxytag: member="OpenBabel::OBResidue::GetName" ref="a2e96306d57a0b29618a90fd2f1eb5f31" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetName </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The residue name </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a817edbdbe14e2d1a2df56766fbf1e86e"></a><!-- doxytag: member="OpenBabel::OBResidue::GetNum" ref="a817edbdbe14e2d1a2df56766fbf1e86e" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The residue number (in the sequence) </dd></dl>

</div>
</div>
<a class="anchor" id="a71456aeaa4af6240da0bc162ef15a7be"></a><!-- doxytag: member="OpenBabel::OBResidue::GetNumString" ref="a71456aeaa4af6240da0bc162ef15a7be" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string GetNumString </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a8fe8033a10515ce4583973e1ae8dfd6d"></a><!-- doxytag: member="OpenBabel::OBResidue::GetNumAtoms" ref="a8fe8033a10515ce4583973e1ae8dfd6d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetNumAtoms </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of atoms in this residue </dd></dl>

</div>
</div>
<a class="anchor" id="a79a18754e910a57089b83c0e4598bc99"></a><!-- doxytag: member="OpenBabel::OBResidue::GetChain" ref="a79a18754e910a57089b83c0e4598bc99" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char GetChain </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The ID of the chain which includes this residue </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a4d44b719e43894381c15f02c7b07c801"></a><!-- doxytag: member="OpenBabel::OBResidue::GetChainNum" ref="a4d44b719e43894381c15f02c7b07c801" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetChainNum </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of the chain which includes this residue </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a2d5d0b2164b4af01e12ae914ebe49c5e"></a><!-- doxytag: member="OpenBabel::OBResidue::GetIdx" ref="a2d5d0b2164b4af01e12ae914ebe49c5e" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetIdx </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The internal index of this residue in the parent <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a202a80d2d05f526fa5186dfb797558d6">OBMol::DeleteResidue()</a>.</p>

</div>
</div>
<a class="anchor" id="abf8f05944ae2bf94463ef557fb2f6e97"></a><!-- doxytag: member="OpenBabel::OBResidue::GetResKey" ref="abf8f05944ae2bf94463ef557fb2f6e97" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetResKey </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The residue key (i.e., an entry in the <a class="el" href="namespaceOpenBabel_1_1OBResidueIndex.shtml" title="Residue names (index into Residue[] array)">OBResidueIndex</a> namespace) </dd></dl>

</div>
</div>
<a class="anchor" id="af55938feea9c6a504609111583dfdd2a"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAtoms" ref="af55938feea9c6a504609111583dfdd2a" args="(void) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt; GetAtoms </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>a vector of all atoms in this residue </dd></dl>

</div>
</div>
<a class="anchor" id="a55b3d11326ee365438d9c1cf97d0c51c"></a><!-- doxytag: member="OpenBabel::OBResidue::GetBonds" ref="a55b3d11326ee365438d9c1cf97d0c51c" args="(bool exterior=true) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> * &gt; GetBonds </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>exterior</em> = <code>true</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>all bonds in this residue. <code>exterior</code> includes bonds to atoms outside this residue (default is true) </dd></dl>

</div>
</div>
<a class="anchor" id="ad22f4f066b751f8d6c55f155d380f2bd"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAtomID" ref="ad22f4f066b751f8d6c55f155d380f2bd" args="(OBAtom *atom) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string GetAtomID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the atom ID (character code) for the supplied atom or "" if the atom is not found in this residue </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueData.shtml#a61ad927515ed6a722fd90d3610759197">OBResidueData::AssignBonds()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a5af8c25998c59898195719eb90dcb226">OBResidue::GetAtomProperty()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="aa3450ea312e3177645be2aff9a63a4cc"></a><!-- doxytag: member="OpenBabel::OBResidue::GetSerialNum" ref="aa3450ea312e3177645be2aff9a63a4cc" args="(OBAtom *atom) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetSerialNum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the serial number of the supplied atom (uses <a class="el" href="classOpenBabel_1_1OBSerialNums.shtml" title="Defines a map between serial numbers (e.g., in a PDB file) and OBAtom objects inside a molecule...">OBSerialNums</a>) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a1bee4700366f0455cc64c8f8fe4986eb"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAminoAcidProperty" ref="a1bee4700366f0455cc64c8f8fe4986eb" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetAminoAcidProperty </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>property</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether this residue has the supplied amino acid property defined from the <a class="el" href="namespaceOpenBabel_1_1OBAminoAcidProperty.shtml" title="Residue property definitions.">OBAminoAcidProperty</a> namespace </dd></dl>

</div>
</div>
<a class="anchor" id="a5af8c25998c59898195719eb90dcb226"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAtomProperty" ref="a5af8c25998c59898195719eb90dcb226" args="(OBAtom *a, int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetAtomProperty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>property</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether atom <code>a</code> has the supplied residue atom property defined from the <a class="el" href="namespaceOpenBabel_1_1OBResidueAtomProperty.shtml" title="Residue atom properties.">OBResidueAtomProperty</a> namespace </dd></dl>

</div>
</div>
<a class="anchor" id="a0bf504badd0f3f11d537ee9374e37098"></a><!-- doxytag: member="OpenBabel::OBResidue::GetResidueProperty" ref="a0bf504badd0f3f11d537ee9374e37098" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool GetResidueProperty </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>property</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether this residue has the supplied property defined from the <a class="el" href="namespaceOpenBabel_1_1OBResidueProperty.shtml" title="Residue types.">OBResidueProperty</a> namespace </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a5af8c25998c59898195719eb90dcb226">OBResidue::GetAtomProperty()</a>.</p>

</div>
</div>
<a class="anchor" id="acbf3d5f13bc263f0957a70dedca072c8"></a><!-- doxytag: member="OpenBabel::OBResidue::IsHetAtom" ref="acbf3d5f13bc263f0957a70dedca072c8" args="(OBAtom *atom) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsHetAtom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>atom</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>If the given atom is a HETATM record </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a5af8c25998c59898195719eb90dcb226">OBResidue::GetAtomProperty()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="afdd9827904836a3365af1af852fbe0f7"></a><!-- doxytag: member="OpenBabel::OBResidue::IsResidueType" ref="afdd9827904836a3365af1af852fbe0f7" args="(int) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsResidueType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>restype</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>If this residue matches the supplied <code>restype</code> Set by <a class="el" href="namespaceOpenBabel.shtml#a91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ae3b07b388e733d5a0e9ee9654a4411a1"></a><!-- doxytag: member="OpenBabel::OBResidue::BeginAtoms" ref="ae3b07b388e733d5a0e9ee9654a4411a1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a> BeginAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator to the beginning of the atom list in this residue </dd></dl>

</div>
</div>
<a class="anchor" id="a81afb84c73fe3e57e8edd5a472e175f6"></a><!-- doxytag: member="OpenBabel::OBResidue::EndAtoms" ref="a81afb84c73fe3e57e8edd5a472e175f6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#aed11ccd81d7abaccbdf10486a5ae0402">OBAtomIterator</a> EndAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator to the end of the atom list in this residue </dd></dl>

</div>
</div>
<a class="anchor" id="a075ad65cbdba2504245591ad25df77ee"></a><!-- doxytag: member="OpenBabel::OBResidue::BeginAtom" ref="a075ad65cbdba2504245591ad25df77ee" args="(std::vector&lt; OBAtom * &gt;::iterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * BeginAtom </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the iterator <code>i</code> to the beginning of the atom list in this residue </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="af5eea31cca0592139ea68162f211d6b2"></a><!-- doxytag: member="OpenBabel::OBResidue::NextAtom" ref="af5eea31cca0592139ea68162f211d6b2" args="(std::vector&lt; OBAtom * &gt;::iterator &amp;i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * NextAtom </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> * &gt;::iterator &amp;&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Increment the iterator <code>i</code> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The next atom (or NULL if none exist) </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidueAtomIter.shtml#add4575e56919bdb15840087bc98b74d5">OBResidueAtomIter::operator++()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="abdc8ffeb0749b563e1108a9ceaa0b394"></a><!-- doxytag: member="OpenBabel::OBResidue::DoTransformations" ref="abdc8ffeb0749b563e1108a9ceaa0b394" args="(const std::map&lt; std::string, std::string &gt; *, OBConversion *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a>* DoTransformations </td>
          <td>(</td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBConversion.shtml">OBConversion</a> *&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Perform a set of transformations specified by the user</p>
<p>Typically these are program options to filter or modify an object For example, see <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a> and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol::ClassDescription()</a> Base type does nothing </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol</a>.</p>

</div>
</div>
<a class="anchor" id="a6bb6ed5c064e3957d8dd03aba51e61f7"></a><!-- doxytag: member="OpenBabel::OBResidue::ClassDescription" ref="a6bb6ed5c064e3957d8dd03aba51e61f7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static const char* ClassDescription </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, static, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>A list of descriptions of command-line options for <a class="el" href="classOpenBabel_1_1OBBase.shtml#abdc8ffeb0749b563e1108a9ceaa0b394">DoTransformations()</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#ab72bba66cc9e40fb3b657a30d87bbe6d">OBMol</a>, and <a class="el" href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">OBReaction</a>.</p>

</div>
</div>
<a class="anchor" id="ab2f0cea1c162bbe8dd603528a3da5c87"></a><!-- doxytag: member="OpenBabel::OBResidue::CastAndClear" ref="ab2f0cea1c162bbe8dd603528a3da5c87" args="(bool clear=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">T* CastAndClear </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clear</em> = <code>true</code></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>By default clears the object. Called from ReadMolecule of most format classes. </p>

</div>
</div>
<a class="anchor" id="a6726eb1601555e8e7d712c43416e6af7"></a><!-- doxytag: member="OpenBabel::OBResidue::GetTitle" ref="a6726eb1601555e8e7d712c43416e6af7" args="(bool replaceNewlines=true) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* GetTitle </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>replaceNewlines</em> = <code>true</code></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Base type does nothing Made virtual around r3535 to simplify code which passes around OBBase*. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6f656d9b9241846d93d6bfbe2ee89818">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a class="anchor" id="a366c8a142b8c16554597e82320dfd0e0"></a><!-- doxytag: member="OpenBabel::OBResidue::SetTitle" ref="a366c8a142b8c16554597e82320dfd0e0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void SetTitle </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBMol.shtml#acfe3b729dc90c4c5e21684e3a60653af">OBMol</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a5800be99903abff0efbad8937f492bc4">OBMoleculeFormat::DoOutputOptions()</a>.</p>

</div>
</div>
<a class="anchor" id="a86dd58fc1da5652d70e823fa77cc1637"></a><!-- doxytag: member="OpenBabel::OBResidue::HasData" ref="a86dd58fc1da5652d70e823fa77cc1637" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a4e794d96851deaad479e17b30928a3cd">OBDescriptor::MatchPairData()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#a2a5208bfd803385534526eea570bf6b0">OBMoleculeFormat::ReadChemObjectImpl()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a class="anchor" id="a01b429ffcaf47cf265acd439ed2faca0"></a><!-- doxytag: member="OpenBabel::OBResidue::HasData" ref="a01b429ffcaf47cf265acd439ed2faca0" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists </dd></dl>

</div>
</div>
<a class="anchor" id="a6cb103f12f49d86132ece200000da830"></a><!-- doxytag: member="OpenBabel::OBResidue::HasData" ref="a6cb103f12f49d86132ece200000da830" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool HasData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether the generic attribute/value pair exists, for a given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a797e5b4d20b6233062d2fdba78a08e06"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="a797e5b4d20b6233062d2fdba78a08e06" args="(unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete any data matching the given <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a>. </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1a089d9c827830b5a9a2e644b267e510">OBDescriptor::DeleteProperties()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#afa417798ba7c13bf75a7ab04f2803cdb">OBMol::RenumberAtoms()</a>.</p>

</div>
</div>
<a class="anchor" id="ab586df65e3f115b69510820b34098ce9"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="ab586df65e3f115b69510820b34098ce9" args="(OBGenericData *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>gd</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete the given generic data from this object. </p>

</div>
</div>
<a class="anchor" id="aaf61a3ecb8f2926aaf117299388d43c2"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="aaf61a3ecb8f2926aaf117299388d43c2" args="(std::vector&lt; OBGenericData * &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DeleteData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>vg</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete all of the given generic data from this object. </p>

</div>
</div>
<a class="anchor" id="aa068a2a7b64d2ee73aedb8c6e3cf0c4c"></a><!-- doxytag: member="OpenBabel::OBResidue::DeleteData" ref="aa068a2a7b64d2ee73aedb8c6e3cf0c4c" args="(const std::string &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DeleteData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes the generic data with the specified attribute, returning false if not found. </p>

</div>
</div>
<a class="anchor" id="adb6b0ec89bfea783825b3b466e4dbc00"></a><!-- doxytag: member="OpenBabel::OBResidue::SetData" ref="adb6b0ec89bfea783825b3b466e4dbc00" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds a data object; does nothing if d==NULL. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a class="anchor" id="aa6f692332837387535e337413d0100de"></a><!-- doxytag: member="OpenBabel::OBResidue::CloneData" ref="aa6f692332837387535e337413d0100de" args="(OBGenericData *d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void CloneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Adds a copy of a data object; does nothing if d == NULL </p>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

</div>
</div>
<a class="anchor" id="a69c3286ed127949ba747afcc5b9a514a"></a><!-- doxytag: member="OpenBabel::OBResidue::DataSize" ref="a69c3286ed127949ba747afcc5b9a514a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t DataSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of <a class="el" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a> items attached to this molecule. </dd></dl>

</div>
</div>
<a class="anchor" id="aee672d91b694547fb072fdaa8e03cfe9"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="aee672d91b694547fb072fdaa8e03cfe9" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the first matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or NULL if nothing matches </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="namespaceOpenBabel.shtml#abefbf418290927a56b3d124d3cc646d7">OpenBabel::CorrectChirality()</a>, <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1AliasData.shtml#ae9370e865e83b4dfefbb8b6cb2c15535">AliasData::Expand()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, <a class="el" href="namespaceOpenBabel.shtml#a394447ad37adaf40565f53d07f5eed17">OpenBabel::GetAtomSymClass()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#ad2cdc7a2d0f83221e9536d391032c6ea">OBForceField::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a8be38bcae14834b6849d777e19885955">OBForceField::GetCoordinates()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad711b0ce04370b50be246e7b859d1f99">OBMol::GetNextFragment()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBMolAngleIter.shtml#a48b73b591ecad6e541b5ceedb6618715">OBMolAngleIter::OBMolAngleIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolRingIter.shtml#a15547553c4072355819acbcf350dde77">OBMolRingIter::OBMolRingIter()</a>, <a class="el" href="classOpenBabel_1_1OBMolTorsionIter.shtml#a7746689f376b4b9f2fc6a103dc101d38">OBMolTorsionIter::OBMolTorsionIter()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>.</p>

</div>
</div>
<a class="anchor" id="a22f0eade8b5924eec28ad50f0ce2031f"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="a22f0eade8b5924eec28ad50f0ce2031f" args="(const std::string &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a class="anchor" id="a483b277678a8ca48998742c80985fd0b"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="a483b277678a8ca48998742c80985fd0b" args="(const char *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * GetData </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>any data matching the given attribute name or NULL if nothing matches</dd>
<dd>
the value given an attribute name </dd></dl>

</div>
</div>
<a class="anchor" id="a90a551ff0a0ed3fa58745dff0ecacdaa"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="a90a551ff0a0ed3fa58745dff0ecacdaa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt;&amp; GetData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>all data, suitable for iterating </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aa04bad1a38d0d3bff9930e332f460dc2">OBMol::GetEnergies()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a5ba177c97c9b16781c3e87833359730c">OBMol::GetEnergy()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a22a1e9fe8d4ef1bebf8e9d9aa2cacc12">OBMol::SetEnergies()</a>.</p>

</div>
</div>
<a class="anchor" id="aa959146c3f7b458009dc04f61b5a2e7f"></a><!-- doxytag: member="OpenBabel::OBResidue::GetData" ref="aa959146c3f7b458009dc04f61b5a2e7f" args="(DataOrigin source)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>all data with a specific origin, suitable for iterating </dd></dl>

</div>
</div>
<a class="anchor" id="afb56decc1b824c9fad980fc22e1d778c"></a><!-- doxytag: member="OpenBabel::OBResidue::GetAllData" ref="afb56decc1b824c9fad980fc22e1d778c" args="(const unsigned int type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * &gt; GetAllData </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td><code> [inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the all matching data for a given type from <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> or an empty vector if nothing matches </dd></dl>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a568e42fdfa07962a14761bb9875ee138">OBBuilder::CorrectStereoAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a6898b04c792072e4ace54885e9ff7b10">OBBuilder::CorrectStereoBonds()</a>.</p>

</div>
</div>
<a class="anchor" id="a15b47c65393d46fde62d1f0a19bcf9fa"></a><!-- doxytag: member="OpenBabel::OBResidue::BeginData" ref="a15b47c65393d46fde62d1f0a19bcf9fa" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> BeginData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator pointing to the beginning of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<a class="anchor" id="a117c836710dd3aaa8748509262a5c280"></a><!-- doxytag: member="OpenBabel::OBResidue::EndData" ref="a117c836710dd3aaa8748509262a5c280" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#ad5ca88aa35c43da1b791c7703ec8978d">OBDataIterator</a> EndData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>An iterator pointing to the end of the data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#ac92c32a100a07407535d5412d1a3b3ae">OBMol::AddBond()</a>, <a class="el" href="classOpenBabel_1_1OBAtom.shtml#af2ee969f23433f548e39a909547869c7">OBAtom::Duplicate()</a>, <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a9d63c24cbe9dc1f6e82d58da2b67dafa">OBMol::operator=()</a>.</p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a1219a011a5e0ec59c67a5a873d81986c"></a><!-- doxytag: member="OpenBabel::OBResidue::_idx" ref="a1219a011a5e0ec59c67a5a873d81986c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1219a011a5e0ec59c67a5a873d81986c">_idx</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Residue index (i.e., internal index in an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a2d5d0b2164b4af01e12ae914ebe49c5e">OBResidue::GetIdx()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1a0264682b159979a57ee478b19111c8">OBResidue::SetIdx()</a>.</p>

</div>
</div>
<a class="anchor" id="abdc35302d8b2ddbbd0cb48de079527eb"></a><!-- doxytag: member="OpenBabel::OBResidue::_chain" ref="abdc35302d8b2ddbbd0cb48de079527eb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char <a class="el" href="classOpenBabel_1_1OBResidue.shtml#abdc35302d8b2ddbbd0cb48de079527eb">_chain</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Chain ID. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a79a18754e910a57089b83c0e4598bc99">OBResidue::GetChain()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a4d44b719e43894381c15f02c7b07c801">OBResidue::GetChainNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a035ecf9b12c0d62081d0a3e5a9d3c98c">OBResidue::SetChain()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ac1cd4d44ddc8e40dad300a43d6288c53">OBResidue::SetChainNum()</a>.</p>

</div>
</div>
<a class="anchor" id="ad719c79a18fbf14911233bb6e6119370"></a><!-- doxytag: member="OpenBabel::OBResidue::_aakey" ref="ad719c79a18fbf14911233bb6e6119370" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad719c79a18fbf14911233bb6e6119370">_aakey</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Amino Acid key ID -- see <a class="el" href="namespaceOpenBabel.shtml#a91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a1bee4700366f0455cc64c8f8fe4986eb">OBResidue::GetAminoAcidProperty()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">OBResidue::SetName()</a>.</p>

</div>
</div>
<a class="anchor" id="aa09358b69ef09f768b7316011e53af22"></a><!-- doxytag: member="OpenBabel::OBResidue::_reskey" ref="aa09358b69ef09f768b7316011e53af22" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBResidue.shtml#aa09358b69ef09f768b7316011e53af22">_reskey</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Residue key ID -- see <a class="el" href="namespaceOpenBabel.shtml#a91a8965770cf999c120602edb0c09bcd">SetResidueKeys()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a0bf504badd0f3f11d537ee9374e37098">OBResidue::GetResidueProperty()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#abf8f05944ae2bf94463ef557fb2f6e97">OBResidue::GetResKey()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#afdd9827904836a3365af1af852fbe0f7">OBResidue::IsResidueType()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">OBResidue::SetName()</a>.</p>

</div>
</div>
<a class="anchor" id="ad8397c5248306c4a2ea1aa0b79539cbb"></a><!-- doxytag: member="OpenBabel::OBResidue::_resnum" ref="ad8397c5248306c4a2ea1aa0b79539cbb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad8397c5248306c4a2ea1aa0b79539cbb">_resnum</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Residue number (i.e., in file) 23, 1B, etc. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a817edbdbe14e2d1a2df56766fbf1e86e">OBResidue::GetNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a71456aeaa4af6240da0bc162ef15a7be">OBResidue::GetNumString()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a85b5552b9b6d699aed667f4587b9e94b">OBResidue::SetNum()</a>.</p>

</div>
</div>
<a class="anchor" id="ae5b2a83968919b021e1189020fe3492a"></a><!-- doxytag: member="OpenBabel::OBResidue::_resname" ref="ae5b2a83968919b021e1189020fe3492a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ae5b2a83968919b021e1189020fe3492a">_resname</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Residue text name. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a2e96306d57a0b29618a90fd2f1eb5f31">OBResidue::GetName()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a7cf274421c8b6705d6470aa7e57b41ab">OBResidue::SetName()</a>.</p>

</div>
</div>
<a class="anchor" id="af48bc2090137ce8be5ab8b86125734b7"></a><!-- doxytag: member="OpenBabel::OBResidue::_hetatm" ref="af48bc2090137ce8be5ab8b86125734b7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;bool&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af48bc2090137ce8be5ab8b86125734b7">_hetatm</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Is a given atom a HETAM. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#acbf3d5f13bc263f0957a70dedca072c8">OBResidue::IsHetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a52f53369a63eabccdc3ecf5f02b9d211">OBResidue::SetHetAtom()</a>.</p>

</div>
</div>
<a class="anchor" id="a520b293262a31a65c78c69b6177f871c"></a><!-- doxytag: member="OpenBabel::OBResidue::_atomid" ref="a520b293262a31a65c78c69b6177f871c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a520b293262a31a65c78c69b6177f871c">_atomid</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Residue atom text IDs. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad22f4f066b751f8d6c55f155d380f2bd">OBResidue::GetAtomID()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad4945233e0066b2b6fbfbe0ed73ae7bc">OBResidue::SetAtomID()</a>.</p>

</div>
</div>
<a class="anchor" id="abfa0f02c4ad4146e7250fb38a89b9387"></a><!-- doxytag: member="OpenBabel::OBResidue::_atoms" ref="abfa0f02c4ad4146e7250fb38a89b9387" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a>*&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#abfa0f02c4ad4146e7250fb38a89b9387">_atoms</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>List of <a class="el" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> in this residue. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a075ad65cbdba2504245591ad25df77ee">OBResidue::BeginAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad22f4f066b751f8d6c55f155d380f2bd">OBResidue::GetAtomID()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af55938feea9c6a504609111583dfdd2a">OBResidue::GetAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a55b3d11326ee365438d9c1cf97d0c51c">OBResidue::GetBonds()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a8fe8033a10515ce4583973e1ae8dfd6d">OBResidue::GetNumAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#aa3450ea312e3177645be2aff9a63a4cc">OBResidue::GetSerialNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#acbf3d5f13bc263f0957a70dedca072c8">OBResidue::IsHetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af5eea31cca0592139ea68162f211d6b2">OBResidue::NextAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad4945233e0066b2b6fbfbe0ed73ae7bc">OBResidue::SetAtomID()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a52f53369a63eabccdc3ecf5f02b9d211">OBResidue::SetHetAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a18a42bad6c8fa5ee0a23cbd292cfe034">OBResidue::SetSerialNum()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#aef348075604c0cede393f255546b1a17">OBResidue::~OBResidue()</a>.</p>

</div>
</div>
<a class="anchor" id="a51fea0daea9bfeed01133d1a7376523a"></a><!-- doxytag: member="OpenBabel::OBResidue::_sernum" ref="a51fea0daea9bfeed01133d1a7376523a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned int&gt; <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a51fea0daea9bfeed01133d1a7376523a">_sernum</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>List of serial numbers. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad08955a5355b302e5054fb10239d4d40">OBResidue::AddAtom()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ad12fd937da5f4b0c4562888252fe214b">OBResidue::Clear()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#aa3450ea312e3177645be2aff9a63a4cc">OBResidue::GetSerialNum()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#ab1c75d4e3f23b57af05e7da7ff2a81f1">OBResidue::OBResidue()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a19156f703dd34221b38ad4a787648771">OBResidue::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBResidue.shtml#af56cd8bd9860e5f011d802d88dc571c7">OBResidue::RemoveAtom()</a>, and <a class="el" href="classOpenBabel_1_1OBResidue.shtml#a18a42bad6c8fa5ee0a23cbd292cfe034">OBResidue::SetSerialNum()</a>.</p>

</div>
</div>
<a class="anchor" id="af7811cf8aadbf3b3477c560b0ef2f797"></a><!-- doxytag: member="OpenBabel::OBResidue::_vdata" ref="af7811cf8aadbf3b3477c560b0ef2f797" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>*&gt; <a class="el" href="classOpenBabel_1_1OBBase.shtml#af7811cf8aadbf3b3477c560b0ef2f797">_vdata</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Custom data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#aafa7e4623d4c3c0305b5523ca8a77e14">OBMol::OBMol()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="residue_8h_source.shtml">residue.h</a></li>
<li><a class="el" href="residue_8cpp.shtml">residue.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
