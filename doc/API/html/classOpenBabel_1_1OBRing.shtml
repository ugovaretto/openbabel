<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRing Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">OBRing Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBRing" -->
<p><code>#include &lt;<a class="el" href="ring_8h_source.shtml">openbabel/ring.h</a>&gt;</code></p>

<p><a href="classOpenBabel_1_1OBRing-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ab3bace7b51e6e7d78048999bc2189e27">Size</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ab6d388ff8c4e4d4d4c37db31a36c01f4">PathSize</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a1c74fed3a281f591495387ec5fb0a050">IsAromatic</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a945b912388c54c9e48c36f11b270b2ce">SetType</a> (char *type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#aef1d0a90f7d5dd118380188a882a2480">SetType</a> (std::string &amp;type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a7f02f5442f2ed3aa2045587d3319ab7e">GetType</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a5f3dc6510cef07a2247e495d928afb10">GetRootAtom</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a30bcd8070ca5df7d8f9c665e22666d2e">IsMember</a> (<a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *a)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#acf3841f44863af6030c02f54a10ba635">IsMember</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *b)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a87c9cc8c92936bd191dca74f78fb84cb">IsInRing</a> (int i)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a82ba3a4d5db75e9f11d3ea8dd5ef32b8">SetParent</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *m)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ad8480b61159bc6cb861b17341dc2b29a">GetParent</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a2e91c040e3659233748563f119aa77da">findCenterAndNormal</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;center, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm1, <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;norm2)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Constructors</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#aca37bf71481749f6555e916555d9e7a2">OBRing</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ace01bbda7e867381b5b0416b3666a8e3">OBRing</a> (std::vector&lt; int &gt; &amp;path, int size)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a2abeced3e6e318f88abe9249833b6d25">OBRing</a> (std::vector&lt; int &gt; &amp;path, <a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> set)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a23338e172a6e54349b089741494a4562">OBRing</a> (const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;src)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a651c293bb5cfd688a358cf47d596c9c7">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;src)</td></tr>
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ab121c8e013115dd3efb26601ad1975d0">ring_id</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#a86d1b14f3c439c5be01e0f6c9dc60a1d">_path</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRing.shtml#ababc3e7a7e660eba9b2dfa3b2bc28782">_pathset</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Stores information on rings in a molecule from SSSR perception. </p>
<p>Ring information beyond atom and bond membership is usually not necessary, but more information can be had about the rings in a molecule. The <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> class is used to store the information from a Smallest Set of Smallest Rings (SSSR) perception of a molecule. The <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> member function <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775" title="Implements blue-obelisk:findSmallestSetOfSmallestRings.">OBMol::GetSSSR()</a> stores the information it perceives in a vector&lt;OBRing*&gt; inside the molecule. Perception is only done once for a molecule unless the connection table is modified. The following code demonstrates how to extract the SSSR information:</p>
<div class="fragment"><pre class="fragment">    OBMol mol;

    vector&lt;OBRing*&gt; vr;
    vr = mol.GetSSSR();
</pre></div><p>OBRings store the atom numbers of the atoms in each of the smallest set of smallest rings in both a vector&lt;int&gt; and an <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a>. An example of how to print out the atom numbers present in all SSSR rings is show below:</p>
<div class="fragment"><pre class="fragment">    vector&lt;OBRing*&gt;::iterator i;
    vector&lt;int&gt;::iterator j;
    vector&lt;OBRing*&gt; *rlist = (vector&lt;OBRing*&gt;*)mol.GetData(<span class="stringliteral">&quot;RingList&quot;</span>);
    <span class="keywordflow">for</span> (i = rlist-&gt;begin();i != rlist-&gt;end();++i)
    {
       <span class="keywordflow">for</span>(j = (*i)-&gt;_path.begin(); j != (*i)-&gt;_path.end(); ++j)
          cout &lt;&lt; *j &lt;&lt; <span class="charliteral">&#39; &#39;</span>;
       cout &lt;&lt; endl;
    }
</pre></div><p>will produce something like the following output for benzene:</p>
<div class="fragment"><pre class="fragment">    1 2 3 4 5 6
</pre></div><p>Ring information is automatically deleted from an <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> when it goes out of scope or the <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear all information from a molecule except OB_PATTERN_STRUCTURE left unchanged.">OBMol::Clear()</a> member function is called.</p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#findSmallestSetOfSmallestRings">blue-obelisk:findSmallestSetOfSmallestRings</a>. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aca37bf71481749f6555e916555d9e7a2"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="aca37bf71481749f6555e916555d9e7a2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ace01bbda7e867381b5b0416b3666a8e3"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="ace01bbda7e867381b5b0416b3666a8e3" args="(std::vector&lt; int &gt; &amp;path, int size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initialize a ring from a set of atom indexes <code>path</code> and with <code>size</code>. </p>

</div>
</div>
<a class="anchor" id="a2abeced3e6e318f88abe9249833b6d25"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="a2abeced3e6e318f88abe9249833b6d25" args="(std::vector&lt; int &gt; &amp;path, OBBitVec set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&#160;</td>
          <td class="paramname"><em>set</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a23338e172a6e54349b089741494a4562"></a><!-- doxytag: member="OpenBabel::OBRing::OBRing" ref="a23338e172a6e54349b089741494a4562" args="(const OBRing &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> copy constructor. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">src</td><td>reference to original <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> object (rhs) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a651c293bb5cfd688a358cf47d596c9c7"></a><!-- doxytag: member="OpenBabel::OBRing::operator=" ref="a651c293bb5cfd688a358cf47d596c9c7" args="(const OBRing &amp;src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBRing.shtml">OBRing</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> assignment operator. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">src</td><td>reference to original <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> object (rhs) </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>reference to modified <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> object (lhs) </dd></dl>

</div>
</div>
<a class="anchor" id="ab3bace7b51e6e7d78048999bc2189e27"></a><!-- doxytag: member="OpenBabel::OBRing::Size" ref="ab3bace7b51e6e7d78048999bc2189e27" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the size of this ring (i.e., how many atoms in the cycle) </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a8ae850aac19b7a1ff3c02b6f3c17d36f">OpenBabel::CompareRingSize()</a>, and <a class="el" href="classOpenBabel_1_1OBBond.shtml#ac567d206e2ca785c9a6d9d46ee00bb45">OBBond::FindSmallestRing()</a>.</p>

</div>
</div>
<a class="anchor" id="ab6d388ff8c4e4d4d4c37db31a36c01f4"></a><!-- doxytag: member="OpenBabel::OBRing::PathSize" ref="ab6d388ff8c4e4d4d4c37db31a36c01f4" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t PathSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the size of this ring (i.e., how many atoms in the cycle) </dd></dl>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000065">Deprecated:</a></b></dt><dd>Use <a class="el" href="classOpenBabel_1_1OBRing.shtml#ab3bace7b51e6e7d78048999bc2189e27">Size()</a> instead </dd></dl>

</div>
</div>
<a class="anchor" id="a1c74fed3a281f591495387ec5fb0a050"></a><!-- doxytag: member="OpenBabel::OBRing::IsAromatic" ref="a1c74fed3a281f591495387ec5fb0a050" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsAromatic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>whether this ring is aromatic If all atoms in this ring are aromatic, the ring will be considered aromatic </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000004">Todo:</a></b></dt><dd>This method uses implicit bonding -- bond info is not stored in <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a945b912388c54c9e48c36f11b270b2ce"></a><!-- doxytag: member="OpenBabel::OBRing::SetType" ref="a945b912388c54c9e48c36f11b270b2ce" args="(char *type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the ring type (see <a class="el" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a> for more) </p>

</div>
</div>
<a class="anchor" id="aef1d0a90f7d5dd118380188a882a2480"></a><!-- doxytag: member="OpenBabel::OBRing::SetType" ref="aef1d0a90f7d5dd118380188a882a2480" args="(std::string &amp;type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetType </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the ring type (see <a class="el" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a> for more) </p>

</div>
</div>
<a class="anchor" id="a7f02f5442f2ed3aa2045587d3319ab7e"></a><!-- doxytag: member="OpenBabel::OBRing::GetType" ref="a7f02f5442f2ed3aa2045587d3319ab7e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * GetType </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the ring type </dd></dl>

</div>
</div>
<a class="anchor" id="a5f3dc6510cef07a2247e495d928afb10"></a><!-- doxytag: member="OpenBabel::OBRing::GetRootAtom" ref="a5f3dc6510cef07a2247e495d928afb10" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetRootAtom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the index for the root atom. O for furan, S for thiazole, N for pyrrole. For 6 membered aromatic rings, the first non carbon atom is used for root. For 5 members rings the O, S or N (BOSum=3, valence=3) will be used for root </dd></dl>

</div>
</div>
<a class="anchor" id="a30bcd8070ca5df7d8f9c665e22666d2e"></a><!-- doxytag: member="OpenBabel::OBRing::IsMember" ref="a30bcd8070ca5df7d8f9c665e22666d2e" args="(OBAtom *a)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMember </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBAtom.shtml">OBAtom</a> *&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether atom <code>a</code> is a member of this ring </dd></dl>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#adbf96b6f2307d00a5f525ecc3a4c5bca">OpenBabel::get_bonds_of_ring()</a>.</p>

</div>
</div>
<a class="anchor" id="acf3841f44863af6030c02f54a10ba635"></a><!-- doxytag: member="OpenBabel::OBRing::IsMember" ref="acf3841f44863af6030c02f54a10ba635" args="(OBBond *b)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsMember </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether both atoms in bond <code>b</code> are in this ring </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.shtml#_todo000005">Todo:</a></b></dt><dd>This method uses implicit bonding -- bond info is not stored in <a class="el" href="classOpenBabel_1_1OBRing.shtml" title="Stores information on rings in a molecule from SSSR perception.">OBRing</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a87c9cc8c92936bd191dca74f78fb84cb"></a><!-- doxytag: member="OpenBabel::OBRing::IsInRing" ref="a87c9cc8c92936bd191dca74f78fb84cb" args="(int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInRing </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>Whether <code>i</code> as an atom index is in this ring </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>.</p>

</div>
</div>
<a class="anchor" id="a82ba3a4d5db75e9f11d3ea8dd5ef32b8"></a><!-- doxytag: member="OpenBabel::OBRing::SetParent" ref="a82ba3a4d5db75e9f11d3ea8dd5ef32b8" args="(OBMol *m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetParent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the parent of this ring to <code>m</code>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>.</p>

</div>
</div>
<a class="anchor" id="ad8480b61159bc6cb861b17341dc2b29a"></a><!-- doxytag: member="OpenBabel::OBRing::GetParent" ref="ad8480b61159bc6cb861b17341dc2b29a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a>* GetParent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the parent of this ring, or NULL if none has been defined </dd></dl>

</div>
</div>
<a class="anchor" id="a2e91c040e3659233748563f119aa77da"></a><!-- doxytag: member="OpenBabel::OBRing::findCenterAndNormal" ref="a2e91c040e3659233748563f119aa77da" args="(vector3 &amp;center, vector3 &amp;norm1, vector3 &amp;norm2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool findCenterAndNormal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>norm1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>norm2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the supplied vectors to the <code>center</code> of this ring, along with the <code>normal</code> (in both directions). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">center</td><td>The center of the ring </td></tr>
    <tr><td class="paramname">norm1</td><td>The normal of the best-fit plane for this ring </td></tr>
    <tr><td class="paramname">norm2</td><td>-1 * norm1 (i.e., the opposite direction of norm1) </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>True (success) </dd></dl>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="ab121c8e013115dd3efb26601ad1975d0"></a><!-- doxytag: member="OpenBabel::OBRing::ring_id" ref="ab121c8e013115dd3efb26601ad1975d0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classOpenBabel_1_1OBRing.shtml#ab121c8e013115dd3efb26601ad1975d0">ring_id</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>a unique id to ensure a stable sort in SSSR determination </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a8ae850aac19b7a1ff3c02b6f3c17d36f">OpenBabel::CompareRingSize()</a>.</p>

</div>
</div>
<a class="anchor" id="a86d1b14f3c439c5be01e0f6c9dc60a1d"></a><!-- doxytag: member="OpenBabel::OBRing::_path" ref="a86d1b14f3c439c5be01e0f6c9dc60a1d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; <a class="el" href="classOpenBabel_1_1OBRing.shtml#a86d1b14f3c439c5be01e0f6c9dc60a1d">_path</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>the path of this ring (i.e., the atom indexes) </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a2e91c040e3659233748563f119aa77da">OBRing::findCenterAndNormal()</a>, <a class="el" href="namespaceOpenBabel.shtml#adbf96b6f2307d00a5f525ecc3a4c5bca">OpenBabel::get_bonds_of_ring()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#ace01bbda7e867381b5b0416b3666a8e3">OBRing::OBRing()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a651c293bb5cfd688a358cf47d596c9c7">OBRing::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAromaticTyper.shtml#a0c70c9a0eec26db77fb26931fafab63b">OBAromaticTyper::SelectRootAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6d03ef3f811fa2c085694ccbf76051d4">OBMol::start_kekulize()</a>, and <a class="el" href="namespaceOpenBabel.shtml#ac932ad377c246fc19473d052ab3243a8">OpenBabel::visitRing()</a>.</p>

</div>
</div>
<a class="anchor" id="ababc3e7a7e660eba9b2dfa3b2bc28782"></a><!-- doxytag: member="OpenBabel::OBRing::_pathset" ref="ababc3e7a7e660eba9b2dfa3b2bc28782" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> <a class="el" href="classOpenBabel_1_1OBRing.shtml#ababc3e7a7e660eba9b2dfa3b2bc28782">_pathset</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>the path of this ring as a redundant bit vector </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRing.shtml#ace01bbda7e867381b5b0416b3666a8e3">OBRing::OBRing()</a>, <a class="el" href="classOpenBabel_1_1OBRing.shtml#a651c293bb5cfd688a358cf47d596c9c7">OBRing::operator=()</a>, and <a class="el" href="namespaceOpenBabel.shtml#ac932ad377c246fc19473d052ab3243a8">OpenBabel::visitRing()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="ring_8h_source.shtml">ring.h</a></li>
<li><a class="el" href="ring_8cpp.shtml">ring.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
