<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRotamerList Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml">OBRotamerList</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">OBRotamerList Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBRotamerList" --><!-- doxytag: inherits="OpenBabel::OBGenericData" -->
<p><code>#include &lt;<a class="el" href="rotamer_8h_source.shtml">openbabel/rotamer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBRotamerList:</div>
<div class="dyncontent">
<div class="center"><img src="classOpenBabel_1_1OBRotamerList__inherit__graph.png" border="0" usemap="#OBRotamerList_inherit__map" alt="Inheritance graph"/></div>
<map name="OBRotamerList_inherit__map" id="OBRotamerList_inherit__map">
<area shape="rect" id="node2" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data." alt="" coords="5,5,133,35"/></map>
<center><span class="legend">[<a href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classOpenBabel_1_1OBRotamerList-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#aa1cef5a8affd0b0f75891495f1674805">OBRotamerList</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *parent) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a193afbb27085bc1183ea8f415c99b989">~OBRotamerList</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#afd34dcbc8bd8c0fba2433b39f1e1d61b">Setup</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a> &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a7ecbed112a3ccc6252b88d4432b94c6e">Setup</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, unsigned char *ref, int nrotors)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#abccb611f60719e4ec9acf271a5aa934d">NumRotors</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a747209e491f2149ac86230cf6c3bd146">NumRotamers</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a731bb8e81cfd2699e1bfeb0c24fc7d2b">AddRotamer</a> (double *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a1abcce8335b5b98eb2ef691138e864eb">AddRotamer</a> (int *key)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#ab12cefb04ee9382126d785c965b99454">AddRotamer</a> (std::vector&lt; int &gt; key)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a2244fa5b56d6a839a32de2fd11156472">AddRotamer</a> (unsigned char *key)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a6f752b5a14fe102c0c274166e40f8eb4">AddRotamers</a> (unsigned char *arr, int nconf)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a2412585a6d0aeec3e6d7905226d89bcd">GetReferenceArray</a> (unsigned char *) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; double * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a3f0fbaf701b38d36aaa0a225de04841d">CreateConformerList</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a47d8b31fb5ca455ff3586b86e44acdfc">ExpandConformerList</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, std::vector&lt; double * &gt; &amp;confs)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#af0ec970ded1e0a8721469b45c58e4451">SetCurrentCoordinates</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol, std::vector&lt; int &gt; arr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a91c3efe37db1542a2f553440143915f9">SetBaseCoordinateSets</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;mol)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#aa06b0ac4b05d9a708e38da81868e9586">SetBaseCoordinateSets</a> (std::vector&lt; double * &gt; bc, unsigned int N)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a11ab9cdfece6567dfc4db629cddd0a93">NumBaseCoordinateSets</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#adbaf9eeafb825763acadfc785220412a">GetBaseCoordinateSet</a> (unsigned int i) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a0c317a10161689c407f29a6fcacdb852">NumAtoms</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac72c28db8b5bb8911845ada56220a1e0">GetAttribute</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac20b99b31895c99422fb1244def6e213">GetDataType</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac9527475c246fadbbab63a35376fd5fe">GetValue</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ad080c58f230c474935ed3e27cb2ba906">GetOrigin</a> () const </td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned char * &gt;<br class="typebreak"/>
::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a2948e1a74f2c22c575d6ddc6643f6ef1">BeginRotamer</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned char * &gt;<br class="typebreak"/>
::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a589d2df01c6f3e1cb1bf95b25e804409">EndRotamer</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Supports a set of rotamer coordinate sets for some number of potentially rotatable bonds. </p>
<p>A high-level class for rotamer / conformer generation, intended mainly for use with the related class <a class="el" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,.">OBRotorList</a> and the <a class="el" href="classOpenBabel_1_1OBRotorRules.shtml" title="Database of default hybridization torsional rules and SMARTS-defined OBRotorRule objects.">OBRotorRules</a> database</p>
<p>Rotamers represent conformational isomers formed simply by rotation of dihedral angles. On the other hand, conformers may include geometric relaxation (i.e., slight modification of bond lengths, bond angles, etc.)</p>
<p>The following shows an example of generating 2 conformers using different rotor states. Similar code could be used for systematic or Monte Carlo conformer sampling when combined with energy evaluation (molecular mechanics or otherwise).</p>
<div class="fragment"><pre class="fragment">      OBRotorList rl; <span class="comment">// used to sample all rotatable bonds via the OBRotorRules data</span>
      <span class="comment">// If you want to &quot;fix&quot; any particular atoms (i.e., freeze them in space)</span>
      <span class="comment">// then set up an OBBitVec of the fixed atoms and call</span>
      <span class="comment">// rl.SetFixAtoms(bitvec);</span>
      rl.Setup(mol);

      <span class="comment">// How many rotatable bonds are there?</span>
      cerr &lt;&lt; <span class="stringliteral">&quot; Number of rotors: &quot;</span> &lt;&lt; rl.Size() &lt;&lt; endl;

      <span class="comment">// indexed from 1, rotorKey[0] = 0</span>
      std::vector&lt;int&gt; rotorKey(rl.Size() + 1, 0);

      <span class="comment">// each entry represents the configuration of a rotor</span>
      <span class="comment">// e.g. indexes into OBRotor::GetResolution() -- the different angles</span>
      <span class="comment">//   to sample for a rotamer search</span>
      <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; rl.Size() + 1; ++i)
      rotorKey[i] = 0; <span class="comment">// could be anything from 0 .. OBRotor-&gt;GetResolution().size()</span>
      <span class="comment">// -1 is for no rotation</span>

      <span class="comment">// The OBRotamerList can generate conformations (i.e., coordinate sets)</span>
      <a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#aa1cef5a8affd0b0f75891495f1674805">OBRotamerList</a> rotamers;
      rotamers.SetBaseCoordinateSets(mol);
      rotamers.Setup(mol, rl);

      rotamers.AddRotamer(rotorKey);
      rotorKey[1] = 2; <span class="comment">// switch one rotor</span>
      rotamers.AddRotamer(rotorKey);

      rotamers.ExpandConformerList(mol, mol.GetConformers());

      <span class="comment">// change the molecule conformation</span>
      mol.SetConformer(0); <span class="comment">// rotorKey 0, 0, ...</span>
      conv.Write(&amp;mol);

      mol.SetConformer(1); <span class="comment">// rotorKey 0, 2, ...</span>
</pre></div> </div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa1cef5a8affd0b0f75891495f1674805"></a><!-- doxytag: member="OpenBabel::OBRotamerList::OBRotamerList" ref="aa1cef5a8affd0b0f75891495f1674805" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotamerList.shtml">OBRotamerList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a193afbb27085bc1183ea8f415c99b989"></a><!-- doxytag: member="OpenBabel::OBRotamerList::~OBRotamerList" ref="a193afbb27085bc1183ea8f415c99b989" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBRotamerList.shtml">OBRotamerList</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a5361d45ced4133323de80d61ae5ecf05"></a><!-- doxytag: member="OpenBabel::OBRotamerList::Clone" ref="a5361d45ced4133323de80d61ae5ecf05" args="(OBBase *parent) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> * Clone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"><em>parent</em></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a67bda850335747e7ac5d66629bda0a67">OBGenericData</a>.</p>

</div>
</div>
<a class="anchor" id="afd34dcbc8bd8c0fba2433b39f1e1d61b"></a><!-- doxytag: member="OpenBabel::OBRotamerList::Setup" ref="afd34dcbc8bd8c0fba2433b39f1e1d61b" args="(OBMol &amp;, OBRotorList &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Setup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBRotorList.shtml">OBRotorList</a> &amp;&#160;</td>
          <td class="paramname"><em>rl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set up a rotamer list based on an already created <a class="el" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,.">OBRotorList</a>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a3511ce0631f467170ac6d5a9c6d5edde">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa64a24788b054b2b29e98e0552ba27f0">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aabf7fa941ffdd2106f5f82f2afefa33f">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a class="anchor" id="a7ecbed112a3ccc6252b88d4432b94c6e"></a><!-- doxytag: member="OpenBabel::OBRotamerList::Setup" ref="a7ecbed112a3ccc6252b88d4432b94c6e" args="(OBMol &amp;mol, unsigned char *ref, int nrotors)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Setup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>ref</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nrotors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set up a rotamer list based on the supplied reference atoms and the number of rotors </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">mol</td><td>The molecule to evaluate </td></tr>
    <tr><td class="paramname">ref</td><td>An array of the 4 dihedral atoms for each rotor </td></tr>
    <tr><td class="paramname">nrotors</td><td>The number of rotors (i.e., the size of ref / 4) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abccb611f60719e4ec9acf271a5aa934d"></a><!-- doxytag: member="OpenBabel::OBRotamerList::NumRotors" ref="abccb611f60719e4ec9acf271a5aa934d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumRotors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of rotatable bonds considered </dd></dl>

</div>
</div>
<a class="anchor" id="a747209e491f2149ac86230cf6c3bd146"></a><!-- doxytag: member="OpenBabel::OBRotamerList::NumRotamers" ref="a747209e491f2149ac86230cf6c3bd146" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumRotamers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the number of rotamer (conformation) coordinate sets </dd></dl>

</div>
</div>
<a class="anchor" id="a731bb8e81cfd2699e1bfeb0c24fc7d2b"></a><!-- doxytag: member="OpenBabel::OBRotamerList::AddRotamer" ref="a731bb8e81cfd2699e1bfeb0c24fc7d2b" args="(double *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a rotamer to the list based on the supplied coordinate set as a double*. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a3511ce0631f467170ac6d5a9c6d5edde">OBForceField::RandomRotorSearchInitialize()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa64a24788b054b2b29e98e0552ba27f0">OBForceField::SystematicRotorSearchInitialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a1abcce8335b5b98eb2ef691138e864eb"></a><!-- doxytag: member="OpenBabel::OBRotamerList::AddRotamer" ref="a1abcce8335b5b98eb2ef691138e864eb" args="(int *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a rotamer to the list based on <code>key</code> as a configuration of the individual rotor bonds. </p>

</div>
</div>
<a class="anchor" id="ab12cefb04ee9382126d785c965b99454"></a><!-- doxytag: member="OpenBabel::OBRotamerList::AddRotamer" ref="ab12cefb04ee9382126d785c965b99454" args="(std::vector&lt; int &gt; key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a rotamer to the list based on <code>key</code> as a configuration of the individual rotor bonds. </p>

</div>
</div>
<a class="anchor" id="a2244fa5b56d6a839a32de2fd11156472"></a><!-- doxytag: member="OpenBabel::OBRotamerList::AddRotamer" ref="a2244fa5b56d6a839a32de2fd11156472" args="(unsigned char *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamer </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add a rotamer to the list based on <code>key</code> as a configuration of the individual rotor bonds. </p>

</div>
</div>
<a class="anchor" id="a6f752b5a14fe102c0c274166e40f8eb4"></a><!-- doxytag: member="OpenBabel::OBRotamerList::AddRotamers" ref="a6f752b5a14fe102c0c274166e40f8eb4" args="(unsigned char *arr, int nconf)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void AddRotamers </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>arr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nconf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Add <code>nconf</code> rotamers based on <code>as</code> an array of configurations much like <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a731bb8e81cfd2699e1bfeb0c24fc7d2b" title="Add a rotamer to the list based on the supplied coordinate set as a double*.">AddRotamer()</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>.</p>

</div>
</div>
<a class="anchor" id="a2412585a6d0aeec3e6d7905226d89bcd"></a><!-- doxytag: member="OpenBabel::OBRotamerList::GetReferenceArray" ref="a2412585a6d0aeec3e6d7905226d89bcd" args="(unsigned char *) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetReferenceArray </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>ref</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>A reference array (as used by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a731bb8e81cfd2699e1bfeb0c24fc7d2b" title="Add a rotamer to the list based on the supplied coordinate set as a double*.">AddRotamer()</a> as a configuration of the individual rotor bonds </dd></dl>

</div>
</div>
<a class="anchor" id="a2948e1a74f2c22c575d6ddc6643f6ef1"></a><!-- doxytag: member="OpenBabel::OBRotamerList::BeginRotamer" ref="a2948e1a74f2c22c575d6ddc6643f6ef1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned char*&gt;::iterator BeginRotamer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a589d2df01c6f3e1cb1bf95b25e804409"></a><!-- doxytag: member="OpenBabel::OBRotamerList::EndRotamer" ref="a589d2df01c6f3e1cb1bf95b25e804409" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned char*&gt;::iterator EndRotamer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a3f0fbaf701b38d36aaa0a225de04841d"></a><!-- doxytag: member="OpenBabel::OBRotamerList::CreateConformerList" ref="a3f0fbaf701b38d36aaa0a225de04841d" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; double * &gt; CreateConformerList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create a conformer list using the internal base set of coordinates. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The set of coordinates by rotating the bonds in each rotamer </dd></dl>

</div>
</div>
<a class="anchor" id="a47d8b31fb5ca455ff3586b86e44acdfc"></a><!-- doxytag: member="OpenBabel::OBRotamerList::ExpandConformerList" ref="a47d8b31fb5ca455ff3586b86e44acdfc" args="(OBMol &amp;mol, std::vector&lt; double * &gt; &amp;confs)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ExpandConformerList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; double * &gt; &amp;&#160;</td>
          <td class="paramname"><em>confs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create a conformer list using the internal base set of coordinates. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The set of coordinates as a reference in <code>confs</code> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a3511ce0631f467170ac6d5a9c6d5edde">OBForceField::RandomRotorSearchInitialize()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa64a24788b054b2b29e98e0552ba27f0">OBForceField::SystematicRotorSearchInitialize()</a>.</p>

</div>
</div>
<a class="anchor" id="af0ec970ded1e0a8721469b45c58e4451"></a><!-- doxytag: member="OpenBabel::OBRotamerList::SetCurrentCoordinates" ref="af0ec970ded1e0a8721469b45c58e4451" args="(OBMol &amp;mol, std::vector&lt; int &gt; arr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetCurrentCoordinates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt;&#160;</td>
          <td class="paramname"><em>arr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Change the current coordinate set </p>
<dl class="since"><dt><b>Since:</b></dt><dd>version 2.2 </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aabf7fa941ffdd2106f5f82f2afefa33f">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a class="anchor" id="a91c3efe37db1542a2f553440143915f9"></a><!-- doxytag: member="OpenBabel::OBRotamerList::SetBaseCoordinateSets" ref="a91c3efe37db1542a2f553440143915f9" args="(OBMol &amp;mol)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBaseCoordinateSets </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> &amp;&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copies the mol's conformers (the coordinates, NOT the pointers) into the object as base coordinates. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>, <a class="el" href="classOpenBabel_1_1OBConformerSearch.shtml#a908a9729ddc64dd383f093ab30a0aae3">OBConformerSearch::GetConformers()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a3511ce0631f467170ac6d5a9c6d5edde">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa64a24788b054b2b29e98e0552ba27f0">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aabf7fa941ffdd2106f5f82f2afefa33f">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a class="anchor" id="aa06b0ac4b05d9a708e38da81868e9586"></a><!-- doxytag: member="OpenBabel::OBRotamerList::SetBaseCoordinateSets" ref="aa06b0ac4b05d9a708e38da81868e9586" args="(std::vector&lt; double * &gt; bc, unsigned int N)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBaseCoordinateSets </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; double * &gt;&#160;</td>
          <td class="paramname"><em>bc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>N</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copies the coordinates in bc, NOT the pointers, into this object. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">bc</td><td>The conformer set for the molecule </td></tr>
    <tr><td class="paramname">N</td><td>The number of atoms in the molecule </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a11ab9cdfece6567dfc4db629cddd0a93"></a><!-- doxytag: member="OpenBabel::OBRotamerList::NumBaseCoordinateSets" ref="a11ab9cdfece6567dfc4db629cddd0a93" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumBaseCoordinateSets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of "base" coordinate sets (i.e., the number of conformers in the base <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>) </dd></dl>

</div>
</div>
<a class="anchor" id="adbaf9eeafb825763acadfc785220412a"></a><!-- doxytag: member="OpenBabel::OBRotamerList::GetBaseCoordinateSet" ref="adbaf9eeafb825763acadfc785220412a" args="(unsigned int i) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double* GetBaseCoordinateSet </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get a pointer to a specific base pointer (i.e., specific conformer) </p>

</div>
</div>
<a class="anchor" id="a0c317a10161689c407f29a6fcacdb852"></a><!-- doxytag: member="OpenBabel::OBRotamerList::NumAtoms" ref="a0c317a10161689c407f29a6fcacdb852" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NumAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of atoms in the base <a class="el" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aae3d15983201a2a115701b2c538fef77"></a><!-- doxytag: member="OpenBabel::OBRotamerList::SetAttribute" ref="aae3d15983201a2a115701b2c538fef77" args="(const std::string &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the attribute (key), which can be used to retrieve this data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a class="anchor" id="a45613e34598a9584fb0120ef3fdab9e0"></a><!-- doxytag: member="OpenBabel::OBRotamerList::SetOrigin" ref="a45613e34598a9584fb0120ef3fdab9e0" args="(const DataOrigin s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the origin of this data, which can be used to filter the data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a class="anchor" id="ac72c28db8b5bb8911845ada56220a1e0"></a><!-- doxytag: member="OpenBabel::OBRotamerList::GetAttribute" ref="ac72c28db8b5bb8911845ada56220a1e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div>
<a class="anchor" id="ac20b99b31895c99422fb1244def6e213"></a><!-- doxytag: member="OpenBabel::OBRotamerList::GetDataType" ref="ac20b99b31895c99422fb1244def6e213" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ac9527475c246fadbbab63a35376fd5fe"></a><!-- doxytag: member="OpenBabel::OBRotamerList::GetValue" ref="ac9527475c246fadbbab63a35376fd5fe" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Base class returns a default value (the attribute type) but should never be called. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBPairData.shtml#ac9527475c246fadbbab63a35376fd5fe">OBPairData</a>, and <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#ac9527475c246fadbbab63a35376fd5fe">OBCommentData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>.</p>

</div>
</div>
<a class="anchor" id="ad080c58f230c474935ed3e27cb2ba906"></a><!-- doxytag: member="OpenBabel::OBRotamerList::GetOrigin" ref="ad080c58f230c474935ed3e27cb2ba906" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="adceb77134f15418a66cf1124dcef1b51"></a><!-- doxytag: member="OpenBabel::OBRotamerList::_attr" ref="adceb77134f15418a66cf1124dcef1b51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>attribute tag (e.g., "UnitCell", "Comment" or "Author") </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a class="anchor" id="a31291823d487a4a47f24aae5870505ef"></a><!-- doxytag: member="OpenBabel::OBRotamerList::_type" ref="a31291823d487a4a47f24aae5870505ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>attribute type -- declared for each subclass </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a class="anchor" id="a239606b62a534e4df7626ea0cfdfb856"></a><!-- doxytag: member="OpenBabel::OBRotamerList::_source" ref="a239606b62a534e4df7626ea0cfdfb856" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>source of data for accounting </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#a7c2db1828edcca7ff07c8591744ec3a4">OBConformerData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ae1e415e9a406f4965be7352a3c66fa3a">OBSymmetryData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab526e7eddb908b711e19aa355d133241">OBTorsionData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#af0af03b552fac05db59787be08a443eb">OBAngleData::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#a2d8a571296610389b9427aef139b1d8d">OBChiralData::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="rotamer_8h_source.shtml">rotamer.h</a></li>
<li><a class="el" href="rotamer_8cpp.shtml">rotamer.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
