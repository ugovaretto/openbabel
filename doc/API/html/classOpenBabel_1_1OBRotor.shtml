<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBRotor Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">OBRotor Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBRotor" -->
<p><code>#include &lt;<a class="el" href="rotor_8h_source.shtml">openbabel/rotor.h</a>&gt;</code></p>

<p><a href="classOpenBabel_1_1OBRotor-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a5b2c2642b2a9bc339c2bd5fdd7112c10">OBRotor</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a6a1a300dca75a2089732a7a66f7e1234">~OBRotor</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a9e776c30d29ce2b4832a9ae3dace64ea">RemoveSymTorsionValues</a> (int)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Setup</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a75c73979e73fb44e48424150fa0208c7">SetBond</a> (<a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *bond)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ab994a975e39f5c62288f4f972b6f90c9">SetIdx</a> (int idx)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a49bb9b1c86b312984e9e9f28caffe7f7">SetDihedralAtoms</a> (std::vector&lt; int &gt; &amp;ref)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#acac104fcce61a5bf289473b60f9826f8">SetDihedralAtoms</a> (int ref[4])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a04af4e63bd23ee0d160afc55107d1e32">SetRotAtoms</a> (std::vector&lt; int &gt; &amp;atoms)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a0d37d5e994df8c97fe401ee821a3cbe7">SetTorsionValues</a> (std::vector&lt; double &gt; &amp;angles)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ab263260a251aaa20610c7ca9dba31491">SetFixedBonds</a> (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;bv)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Performing rotations</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a00e2cf7f72570502a2e543e85499b1cc">SetToAngle</a> (double *coordinates, double setang)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ae1e4ad40e6514cc72c9587245989c9bc">SetRotor</a> (double *coordinates, int next, int prev=-1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#affffe6e68eecc96bb8189c8b0f8ffc4a">Set</a> (double *coordinates, double sine, double cosine, double translation, double invmag)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a8aa59b64a8b8b3a54ec081af5986f8e3">Precompute</a> (double *coordinates)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a74f31787078ef1b25dfe9b7da2d10c8f">Set</a> (double *coordinates, int idx)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a619485e3dec9a4a3e3dced49344ede90">Precalc</a> (std::vector&lt; double * &gt; &amp;conformers)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a1ade9c212155ac04f25ddf32731657ea">Set</a> (double *coordinates, int conformer, int idx)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Methods to retrieve information</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a1b723190c734e234d87398f8eb245a8e">GetBond</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a7b470b21b5807f0a9162bef72aebfef9">Size</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ac8451eabbc164153f5030ae9723cf48b">GetIdx</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a44db679688b64e9032ea9bf6def76315">GetDihedralAtoms</a> (int ref[4])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a75d6cacf7c1783272f74546387716902">GetDihedralAtoms</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const std::vector&lt; int &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a7092cc4675cd2c384be6c8d4cf6b75ae">GetRotAtoms</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const std::vector&lt; double &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a21e54e7c2d59ecbf4dfd8787a9d204e0">GetTorsionValues</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ade5378a288a25258f4e3cc28a954bc2e">GetFixedBonds</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#abe6d75394c35f0cc1722eefd849cfbd4">CalcTorsion</a> (double *coordinates)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a1f707fec840e4ec5dc6d3901e680fe5c">CalcBondLength</a> (double *coordinates)</td></tr>
<tr><td colspan="2"><div class="groupHeader">Iterator methods</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; double &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a06d5fdac08688bdff198a92c78bdeb69">BeginTorIncrement</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; double &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ac5857c1e09978240624038b2c6352dcc">EndTorIncrement</a> ()</td></tr>
<tr><td colspan="2"><div class="groupHeader">Deprecated</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a800aee2a9873012ac7e2a1bcedd5c6ba">SetDelta</a> (double d)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#abaa1b786f36fb9bc98b5c46e74425056">GetDelta</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a937745b1178a21d8b223992d16d7d50a">GetFixedAtoms</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a530a0fd1a1e312d489b367ac73e56bb7">SetFixedAtoms</a> (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;bv)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#ab690ce98b2f06352f9079eeae94da3c4">GetEvalAtoms</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a33bdb71641015f05a632ffaf76e7672a">SetEvalAtoms</a> (<a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;bv)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#aa68d318d4f18049ca83fbbe8d1c5fa90">GetRotAtoms</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; double &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a8feebfa38afe9888e7a50e421b8f5243">GetResolution</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBRotor.shtml#a4e82f80e2cd8faf3bce17c464ab1672c">SetNumCoords</a> (int nc)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>A single rotatable <a class="el" href="classOpenBabel_1_1OBBond.shtml" title="Bond class.">OBBond</a> as part of rotamer searching. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5b2c2642b2a9bc339c2bd5fdd7112c10"></a><!-- doxytag: member="OpenBabel::OBRotor::OBRotor" ref="a5b2c2642b2a9bc339c2bd5fdd7112c10" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Constructor. </p>

</div>
</div>
<a class="anchor" id="a6a1a300dca75a2089732a7a66f7e1234"></a><!-- doxytag: member="OpenBabel::OBRotor::~OBRotor" ref="a6a1a300dca75a2089732a7a66f7e1234" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBRotor.shtml">OBRotor</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destructor. </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a75c73979e73fb44e48424150fa0208c7"></a><!-- doxytag: member="OpenBabel::OBRotor::SetBond" ref="a75c73979e73fb44e48424150fa0208c7" args="(OBBond *bond)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetBond </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a> *&#160;</td>
          <td class="paramname"><em>bond</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the <a class="el" href="classOpenBabel_1_1OBBond.shtml" title="Bond class.">OBBond</a> associated with this <a class="el" href="classOpenBabel_1_1OBRotor.shtml" title="A single rotatable OBBond as part of rotamer searching.">OBRotor</a>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014">OBRotorList::FindRotors()</a>.</p>

</div>
</div>
<a class="anchor" id="ab994a975e39f5c62288f4f972b6f90c9"></a><!-- doxytag: member="OpenBabel::OBRotor::SetIdx" ref="ab994a975e39f5c62288f4f972b6f90c9" args="(int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetIdx </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the index for this rotor. Used by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,.">OBRotorList</a> </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014">OBRotorList::FindRotors()</a>.</p>

</div>
</div>
<a class="anchor" id="a49bb9b1c86b312984e9e9f28caffe7f7"></a><!-- doxytag: member="OpenBabel::OBRotor::SetDihedralAtoms" ref="a49bb9b1c86b312984e9e9f28caffe7f7" args="(std::vector&lt; int &gt; &amp;ref)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetDihedralAtoms </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>ref</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the dihedral atoms. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ref</td><td>The dihedral atom indexes. These indexes start from 1. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a1d06cdda315ea9b96d14aeb10d352e61">OBRotorList::AssignTorVals()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#ac08d1221790bd6f14418e3f77e6e725a">OBRotorList::SetRotAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#af216aef19cf7a82fb1e57504b39f9329">OBRotorList::SetRotAtomsByFix()</a>.</p>

</div>
</div>
<a class="anchor" id="acac104fcce61a5bf289473b60f9826f8"></a><!-- doxytag: member="OpenBabel::OBRotor::SetDihedralAtoms" ref="acac104fcce61a5bf289473b60f9826f8" args="(int ref[4])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetDihedralAtoms </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ref</em>[4]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the dihedral atoms. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ref</td><td>The dihedral atom indexes. These indexes start from 1. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a04af4e63bd23ee0d160afc55107d1e32"></a><!-- doxytag: member="OpenBabel::OBRotor::SetRotAtoms" ref="a04af4e63bd23ee0d160afc55107d1e32" args="(std::vector&lt; int &gt; &amp;atoms)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetRotAtoms </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>atoms</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the atom indexes that will be displaced when this rotor changes torsion angle. These indexes start from 0 and are multiplied by 3 for easy coordinate access. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a1d06cdda315ea9b96d14aeb10d352e61">OBRotorList::AssignTorVals()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#ac08d1221790bd6f14418e3f77e6e725a">OBRotorList::SetRotAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#af216aef19cf7a82fb1e57504b39f9329">OBRotorList::SetRotAtomsByFix()</a>.</p>

</div>
</div>
<a class="anchor" id="a0d37d5e994df8c97fe401ee821a3cbe7"></a><!-- doxytag: member="OpenBabel::OBRotor::SetTorsionValues" ref="a0d37d5e994df8c97fe401ee821a3cbe7" args="(std::vector&lt; double &gt; &amp;angles)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetTorsionValues </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>angles</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the possible torsion values or angles. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a1d06cdda315ea9b96d14aeb10d352e61">OBRotorList::AssignTorVals()</a>.</p>

</div>
</div>
<a class="anchor" id="ab263260a251aaa20610c7ca9dba31491"></a><!-- doxytag: member="OpenBabel::OBRotor::SetFixedBonds" ref="ab263260a251aaa20610c7ca9dba31491" args="(OBBitVec &amp;bv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFixedBonds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td>
          <td class="paramname"><em>bv</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the bonds that will be fixed. </p>

</div>
</div>
<a class="anchor" id="a00e2cf7f72570502a2e543e85499b1cc"></a><!-- doxytag: member="OpenBabel::OBRotor::SetToAngle" ref="a00e2cf7f72570502a2e543e85499b1cc" args="(double *coordinates, double setang)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetToAngle </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>setang</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Rotate the atoms in the specified <code>coordinates</code> to the specified angle. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The coordinates to rotate. </td></tr>
    <tr><td class="paramname">setang</td><td>The new torsion angle in radians. </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>.</p>

</div>
</div>
<a class="anchor" id="ae1e4ad40e6514cc72c9587245989c9bc"></a><!-- doxytag: member="OpenBabel::OBRotor::SetRotor" ref="ae1e4ad40e6514cc72c9587245989c9bc" args="(double *coordinates, int next, int prev=&#45;1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetRotor </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>next</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>prev</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Rotate the atoms in the specified <code>coordinates</code>. This function does not require any precomputation and will compute all needed information when needed. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The coordinates for the molecules as pointer to double. </td></tr>
    <tr><td class="paramname">next</td><td>The index of the new rotor angle. This is an index for the <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a21e54e7c2d59ecbf4dfd8787a9d204e0">GetTorsionValues()</a> list. </td></tr>
    <tr><td class="paramname">prev</td><td>If specified, the torsion current torsion angle can be looked up and does not have to be calculated again. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="affffe6e68eecc96bb8189c8b0f8ffc4a"></a><!-- doxytag: member="OpenBabel::OBRotor::Set" ref="affffe6e68eecc96bb8189c8b0f8ffc4a" args="(double *coordinates, double sine, double cosine, double translation, double invmag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Set </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>cosine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>translation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>invmag</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Rotate the specified <code>coordinates</code> by using the specified rotation matrix. </p>

</div>
</div>
<a class="anchor" id="a8aa59b64a8b8b3a54ec081af5986f8e3"></a><!-- doxytag: member="OpenBabel::OBRotor::Precompute" ref="a8aa59b64a8b8b3a54ec081af5986f8e3" args="(double *coordinates)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Precompute </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Precompute the reference angle and inverse bond length of this rotor for a single conformer. This function should be used in combination with <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a74f31787078ef1b25dfe9b7da2d10c8f">Set(double *coordinates, int idx)</a>. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The coordinates to use in the computation.</td></tr>
  </table>
  </dd>
</dl>
<div class="fragment"><pre class="fragment"> OBMol mol;
 ...

 <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> numCoords = mol.NumAtoms() * 3;
 <span class="keywordtype">double</span> *coords = mol.GetCoordinates();
 <a class="code" href="classOpenBabel_1_1OBRotor.shtml#a5b2c2642b2a9bc339c2bd5fdd7112c10">OBRotor</a> rotor;
 rotor.SetBond(mol.GetBond(3));

 <span class="comment">// set the possible torsion values</span>
 std::vector&lt;double&gt; angles;
 angles.push_back(0.0);
 angles.push_back(3.1415);
 rotor.SetTorsionValues(angles);

 <span class="comment">// precompute inverse bond length (i.e. the bond length of bond with index 3</span>
 <span class="comment">// using the specified coordinates) and reference angle (i.e. torsion angle</span>
 <span class="comment">//in coords)</span>
 rotor.Precompute(coords);

 <span class="comment">// copy coordinates to coords_1</span>
 <span class="keywordtype">double</span> *coords_1 = <span class="keyword">new</span> <span class="keywordtype">double</span>[numCoords];
 <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numCoords; ++i)
   coords_1[i] = coords[i];
 <span class="comment">// rotate the atoms in coords_1 to angle with index 0 (i.e. 0.0 degrees)</span>
 <span class="comment">// note: on input, the coordinates should be the same as the coordinates used</span>
 <span class="comment">//       to precompute the inverse bond length and reference angle (in other</span>
 <span class="comment">//       words, the inverse magnitude and reference angle in the specfied</span>
 <span class="comment">//       coordinates should be the same as the one used for Precompute)</span>
 rotor.Set(coords_1, 0)

 <span class="comment">// copy coordinates to coords_2</span>
 <span class="keywordtype">double</span> *coords_2 = <span class="keyword">new</span> <span class="keywordtype">double</span>[numCoords];
 <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; numCoords; ++i)
   coords_2[i] = coords[i];
 <span class="comment">// rotate the atoms in coords_2 to angle with index 1 (i.e. 180.0 degrees)</span>
 rotor.Set(coords_2, 1)

 <span class="keyword">delete</span> coords_1;
 <span class="keyword">delete</span> coords_2;
</pre></div> 
</div>
</div>
<a class="anchor" id="a74f31787078ef1b25dfe9b7da2d10c8f"></a><!-- doxytag: member="OpenBabel::OBRotor::Set" ref="a74f31787078ef1b25dfe9b7da2d10c8f" args="(double *coordinates, int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Set </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Rotate the <code>coordinates</code> to set the torsion angle of this rotor to the angle specified by the index <code>idx</code>. Make sure to call Precompute before calling this function. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The coordinates to rotate. </td></tr>
    <tr><td class="paramname">idx</td><td>The index of the torsion angle in the <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a21e54e7c2d59ecbf4dfd8787a9d204e0">GetTorsionValues()</a> list. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a619485e3dec9a4a3e3dced49344ede90"></a><!-- doxytag: member="OpenBabel::OBRotor::Precalc" ref="a619485e3dec9a4a3e3dced49344ede90" args="(std::vector&lt; double * &gt; &amp;conformers)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Precalc </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; double * &gt; &amp;&#160;</td>
          <td class="paramname"><em>conformers</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Precompute the inverse bond lengths, rotation matrices for all specified conformers and all possible torsion values. This method is used in combination with <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a1ade9c212155ac04f25ddf32731657ea">Set(double *coordinates, int conformer, int idx)</a>. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">conformers</td><td>The pointers to the conformer coordinates </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1ade9c212155ac04f25ddf32731657ea"></a><!-- doxytag: member="OpenBabel::OBRotor::Set" ref="a1ade9c212155ac04f25ddf32731657ea" args="(double *coordinates, int conformer, int idx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Set </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>conformer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Rotate the <code>coordinates</code> to set the torsion to the torsion value with the specified <code>index</code>. The coordinates should be the same as the conformer used for calling Precalc (i.e. conformers[conformer] == coordinates). Make sure to call Precalc before calling this method. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The conformer coordinates. </td></tr>
    <tr><td class="paramname">conformer</td><td>The conformer index in the conformer list given to <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a619485e3dec9a4a3e3dced49344ede90">Precalc()</a>. </td></tr>
    <tr><td class="paramname">idx</td><td>The torsion value index in the <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a21e54e7c2d59ecbf4dfd8787a9d204e0">GetTorsionValues()</a> list. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1b723190c734e234d87398f8eb245a8e"></a><!-- doxytag: member="OpenBabel::OBRotor::GetBond" ref="a1b723190c734e234d87398f8eb245a8e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBond.shtml">OBBond</a>* GetBond </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the <a class="el" href="classOpenBabel_1_1OBBond.shtml" title="Bond class.">OBBond</a> object associated with this <a class="el" href="classOpenBabel_1_1OBRotor.shtml" title="A single rotatable OBBond as part of rotamer searching.">OBRotor</a>. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a1d06cdda315ea9b96d14aeb10d352e61">OBRotorList::AssignTorVals()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, and <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>.</p>

</div>
</div>
<a class="anchor" id="a7b470b21b5807f0a9162bef72aebfef9"></a><!-- doxytag: member="OpenBabel::OBRotor::Size" ref="a7b470b21b5807f0a9162bef72aebfef9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the number of possible torsion angles for this <a class="el" href="classOpenBabel_1_1OBRotor.shtml" title="A single rotatable OBBond as part of rotamer searching.">OBRotor</a>. This is the length of the <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a21e54e7c2d59ecbf4dfd8787a9d204e0">GetTorsionValues()</a> list. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a85e63dfcf5b43e5ae867815f0398c87e">OBRotorList::Setup()</a>.</p>

</div>
</div>
<a class="anchor" id="ac8451eabbc164153f5030ae9723cf48b"></a><!-- doxytag: member="OpenBabel::OBRotor::GetIdx" ref="ac8451eabbc164153f5030ae9723cf48b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetIdx </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the index for this rotor (index in an <a class="el" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,.">OBRotorList</a>). </p>

</div>
</div>
<a class="anchor" id="a44db679688b64e9032ea9bf6def76315"></a><!-- doxytag: member="OpenBabel::OBRotor::GetDihedralAtoms" ref="a44db679688b64e9032ea9bf6def76315" args="(int ref[4])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void GetDihedralAtoms </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ref</em>[4]</td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the dihedral atom indexes. These indexes start from 1. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#ac08d1221790bd6f14418e3f77e6e725a">OBRotorList::SetRotAtoms()</a>, <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#af216aef19cf7a82fb1e57504b39f9329">OBRotorList::SetRotAtomsByFix()</a>, <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#afd34dcbc8bd8c0fba2433b39f1e1d61b">OBRotamerList::Setup()</a>, and <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a85e63dfcf5b43e5ae867815f0398c87e">OBRotorList::Setup()</a>.</p>

</div>
</div>
<a class="anchor" id="a75d6cacf7c1783272f74546387716902"></a><!-- doxytag: member="OpenBabel::OBRotor::GetDihedralAtoms" ref="a75d6cacf7c1783272f74546387716902" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt;&amp; GetDihedralAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the dihedral atom indexes. These indexes start from 1. </p>

</div>
</div>
<a class="anchor" id="a7092cc4675cd2c384be6c8d4cf6b75ae"></a><!-- doxytag: member="OpenBabel::OBRotor::GetRotAtoms" ref="a7092cc4675cd2c384be6c8d4cf6b75ae" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;int&gt;&amp; GetRotAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the atom indexes that will be displaced when this rotor changes torsion angle. These indexes start from 1. </p>

</div>
</div>
<a class="anchor" id="a21e54e7c2d59ecbf4dfd8787a9d204e0"></a><!-- doxytag: member="OpenBabel::OBRotor::GetTorsionValues" ref="a21e54e7c2d59ecbf4dfd8787a9d204e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;double&gt;&amp; GetTorsionValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the possible torsion angles for this <a class="el" href="classOpenBabel_1_1OBRotor.shtml" title="A single rotatable OBBond as part of rotamer searching.">OBRotor</a>. </p>

</div>
</div>
<a class="anchor" id="ade5378a288a25258f4e3cc28a954bc2e"></a><!-- doxytag: member="OpenBabel::OBRotor::GetFixedBonds" ref="ade5378a288a25258f4e3cc28a954bc2e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&amp; GetFixedBonds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get an <a class="el" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a> objects with bits set for all bonds that are fixed. Bonds are indexed from 0. </p>

</div>
</div>
<a class="anchor" id="abe6d75394c35f0cc1722eefd849cfbd4"></a><!-- doxytag: member="OpenBabel::OBRotor::CalcTorsion" ref="abe6d75394c35f0cc1722eefd849cfbd4" args="(double *coordinates)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double CalcTorsion </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Calculate the torsion for this <a class="el" href="classOpenBabel_1_1OBRotor.shtml" title="A single rotatable OBBond as part of rotamer searching.">OBRotor</a> using the specified coordinates. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The coordinates (e.g. <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad11003513310725bd54265ef5bf004c0">OBMol::GetCoordinates()</a>). </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The torsion angle in radians. </dd></dl>

</div>
</div>
<a class="anchor" id="a1f707fec840e4ec5dc6d3901e680fe5c"></a><!-- doxytag: member="OpenBabel::OBRotor::CalcBondLength" ref="a1f707fec840e4ec5dc6d3901e680fe5c" args="(double *coordinates)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double CalcBondLength </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coordinates</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Calculate the bond length for this <a class="el" href="classOpenBabel_1_1OBRotor.shtml" title="A single rotatable OBBond as part of rotamer searching.">OBRotor</a> using the specified coordinates. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td>The coordinates (e.g. <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad11003513310725bd54265ef5bf004c0">OBMol::GetCoordinates()</a>). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a06d5fdac08688bdff198a92c78bdeb69"></a><!-- doxytag: member="OpenBabel::OBRotor::BeginTorIncrement" ref="a06d5fdac08688bdff198a92c78bdeb69" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt;::iterator BeginTorIncrement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac5857c1e09978240624038b2c6352dcc"></a><!-- doxytag: member="OpenBabel::OBRotor::EndTorIncrement" ref="ac5857c1e09978240624038b2c6352dcc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt;::iterator EndTorIncrement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9e776c30d29ce2b4832a9ae3dace64ea"></a><!-- doxytag: member="OpenBabel::OBRotor::RemoveSymTorsionValues" ref="a9e776c30d29ce2b4832a9ae3dace64ea" args="(int)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RemoveSymTorsionValues </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fold</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a22bfb3d2f1e0787b0c1aabd0f0255226">OBRotorList::RemoveSymVals()</a>.</p>

</div>
</div>
<a class="anchor" id="a800aee2a9873012ac7e2a1bcedd5c6ba"></a><!-- doxytag: member="OpenBabel::OBRotor::SetDelta" ref="a800aee2a9873012ac7e2a1bcedd5c6ba" args="(double d)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetDelta </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000066">Deprecated:</a></b></dt><dd>Has no effect. </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a1d06cdda315ea9b96d14aeb10d352e61">OBRotorList::AssignTorVals()</a>.</p>

</div>
</div>
<a class="anchor" id="abaa1b786f36fb9bc98b5c46e74425056"></a><!-- doxytag: member="OpenBabel::OBRotor::GetDelta" ref="abaa1b786f36fb9bc98b5c46e74425056" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetDelta </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000067">Deprecated:</a></b></dt><dd>Has no effect. </dd></dl>

</div>
</div>
<a class="anchor" id="a937745b1178a21d8b223992d16d7d50a"></a><!-- doxytag: member="OpenBabel::OBRotor::GetFixedAtoms" ref="a937745b1178a21d8b223992d16d7d50a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&amp; GetFixedAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000068">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a530a0fd1a1e312d489b367ac73e56bb7"></a><!-- doxytag: member="OpenBabel::OBRotor::SetFixedAtoms" ref="a530a0fd1a1e312d489b367ac73e56bb7" args="(OBBitVec &amp;bv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetFixedAtoms </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td>
          <td class="paramname"><em>bv</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000069">Deprecated:</a></b></dt><dd>See SetFixedBonds </dd></dl>

</div>
</div>
<a class="anchor" id="ab690ce98b2f06352f9079eeae94da3c4"></a><!-- doxytag: member="OpenBabel::OBRotor::GetEvalAtoms" ref="ab690ce98b2f06352f9079eeae94da3c4" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a>&amp; GetEvalAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000070">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a33bdb71641015f05a632ffaf76e7672a"></a><!-- doxytag: member="OpenBabel::OBRotor::SetEvalAtoms" ref="a33bdb71641015f05a632ffaf76e7672a" args="(OBBitVec &amp;bv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetEvalAtoms </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBitVec.shtml">OBBitVec</a> &amp;&#160;</td>
          <td class="paramname"><em>bv</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000071">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#a76745541fde561757dce0bc58d60354e">OBRotorList::SetEvalAtoms()</a>.</p>

</div>
</div>
<a class="anchor" id="aa68d318d4f18049ca83fbbe8d1c5fa90"></a><!-- doxytag: member="OpenBabel::OBRotor::GetRotAtoms" ref="aa68d318d4f18049ca83fbbe8d1c5fa90" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* GetRotAtoms </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000072">Deprecated:</a></b></dt><dd></dd></dl>

</div>
</div>
<a class="anchor" id="a8feebfa38afe9888e7a50e421b8f5243"></a><!-- doxytag: member="OpenBabel::OBRotor::GetResolution" ref="a8feebfa38afe9888e7a50e421b8f5243" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;double&gt;&amp; GetResolution </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000073">Deprecated:</a></b></dt><dd>Bad name, see <a class="el" href="classOpenBabel_1_1OBRotor.shtml#a21e54e7c2d59ecbf4dfd8787a9d204e0">GetTorsionValues()</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a3511ce0631f467170ac6d5a9c6d5edde">OBForceField::RandomRotorSearchInitialize()</a>, <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#afd34dcbc8bd8c0fba2433b39f1e1d61b">OBRotamerList::Setup()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa64a24788b054b2b29e98e0552ba27f0">OBForceField::SystematicRotorSearchInitialize()</a>, and <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aabf7fa941ffdd2106f5f82f2afefa33f">OBForceField::WeightedRotorSearch()</a>.</p>

</div>
</div>
<a class="anchor" id="a4e82f80e2cd8faf3bce17c464ab1672c"></a><!-- doxytag: member="OpenBabel::OBRotor::SetNumCoords" ref="a4e82f80e2cd8faf3bce17c464ab1672c" args="(int nc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetNumCoords </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nc</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="deprecated"><dt><b><a class="el" href="deprecated.shtml#_deprecated000074">Deprecated:</a></b></dt><dd></dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotorList.shtml#aca77a345e848bcedd33f56b03844d014">OBRotorList::FindRotors()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="rotor_8h_source.shtml">rotor.h</a></li>
<li><a class="el" href="rotor_8cpp.shtml">rotor.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
