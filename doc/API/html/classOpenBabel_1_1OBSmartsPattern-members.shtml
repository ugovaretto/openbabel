<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">OBSmartsPattern Member List</div>  </div>
</div>
<div class="contents">
This is the complete list of members for <a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#af076ed3307ccc419f46ed857bb321a2f">_buffer</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a36fb3feb1132393275cf6164d3ccf2a9">_d</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a9aa91437a607c7d33353f38857add180">_growbond</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ab4d28e672d513c538ae9ff92e409bece">_mlist</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ad43f81cd2cc637e810b38c7686d9917d">_pat</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a433559ab344e4266e3d109bce29ee417">_str</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a747637046be33d7273262104aad8069da54991d225c58ce0af43461d4e9a82312">All</a> enum value</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a747637046be33d7273262104aad8069daca4bfb16b2e7dc497ce44753a75a3a36">AllUnique</a> enum value</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a548b220ea8c00d0297e81ebc7b31c6d7">BeginMList</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a6fcfd4a80bfd7dc324f815cd351bfbdf">Empty</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a7db4777fec63048db41fb890ac0a22ac">EndMList</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ac924c0155e56518eeca1d013126eb51a">GetAtomicNum</a>(int idx)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a6b86ace2bf7866c375372ff338fe0889">GetBond</a>(int &amp;src, int &amp;dst, int &amp;ord, int idx)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#af2676c751682747829be9ccc966bda59">GetCharge</a>(int idx)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a5633f1fa229ec0ff8fd3991e09d791c2">GetMapList</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a52d9a732c39944ff60d06aeacb96617c">GetSMARTS</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a1f769a4a64988a131b80fdda554eda1e">GetSMARTS</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ade3dbfa0989e51224e19b38932b05c1b">GetUMapList</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ac072cb8c2da0204b966173eecb83acfa">GetVectorBinding</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#abb64da8f114045c4b41dec13919bed9f">GetVectorBinding</a>(int idx) const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#afaa1fd8e8e32a6dfda6fb2d0ecd4e6f5">HasMatch</a>(OBMol &amp;mol) const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ab90ce667d180e55f26e7054ed1c6c8b1">Init</a>(const char *pattern)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a2e8f0a4d3222451efe27f83bbdb4ff10">Init</a>(const std::string &amp;pattern)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#afa8720abaf6972d6dac22a8cd1a67225">IsValid</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a24f5f7e6d2d4aeccecabdbbf89719bc5">LexPtr</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a2860b525fbfe4f29b416c37f8b13f561">MainPtr</a></td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#adda681cbeb3f22e43d35105ad4608b91">Match</a>(OBMol &amp;mol, bool single=false)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a11be59e45293ecb49945b0a3b6f6a84b">Match</a>(OBMol &amp;mol, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;mlist, MatchType mtype=All) const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a747637046be33d7273262104aad8069d">MatchType</a> enum name</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a0c317a10161689c407f29a6fcacdb852">NumAtoms</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a115132ab8bd21607d00d61bc1ba5cc16">NumBonds</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a299d4f22a95890bf259cb12b4664a0ea">NumMatches</a>() const </td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#aa930ba6620356e94683a1d5d4a4a25e3">OBSmartsPattern</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ada1c40a99620ab595049ba01934b7ca6">OBSmartsPattern</a>(const OBSmartsPattern &amp;cp)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a644ca84fee80513682392b90a2841ec6">operator=</a>(const OBSmartsPattern &amp;cp)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a231ab7f84bd99606983b4edee4523324">ParseAtomExpr</a>(int level)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a6f7fd25ffc9470ac5e86db033562b63c">ParseBondExpr</a>(int level)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ad911e5f6baeec860288054e600b0d8e7">ParseBondPrimitive</a>(void)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a37c206172f1bf481c71af0985189e3fb">ParseComplexAtomPrimitive</a>(void)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a47075ee8f542860bdbe57689bf785a4c">ParseSimpleAtomPrimitive</a>(void)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#aa944f62d90a19082249f5231412c6bb6">ParseSMARTSError</a>(Pattern *pat, BondExpr *expr)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a4b00a4b53fa768081ef929d86a26992b">ParseSMARTSPart</a>(Pattern *, int)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ae13bae2e9cf131660d957622c18280b8">ParseSMARTSPattern</a>(void)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#aca59a47f4b9cd97f80be10a10239448d">ParseSMARTSRecord</a>(char *ptr)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#acc0ac2e8af85a3076ef6fa56d353badc">ParseSMARTSString</a>(char *ptr)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#aafeef4d5a61d7d6b3c5b6120267359a0">RestrictedMatch</a>(OBMol &amp;mol, std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;pairs, bool single=false)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a1626ba77086e16c8ddcdee647937d905">RestrictedMatch</a>(OBMol &amp;mol, OBBitVec &amp;bv, bool single=false)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a747637046be33d7273262104aad8069da68168ddfb80052045df470955d649258">Single</a> enum value</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a41f4684ab61bddd674bda41fff7bac07">SMARTSError</a>(Pattern *pat)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#ac5ed3fa8cd8081a98063409742f5326e">SMARTSParser</a>(Pattern *pat, ParseState *stat, int prev, int part)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a6891bcec2059a979cff31cd7970a76a3">WriteMapList</a>(std::ostream &amp;)</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml#a45c009ff3b4002e84b8f6cc4adbc1a49">~OBSmartsPattern</a>()</td><td><a class="el" href="classOpenBabel_1_1OBSmartsPattern.shtml">OBSmartsPattern</a></td><td><code> [virtual]</code></td></tr>
</table></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
