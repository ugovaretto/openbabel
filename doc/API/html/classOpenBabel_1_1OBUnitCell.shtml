<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBUnitCell Class Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">OBUnitCell Class Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBUnitCell" --><!-- doxytag: inherits="OpenBabel::OBGenericData" -->
<p><code>#include &lt;<a class="el" href="generic_8h_source.shtml">openbabel/generic.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for OBUnitCell:</div>
<div class="dyncontent">
<div class="center"><img src="classOpenBabel_1_1OBUnitCell__inherit__graph.png" border="0" usemap="#OBUnitCell_inherit__map" alt="Inheritance graph"/></div>
<map name="OBUnitCell_inherit__map" id="OBUnitCell_inherit__map">
<area shape="rect" id="node2" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data." alt="" coords="5,5,133,35"/></map>
<center><span class="legend">[<a href="graph_legend.shtml">legend</a>]</span></center></div>

<p><a href="classOpenBabel_1_1OBUnitCell-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> { <br/>
&#160;&#160;<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4">Undefined</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7">Triclinic</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff">Monoclinic</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8">Orthorhombic</a>, 
<br/>
&#160;&#160;<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21">Tetragonal</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a67f25c654b88f3bdcb76dd7a853f1296">Rhombohedral</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b">Hexagonal</a>, 
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78a7105ea83819b1af6af85747e20b462b4">Cubic</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a96db3347da90d28cb56ed1272e75bc02">OBUnitCell</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acb80e2ac4dcdfbebcf43eddaf03494de">OBUnitCell</a> (const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a67bda850335747e7ac5d66629bda0a67">Clone</a> (<a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a29eaffe421897707aa12103bec99d3c9">~OBUnitCell</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">operator=</a> (const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">SetData</a> (const double a, const double b, const double c, const double alpha, const double beta, const double gamma)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa087a37fcd1c8b08d5d58277caefbc9a">SetData</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v1, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v2, const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v3)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a305d661a815053b610cb220fdfc3922c">SetData</a> (const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> m)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4c53fadff602620ff82a9a0c3ceda85a">SetOffset</a> (const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> v1)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac6f21a0fb4b93bb99f210559a1a6d7d7">SetSpaceGroup</a> (const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *sg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a76ccdf2ccfbefae104ff52932dcf11c1">SetSpaceGroup</a> (const std::string sg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae0d7e7ddcd3c5e3c48c6b24908d8404f">SetSpaceGroup</a> (const int sg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a6516b3a121b34a94e19201da06104afa">SetLatticeType</a> (const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> lt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">FillUnitCell</a> (<a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a3bacc0010fd34814039b26758da67dae">GetA</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac0f9682b3743c4ec91dd9fd16bb5bd82">GetB</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a229a18fdc499aafe149c55011f9fb2fb">GetC</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a6897ba879a5e0f5ac4ac5aefeb94601d">GetAlpha</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a8b788f95c3fa1f2cc9aedaa1b92b78a1">GetBeta</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a53b3c98860a330a6b95074945fc2895f">GetGamma</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">GetOffset</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a81676bc2dbd807644f7d5acd1b1a2dc9">GetSpaceGroup</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a22dbea225bd03af66ef0db074cff402e">GetSpaceGroupName</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ab96c337e7f353efea12999a888585137">GetLatticeType</a> (int spacegroup)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">GetLatticeType</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a021c578d8328027ac9ef282cadc98692">GetCellVectors</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">GetCellMatrix</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">GetOrthoMatrix</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">GetFractionalMatrix</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">FractionalToCartesian</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">CartesianToFractional</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2343254a6cfe37221a4f79bd7db8e1da">WrapCartesianCoordinate</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> cart)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a17fa7c484e6c603aad0a1dd1e53d21ed">WrapFractionalCoordinate</a> (<a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> frac)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a67c485a54f295cf80b85e3bf6c14c29f">GetSpaceGroupNumber</a> (std::string name=&quot;&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa4531707d182740586778f9fe8c4e49f">GetCellVolume</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#aae3d15983201a2a115701b2c538fef77">SetAttribute</a> (const std::string &amp;v)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a45613e34598a9584fb0120ef3fdab9e0">SetOrigin</a> (const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac72c28db8b5bb8911845ada56220a1e0">GetAttribute</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac20b99b31895c99422fb1244def6e213">GetDataType</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ac9527475c246fadbbab63a35376fd5fe">GetValue</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#ad080c58f230c474935ed3e27cb2ba906">GetOrigin</a> () const </td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a8d02fbc6c58e1abe5c8043f1253f6ab9">_mOrtho</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2497d0bb15408f8670722631fd8d90b8">_mOrient</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e04f720581a30502f781e620fb56af6">_offset</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2f7186c492d40a6b69092700ff8aee83">_spaceGroupName</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a9c98685360a568cd4473b1931e2765d8">_spaceGroup</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a474459fcdeb63c82700a345e59330645">_lattice</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Used for storing information about periodic boundary conditions with conversion to/from translation vectors and (a, b, c, alpha, beta, gamma) </p>
</div><hr/><h2>Member Enumeration Documentation</h2>
<a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78"></a><!-- doxytag: member="OpenBabel::OBUnitCell::LatticeType" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4"></a><!-- doxytag: member="Undefined" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78a18f893264a00711081b62de694f99db4" args="" -->Undefined</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7"></a><!-- doxytag: member="Triclinic" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78a0c393259f8f62caf4a7d210327e9ecb7" args="" -->Triclinic</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff"></a><!-- doxytag: member="Monoclinic" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78a8dcb30922b1f64f0d749914bf32442ff" args="" -->Monoclinic</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8"></a><!-- doxytag: member="Orthorhombic" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78ad6c2a31a4f6d88429ee1146228b5bbd8" args="" -->Orthorhombic</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21"></a><!-- doxytag: member="Tetragonal" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78a3d2110f7a11f77ed4f87cbc954aeec21" args="" -->Tetragonal</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78a67f25c654b88f3bdcb76dd7a853f1296"></a><!-- doxytag: member="Rhombohedral" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78a67f25c654b88f3bdcb76dd7a853f1296" args="" -->Rhombohedral</em>&nbsp;</td><td>
<p>also called trigonal </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b"></a><!-- doxytag: member="Hexagonal" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78af6a3ca263243147ee2b534d1c757544b" args="" -->Hexagonal</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ae2ee58ec34164a3ea47d51ab6ffc5c78a7105ea83819b1af6af85747e20b462b4"></a><!-- doxytag: member="Cubic" ref="ae2ee58ec34164a3ea47d51ab6ffc5c78a7105ea83819b1af6af85747e20b462b4" args="" -->Cubic</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a96db3347da90d28cb56ed1272e75bc02"></a><!-- doxytag: member="OpenBabel::OBUnitCell::OBUnitCell" ref="a96db3347da90d28cb56ed1272e75bc02" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>public constructor </p>

</div>
</div>
<a class="anchor" id="acb80e2ac4dcdfbebcf43eddaf03494de"></a><!-- doxytag: member="OpenBabel::OBUnitCell::OBUnitCell" ref="acb80e2ac4dcdfbebcf43eddaf03494de" args="(const OBUnitCell &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a29eaffe421897707aa12103bec99d3c9"></a><!-- doxytag: member="OpenBabel::OBUnitCell::~OBUnitCell" ref="a29eaffe421897707aa12103bec99d3c9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">~<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a67bda850335747e7ac5d66629bda0a67"></a><!-- doxytag: member="OpenBabel::OBUnitCell::Clone" ref="a67bda850335747e7ac5d66629bda0a67" args="(OBBase *) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classOpenBabel_1_1OBGenericData.shtml">OBGenericData</a>* Clone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBBase.shtml">OBBase</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reimplemented from <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a67bda850335747e7ac5d66629bda0a67">OBGenericData</a>.</p>

</div>
</div>
<a class="anchor" id="a4b44a40637c9fcb48e7b90b69db7538f"></a><!-- doxytag: member="OpenBabel::OBUnitCell::operator=" ref="a4b44a40637c9fcb48e7b90b69db7538f" args="(const OBUnitCell &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp; operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml">OBUnitCell</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="acca66a4b8a38d190c178b6ed85f9b8ed"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetData" ref="acca66a4b8a38d190c178b6ed85f9b8ed" args="(const double a, const double b, const double c, const double alpha, const double beta, const double gamma)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double&#160;</td>
          <td class="paramname"><em>gamma</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructs the cell matrix in lower triangular form from the values supplied. </p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#calculateOrthogonalisationMatrix">blue-obelisk:calculateOrthogonalisationMatrix</a></p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>The length a </td></tr>
    <tr><td class="paramname">b</td><td>The length b </td></tr>
    <tr><td class="paramname">c</td><td>The length c </td></tr>
    <tr><td class="paramname">alpha</td><td>The angle alpha </td></tr>
    <tr><td class="paramname">beta</td><td>The angle beta </td></tr>
    <tr><td class="paramname">gamma</td><td>The angle gamma </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a305d661a815053b610cb220fdfc3922c">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a class="anchor" id="aa087a37fcd1c8b08d5d58277caefbc9a"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetData" ref="aa087a37fcd1c8b08d5d58277caefbc9a" args="(const vector3 v1, const vector3 v2, const vector3 v3)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Constructs the cell matrix using the supplied row vectors. </p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#calculateOrthogonalisationMatrix">blue-obelisk:calculateOrthogonalisationMatrix</a></p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">v1</td><td>The x-vector </td></tr>
    <tr><td class="paramname">v2</td><td>The y-vector </td></tr>
    <tr><td class="paramname">v3</td><td>The z-vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a021c578d8328027ac9ef282cadc98692" title="Implements blue-obelisk:convertNotionalIntoCartesianCoordinates">OBUnitCell::GetCellVectors</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a305d661a815053b610cb220fdfc3922c"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetData" ref="a305d661a815053b610cb220fdfc3922c" args="(const matrix3x3 m)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a>&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sets the unit cell matrix. </p>
<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#calculateOrthogonalisationMatrix">blue-obelisk:calculateOrthogonalisationMatrix</a></p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>The unit cell matrix (row vectors) </td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a4c53fadff602620ff82a9a0c3ceda85a"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetOffset" ref="a4c53fadff602620ff82a9a0c3ceda85a" args="(const vector3 v1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOffset </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>v1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the offset to the origin to <code>v1</code>. </p>

</div>
</div>
<a class="anchor" id="ac6f21a0fb4b93bb99f210559a1a6d7d7"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetSpaceGroup" ref="ac6f21a0fb4b93bb99f210559a1a6d7d7" args="(const SpaceGroup *sg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a> *&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the space group for this unit cell. Does not create an <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml" title="Used to hold the point-group and/or space-group symmetry.">OBSymmetryData</a> entry </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a class="anchor" id="a76ccdf2ccfbefae104ff52932dcf11c1"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetSpaceGroup" ref="a76ccdf2ccfbefae104ff52932dcf11c1" args="(const std::string sg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const std::string&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the space group symbol for this unit cell. Does not create an <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml" title="Used to hold the point-group and/or space-group symmetry.">OBSymmetryData</a> entry or attempt to convert between different symbol notations </p>

</div>
</div>
<a class="anchor" id="ae0d7e7ddcd3c5e3c48c6b24908d8404f"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetSpaceGroup" ref="ae0d7e7ddcd3c5e3c48c6b24908d8404f" args="(const int sg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetSpaceGroup </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>sg</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Set the space group for this unit cell. Each spacegroup-symbol has a numeric equivalent which is easier to use to convert between notations. Does not create an <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml" title="Used to hold the point-group and/or space-group symmetry.">OBSymmetryData</a> entry or attempt to convert between different symbol notations </p>

</div>
</div>
<a class="anchor" id="a6516b3a121b34a94e19201da06104afa"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetLatticeType" ref="a6516b3a121b34a94e19201da06104afa" args="(const LatticeType lt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLatticeType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a>&#160;</td>
          <td class="paramname"><em>lt</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the Bravais lattice type for this unit cell. </p>

</div>
</div>
<a class="anchor" id="af5cee9c530db13a5ec558a3783893315"></a><!-- doxytag: member="OpenBabel::OBUnitCell::FillUnitCell" ref="af5cee9c530db13a5ec558a3783893315" args="(OBMol *)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FillUnitCell </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1OBMol.shtml">OBMol</a> *&#160;</td>
          <td class="paramname"><em>mol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Duplicate symmetry-unique atoms to fill out the unit cell of the molecule, based on the known space group </p>

</div>
</div>
<a class="anchor" id="a3bacc0010fd34814039b26758da67dae"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetA" ref="a3bacc0010fd34814039b26758da67dae" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetA </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>vector a </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a class="anchor" id="ac0f9682b3743c4ec91dd9fd16bb5bd82"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetB" ref="ac0f9682b3743c4ec91dd9fd16bb5bd82" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>vector b </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a class="anchor" id="a229a18fdc499aafe149c55011f9fb2fb"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetC" ref="a229a18fdc499aafe149c55011f9fb2fb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>vector c </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a class="anchor" id="a6897ba879a5e0f5ac4ac5aefeb94601d"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetAlpha" ref="a6897ba879a5e0f5ac4ac5aefeb94601d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetAlpha </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>angle alpha </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a class="anchor" id="a8b788f95c3fa1f2cc9aedaa1b92b78a1"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetBeta" ref="a8b788f95c3fa1f2cc9aedaa1b92b78a1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetBeta </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>angle beta </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a class="anchor" id="a53b3c98860a330a6b95074945fc2895f"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetGamma" ref="a53b3c98860a330a6b95074945fc2895f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetGamma </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>angle gamma </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>.</p>

</div>
</div>
<a class="anchor" id="a545d26772ece9dda5ed6bd4a6f71f45b"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetOffset" ref="a545d26772ece9dda5ed6bd4a6f71f45b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> GetOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>any offset in the origin of the periodic boundaries </dd></dl>

</div>
</div>
<a class="anchor" id="a81676bc2dbd807644f7d5acd1b1a2dc9"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetSpaceGroup" ref="a81676bc2dbd807644f7d5acd1b1a2dc9" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* GetSpaceGroup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the text representation of the space group for this unit cell </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>.</p>

</div>
</div>
<a class="anchor" id="a22dbea225bd03af66ef0db074cff402e"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetSpaceGroupName" ref="a22dbea225bd03af66ef0db074cff402e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string GetSpaceGroupName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the text representation of the space group for this unit cell </dd></dl>

</div>
</div>
<a class="anchor" id="ab96c337e7f353efea12999a888585137"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetLatticeType" ref="ab96c337e7f353efea12999a888585137" args="(int spacegroup)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">OBUnitCell::LatticeType</a> GetLatticeType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>spacegroup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>lattice type (based on the <code>spacegroup</code>) </dd></dl>

</div>
</div>
<a class="anchor" id="a95568e46d8e27b457e2ee1bcaba5daa5"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetLatticeType" ref="a95568e46d8e27b457e2ee1bcaba5daa5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">OBUnitCell::LatticeType</a> GetLatticeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>lattice type (based on angles and distances) </dd></dl>

</div>
</div>
<a class="anchor" id="a021c578d8328027ac9ef282cadc98692"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetCellVectors" ref="a021c578d8328027ac9ef282cadc98692" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">vector&lt; <a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> &gt; GetCellVectors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Implements <a href="http://qsar.sourceforge.net/dicts/blue-obelisk/index.xhtml#convertNotionalIntoCartesianCoordinates">blue-obelisk:convertNotionalIntoCartesianCoordinates</a> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>v1, v2, v3 cell vectors </dd></dl>

</div>
</div>
<a class="anchor" id="ac2cb274fb0a8e40a1df98af82b2da063"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetCellMatrix" ref="ac2cb274fb0a8e40a1df98af82b2da063" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetCellMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Access to the cell matrix as row vectors, useful for writing input files. Equivalent to the transpose of <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix()</a> * <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">GetOrthoMatrix()</a> </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The cell matrix with row vectors. </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a021c578d8328027ac9ef282cadc98692">OBUnitCell::GetCellVectors()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#aa4531707d182740586778f9fe8c4e49f">OBUnitCell::GetCellVolume()</a>.</p>

</div>
</div>
<a class="anchor" id="a5d5f9712690d49282a620ae9b8b2b48a"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetOrthoMatrix" ref="a5d5f9712690d49282a620ae9b8b2b48a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrthoMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The orthogonalization matrix, used for converting from fractional to Cartesian coords. </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a11d813575f888440c6a9c9ebf53ea37e"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetOrientationMatrix" ref="a11d813575f888440c6a9c9ebf53ea37e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetOrientationMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Used to convert fractional and cartesian coordinates if the cell is not oriented in standard form (a parallel to x axis, b in xy plane) </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The orientation matrix </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a2ac2c43b65936f802681d33aff49bc25"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetFractionalMatrix" ref="a2ac2c43b65936f802681d33aff49bc25" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> GetFractionalMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The fractionalization matrix, used for converting from Cartesian to fractional coords. </dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian</a> </dd>
<dd>
<a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a429755f02991b509eb78b70466e2fb5e"></a><!-- doxytag: member="OpenBabel::OBUnitCell::FractionalToCartesian" ref="a429755f02991b509eb78b70466e2fb5e" args="(vector3 frac)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> FractionalToCartesian </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>frac</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convenience function to convert fractional coordinates to cartesian coordinates. Returns</p>
<p><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix()</a> * <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">GetOrthoMatrix()</a> * frac + <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">GetOffset()</a> </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">frac</td><td>Vector of fractional coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Cartesian coordinates </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2343254a6cfe37221a4f79bd7db8e1da">OBUnitCell::WrapCartesianCoordinate()</a>.</p>

</div>
</div>
<a class="anchor" id="ae04a9f37ac44205cdbcbcd29ce2e8471"></a><!-- doxytag: member="OpenBabel::OBUnitCell::CartesianToFractional" ref="ae04a9f37ac44205cdbcbcd29ce2e8471" args="(vector3 cart)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> CartesianToFractional </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>cart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convenience function to convert cartesian coordinates to fractional coordinates. Returns</p>
<p><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">GetFractionalMatrix()</a> * <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">GetOrientationMatrix()</a>.inverse() * (cart - <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">GetOffset()</a>) </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cart</td><td>Vector of cartesian coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Fractional coordinates </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#af5cee9c530db13a5ec558a3783893315">OBUnitCell::FillUnitCell()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2343254a6cfe37221a4f79bd7db8e1da">OBUnitCell::WrapCartesianCoordinate()</a>.</p>

</div>
</div>
<a class="anchor" id="a2343254a6cfe37221a4f79bd7db8e1da"></a><!-- doxytag: member="OpenBabel::OBUnitCell::WrapCartesianCoordinate" ref="a2343254a6cfe37221a4f79bd7db8e1da" args="(vector3 cart)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapCartesianCoordinate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>cart</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Wraps cartesian coordinate to fall within the unit cell. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cart</td><td>Vector of cartesian coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Cartesian coordinates within cell boundaries. </dd></dl>

</div>
</div>
<a class="anchor" id="a17fa7c484e6c603aad0a1dd1e53d21ed"></a><!-- doxytag: member="OpenBabel::OBUnitCell::WrapFractionalCoordinate" ref="a17fa7c484e6c603aad0a1dd1e53d21ed" args="(vector3 frac)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> WrapFractionalCoordinate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a>&#160;</td>
          <td class="paramname"><em>frac</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Wraps fractional coordinate to fall within the unit cell. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">frac</td><td>Vector of fractional coordinates </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Fractional coordinates within cell boundaries (between 0 and 1). </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2343254a6cfe37221a4f79bd7db8e1da">OBUnitCell::WrapCartesianCoordinate()</a>.</p>

</div>
</div>
<a class="anchor" id="a67c485a54f295cf80b85e3bf6c14c29f"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetSpaceGroupNumber" ref="a67c485a54f295cf80b85e3bf6c14c29f" args="(std::string name=&quot;&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int GetSpaceGroupNumber </td>
          <td>(</td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>name</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The numeric value of the given spacegroup </dd></dl>

</div>
</div>
<a class="anchor" id="aa4531707d182740586778f9fe8c4e49f"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetCellVolume" ref="aa4531707d182740586778f9fe8c4e49f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double GetCellVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The cell volume (in Angstroms^3) </dd></dl>

</div>
</div>
<a class="anchor" id="aae3d15983201a2a115701b2c538fef77"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetAttribute" ref="aae3d15983201a2a115701b2c538fef77" args="(const std::string &amp;v)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetAttribute </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the attribute (key), which can be used to retrieve this data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#aa41fd7cce6a9cf2e56ca603de7fbc507">OBForceField::GetAtomTypes()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBForceField.shtml#a06280807851159ac893d3391400861d3">OBForceField::GetPartialCharges()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a class="anchor" id="a45613e34598a9584fb0120ef3fdab9e0"></a><!-- doxytag: member="OpenBabel::OBUnitCell::SetOrigin" ref="a45613e34598a9584fb0120ef3fdab9e0" args="(const DataOrigin s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetOrigin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td><code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Set the origin of this data, which can be used to filter the data. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBGastChrg.shtml#a1c145997cdde372b0d870cabc0aede0a">OBGastChrg::AssignPartialCharges()</a>, <a class="el" href="namespaceOpenBabel.shtml#ac8f591b34d70fd0063b836ddf6d8cdbc">OpenBabel::CalcSignedVolume()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a6b78f4cdf91366de39994ade8edc9775">OBMol::DoTransformations()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#abee51ea4be988357bb17c4e5fd3d7e12">OBMol::FindAngles()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a39a5ee36b2320d9191dac24acf90b03e">OBMol::FindLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#ad4e3eab0d027bd8e503d02e7261ca477">OBMol::FindSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a1ce9b09fb625faffaae648d7beae9598">OBMol::FindTorsions()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a7adc12bff502264eaebf537a5e28a43c">OBMol::GetFormula()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a762b79fd52bbaf0f4444f0308654dab1">OBMol::GetLSSR()</a>, <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0f6bce457ef6f963b8e4ba7c4be23775">OBMol::GetSSSR()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a3a6e9ddee5b20a8911bc9f6e407d1abd">OBDescriptor::PredictAndSave()</a>, and <a class="el" href="classOpenBabel_1_1OBMol.shtml#a0a4b32a3135f26595bdd260539256c67">OBMol::SetFormula()</a>.</p>

</div>
</div>
<a class="anchor" id="ac72c28db8b5bb8911845ada56220a1e0"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetAttribute" ref="ac72c28db8b5bb8911845ada56220a1e0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetAttribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>The attribute (key), which can be used to retrieve this data </dd></dl>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBMoleculeFormat.shtml#ae40f23c84fd00ee442effa0c543a43c3">OBMoleculeFormat::MakeCombinedMolecule()</a>.</p>

</div>
</div>
<a class="anchor" id="ac20b99b31895c99422fb1244def6e213"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetDataType" ref="ac20b99b31895c99422fb1244def6e213" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int GetDataType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl class="return"><dt><b>Returns:</b></dt><dd>the data type for this object as defined in <a class="el" href="namespaceOpenBabel_1_1OBGenericDataType.shtml" title="Classification of data stored via OBGenericData class and subclasses.">OBGenericDataType</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ac9527475c246fadbbab63a35376fd5fe"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetValue" ref="ac9527475c246fadbbab63a35376fd5fe" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string&amp; GetValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Base class returns a default value (the attribute type) but should never be called. </p>

<p>Reimplemented in <a class="el" href="classOpenBabel_1_1OBPairData.shtml#ac9527475c246fadbbab63a35376fd5fe">OBPairData</a>, and <a class="el" href="classOpenBabel_1_1OBCommentData.shtml#ac9527475c246fadbbab63a35376fd5fe">OBCommentData</a>.</p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBDepict.shtml#a9ef29e99771a1932b2c28b34533a3e96">OBDepict::DrawMolecule()</a>, <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a1d0907c6fab9cdb01ce11858eb5f0860">OBDescriptor::FilterCompare()</a>, and <a class="el" href="classOpenBabel_1_1OBDescriptor.shtml#a789fe3d5cae737f1caa28590fe29f460">OBDescriptor::GetValues()</a>.</p>

</div>
</div>
<a class="anchor" id="ad080c58f230c474935ed3e27cb2ba906"></a><!-- doxytag: member="OpenBabel::OBUnitCell::GetOrigin" ref="ad080c58f230c474935ed3e27cb2ba906" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> GetOrigin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [inline, virtual, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a8d02fbc6c58e1abe5c8043f1253f6ab9"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_mOrtho" ref="a8d02fbc6c58e1abe5c8043f1253f6ab9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a8d02fbc6c58e1abe5c8043f1253f6ab9">_mOrtho</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a3bacc0010fd34814039b26758da67dae">OBUnitCell::GetA()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a6897ba879a5e0f5ac4ac5aefeb94601d">OBUnitCell::GetAlpha()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac0f9682b3743c4ec91dd9fd16bb5bd82">OBUnitCell::GetB()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a8b788f95c3fa1f2cc9aedaa1b92b78a1">OBUnitCell::GetBeta()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a229a18fdc499aafe149c55011f9fb2fb">OBUnitCell::GetC()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2ac2c43b65936f802681d33aff49bc25">OBUnitCell::GetFractionalMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a53b3c98860a330a6b95074945fc2895f">OBUnitCell::GetGamma()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a5d5f9712690d49282a620ae9b8b2b48a">OBUnitCell::GetOrthoMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a class="anchor" id="a2497d0bb15408f8670722631fd8d90b8"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_mOrient" ref="a2497d0bb15408f8670722631fd8d90b8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a> <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2497d0bb15408f8670722631fd8d90b8">_mOrient</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ac2cb274fb0a8e40a1df98af82b2da063">OBUnitCell::GetCellMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a11d813575f888440c6a9c9ebf53ea37e">OBUnitCell::GetOrientationMatrix()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a class="anchor" id="a4e04f720581a30502f781e620fb56af6"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_offset" ref="a4e04f720581a30502f781e620fb56af6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a> <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4e04f720581a30502f781e620fb56af6">_offset</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae04a9f37ac44205cdbcbcd29ce2e8471">OBUnitCell::CartesianToFractional()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a429755f02991b509eb78b70466e2fb5e">OBUnitCell::FractionalToCartesian()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a545d26772ece9dda5ed6bd4a6f71f45b">OBUnitCell::GetOffset()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4c53fadff602620ff82a9a0c3ceda85a">OBUnitCell::SetOffset()</a>.</p>

</div>
</div>
<a class="anchor" id="a2f7186c492d40a6b69092700ff8aee83"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_spaceGroupName" ref="a2f7186c492d40a6b69092700ff8aee83" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a2f7186c492d40a6b69092700ff8aee83">_spaceGroupName</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a67c485a54f295cf80b85e3bf6c14c29f">OBUnitCell::GetSpaceGroupNumber()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a class="anchor" id="a9c98685360a568cd4473b1931e2765d8"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_spaceGroup" ref="a9c98685360a568cd4473b1931e2765d8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classOpenBabel_1_1SpaceGroup.shtml">SpaceGroup</a>* <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a9c98685360a568cd4473b1931e2765d8">_spaceGroup</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ab96c337e7f353efea12999a888585137">OBUnitCell::GetLatticeType()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a67c485a54f295cf80b85e3bf6c14c29f">OBUnitCell::GetSpaceGroupNumber()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a class="anchor" id="a474459fcdeb63c82700a345e59330645"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_lattice" ref="a474459fcdeb63c82700a345e59330645" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#ae2ee58ec34164a3ea47d51ab6ffc5c78">LatticeType</a> <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a474459fcdeb63c82700a345e59330645">_lattice</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a95568e46d8e27b457e2ee1bcaba5daa5">OBUnitCell::GetLatticeType()</a>, <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#a4b44a40637c9fcb48e7b90b69db7538f">OBUnitCell::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBUnitCell.shtml#acca66a4b8a38d190c178b6ed85f9b8ed">OBUnitCell::SetData()</a>.</p>

</div>
</div>
<a class="anchor" id="adceb77134f15418a66cf1124dcef1b51"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_attr" ref="adceb77134f15418a66cf1124dcef1b51" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#adceb77134f15418a66cf1124dcef1b51">_attr</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>attribute tag (e.g., "UnitCell", "Comment" or "Author") </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a class="anchor" id="a31291823d487a4a47f24aae5870505ef"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_type" ref="a31291823d487a4a47f24aae5870505ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a31291823d487a4a47f24aae5870505ef">_type</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>attribute type -- declared for each subclass </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBRotamerList.shtml#a5361d45ced4133323de80d61ae5ecf05">OBRotamerList::Clone()</a>, and <a class="el" href="classOpenBabel_1_1OBNasaThermoData.shtml#a8391a502a623c62101d104739f96ed01">OBNasaThermoData::OBNasaThermoData()</a>.</p>

</div>
</div>
<a class="anchor" id="a239606b62a534e4df7626ea0cfdfb856"></a><!-- doxytag: member="OpenBabel::OBUnitCell::_source" ref="a239606b62a534e4df7626ea0cfdfb856" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceOpenBabel.shtml#a87d90c5296e904e126b8520e1daacc14">DataOrigin</a> <a class="el" href="classOpenBabel_1_1OBGenericData.shtml#a239606b62a534e4df7626ea0cfdfb856">_source</a><code> [protected, inherited]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>source of data for accounting </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBConformerData.shtml#a7c2db1828edcca7ff07c8591744ec3a4">OBConformerData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBSymmetryData.shtml#ae1e415e9a406f4965be7352a3c66fa3a">OBSymmetryData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBTorsionData.shtml#ab526e7eddb908b711e19aa355d133241">OBTorsionData::operator=()</a>, <a class="el" href="classOpenBabel_1_1OBAngleData.shtml#af0af03b552fac05db59787be08a443eb">OBAngleData::operator=()</a>, and <a class="el" href="classOpenBabel_1_1OBChiralData.shtml#a2d8a571296610389b9427aef139b1d8d">OBChiralData::operator=()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="generic_8h_source.shtml">generic.h</a></li>
<li><a class="el" href="generic_8cpp.shtml">generic.cpp</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:10 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
