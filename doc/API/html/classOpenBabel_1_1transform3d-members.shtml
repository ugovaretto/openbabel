<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Member List</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">transform3d Member List</div>  </div>
</div>
<div class="contents">
This is the complete list of members for <a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a72b1c0a136ecdb28fdfa1ec382ccdc41">AsArray</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a42a186aba6d262b1ce632ee90fb25e60">CanBeNormalized</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ab7ad19aad80b487369bcafe789fd8c04">createOrthoVector</a>(vector3 &amp;v) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a9bb44f139e6e940c62099ee80a0c378f">DescribeAsString</a>() const </td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#acf566ebca6ac366d1a218dce31a67ab3">DescribeAsValues</a>() const </td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a390024ffecb7973f5de3194dc2f606f5">determinant</a>() const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#af0bb15d3c00f3ab71314513fa41fa548">distSq</a>(const vector3 &amp;vv) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aeae6ec0ae0d036137c03275be0010878">FillOrth</a>(double alpha, double beta, double gamma, double a, double b, double c)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a5f09543ae4cdaf031d0adaa0480f2b8c">findEigenvectorsIfSymmetric</a>(vector3 &amp;eigenvals) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a0aba6c9a55fa03689378594bb58f1ff1">OpenBabel::Get</a>(int row, int column) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a9345053a16ce83e130dc098fddf9af7a">OpenBabel::vector3::Get</a>(double *c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a3f648014bbd17f8090159d2d93cbe30c">GetArray</a>(double *m)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a3f43f67cedadf2e178bd338b8ec26231">GetColumn</a>(unsigned int col) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a8e10214c207950dbaec09438c4992a46">GetRow</a>(unsigned int row) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a140fe887c529e7b90eae3de197e8ceb6">GetX</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a7e0e3acd8a6e4016522b9cdbc8f5aeb5">GetY</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a885f0eb530803b77acf8ac2055c59ee8">GetZ</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a8ef05a892601489ef84e46c0a00bcc41">inverse</a>(void) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a4eb9ee503a7d695dfac88a993256add0">IsApprox</a>(const vector3 &amp;other, const double &amp;precision) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#af6fefdc3ee1db949d064e63eabb5fdaa">isDiagonal</a>(void) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ae8249851867ad7b2795614ee2b4f0078">isOrthogonal</a>(void) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a17ea6953708a00e57d99aaf52495f62a">isSymmetric</a>(void) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aa95d7e7bec24e89ad8ff73a47607b1f8">isUnitMatrix</a>(void) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aeb205a916fa467164e6bdebc62d22e7a">jacobi</a>(unsigned int n, double *a, double *d, double *v)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private, static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ad207cb443e371f73f07e874c504f60c1">length</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a560382b2b84516f70ca2d406aaee8baa">length_2</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a02fbfa24687cc574a29a8d1c0ff0a2db">matrix3x3</a>(void)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ac0461afe3f76b83a10fe99fac330f702">matrix3x3</a>(double s)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a4736c0c51dc08725c39e02a84c2390ec">matrix3x3</a>(vector3 row1, vector3 row2, vector3 row3)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a0a0be9b2cd186a15d56efdaaefa9a994">matrix3x3</a>(double d[3][3])</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a8d0a82a515f8373ee3f174a22f775397">normalize</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#af279e0f0ff720ee54d6733674dfda50a">Normalize</a>()</td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a54bc009d3ca567251114c2a86c7753ff">operator!=</a>(const vector3 &amp;other) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aa6e296b71371e9b9b334dca8c7f3314a">operator()</a>(int row, int column) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a59c4092616c1d0ffc2c3e022350ee02d">operator()</a>(int row, int column)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#ad53972b9afccbbef0c751aa18c7638a6">operator*</a>(const vector3 &amp;) const </td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a927d755c68f6bfa3d8992b03b2eac87a">operator*</a>(const transform3d &amp;) const </td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#afa46ab021c49dc30bac7116157793dff">OpenBabel::matrix3x3::operator*</a>(const matrix3x3 &amp;, const vector3 &amp;)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a35fd56b260acc82508c9bf7e9a710125">OpenBabel::matrix3x3::operator*</a>(const matrix3x3 &amp;, const matrix3x3 &amp;)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a4623ee2f3c5b2b7cc4c2efb081273f62">OpenBabel::operator*=</a>(const double &amp;c)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a849fa346bb458a37710cdb8a4f5c085f">OpenBabel::vector3::operator*=</a>(const double &amp;c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ab879d8d94111c53fd9b9013fb9345734">OpenBabel::vector3::operator*=</a>(const matrix3x3 &amp;)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ae0541be714a6305dd3295655eea746d9">operator+=</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a506884b50b92a33e92029b43f9b75bc9">operator+=</a>(const double *f)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ac4b4980ccea5aa5184928ce40cf1acee">operator-=</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a322635480250ba0c08aa47a125eda3dd">operator-=</a>(const double *f)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a56c27ea39208380495f812df6b865289">OpenBabel::operator/=</a>(const double &amp;c)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ab5a7b18eeff279e5d850a9075d09f8a5">OpenBabel::vector3::operator/=</a>(const double &amp;c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a0f3e65b4976b2ac7ce2a02b778e5cc71">operator&lt;&lt;</a>(std::ostream &amp;, const matrix3x3 &amp;)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ad2eee719d3706b71968f894c1179f4bb">operator=</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a49ed80cbaa997a8f5b5e25ac3610db6f">operator==</a>(const vector3 &amp;) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a4803abb2beda3b528c9db7046fa96141">operator[]</a>(unsigned int i) const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a031b9641f48f7639949cad29a6a99109">PlaneReflection</a>(const vector3 &amp;norm)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aff25b8b63c0aec5f2c83d0cb70ae55cb">randomRotation</a>(OBRandom &amp;rnd)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#af2f4c0b08630beda575c1c8697b8fece">randomUnitVector</a>(OBRandom *oeRand=NULL)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ae2b83cb7b73473405cd57594c88f541c">RotAboutAxisByAngle</a>(const vector3 &amp;axis, const double angle)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#aae7e56afba0365c34add2d93288995ca">OpenBabel::Set</a>(int row, int column, double v)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a685349dbc9e2d99a19616763811cbfba">OpenBabel::vector3::Set</a>(const double inX, const double inY, const double inZ)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#abfcb3c965a12bd0385f1fe1db3f7d3ac">OpenBabel::vector3::Set</a>(const double *c)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a39efd7a5999c653b840ac4445b9f86c2">SetColumn</a>(int column, const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#ab20b033e3e502ab19ae92f55a9ef2fe2">SetRow</a>(int row, const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a99b052f9d6eaea593f20a032679bcc55">SetupRotMat</a>(double x, double y, double z)</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ab7cbeb9d9ec3d0d2714733d8bb4596eb">SetX</a>(const double inX)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a385f2320a91b6c182ecb45d16ffc6332">SetY</a>(const double inY)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ad1ac74f918d5ac48cb47426ca9ba2c09">SetZ</a>(const double inZ)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a0a78f8c2d77f9ca68c328cff6d46c610">transform3d</a>(void)</td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a5d5c44a104265517860c9d695f03c3d7">transform3d</a>(const matrix3x3 &amp;m, const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a1ec90e69b3b2684b37773c15907b1fe0">transform3d</a>(double s)</td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a272c7ae3e0b8547a31f5c68ec2a43710">transform3d</a>(vector3 row1, vector3 row2, vector3 row3, vector3 translation)</td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1transform3d.shtml#a4748a71890565072e61ed711ad218a38">transform3d</a>(double d[3][3], double t[3])</td><td><a class="el" href="classOpenBabel_1_1transform3d.shtml">transform3d</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a4c534cebd13efb9ac42d39722d85602c">transpose</a>(void) const </td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a28d983d20c9b3b395da7854fafae20f2">vector3</a>(const double inX=0.0, const double inY=0.0, const double inZ=0.0)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a8b2f7f06d9fa0554248321887d4fcfc4">vector3</a>(double inV[3])</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#abe84fe9749e73b1027baddb505fa189a">vector3</a>(const vector3 &amp;v)</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#abef0821fe31ac502f2d11718aef50ae3">x</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a3b195b867437acf8de45f48c83e81932">x</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a60e843e6f8ec7cf8709da2954bd2c202">y</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ad927d9808ded1fc49c05ae9e1a3ed2a6">y</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#ac6512d9d5bc60ad02143f34ba62e010a">z</a>() const </td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a2134ad02d68f29e9c7cd87e4cd4c75b8">z</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml#a6d3758cd834f7dd0f5c0816231349cb9">~matrix3x3</a>()</td><td><a class="el" href="classOpenBabel_1_1matrix3x3.shtml">matrix3x3</a></td><td><code> [inline, private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classOpenBabel_1_1vector3.shtml#a059160a3da371ed0cfd1563a1e8cd2fb">~vector3</a>()</td><td><a class="el" href="classOpenBabel_1_1vector3.shtml">vector3</a></td><td><code> [inline, private]</code></td></tr>
</table></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
