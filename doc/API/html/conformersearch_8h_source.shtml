<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>conformersearch.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">conformersearch.h</div>  </div>
</div>
<div class="contents">
<a href="conformersearch_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">conformersearch.h - Conformer searching using genetic algorithm.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2010 Tim Vandermeersch</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"></span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_CONFORMERSEARCH_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_CONFORMERSEARCH_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel)...">openbabel/mol.h</a>&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="rotor_8h.shtml" title="Rotate torsional according to rotor rules.">openbabel/rotor.h</a>&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="rotamer_8h.shtml" title="Handle rotamer list data.">openbabel/rotamer.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="keyword">namespace </span>OpenBabel {
<a name="l00027"></a>00027 
<a name="l00028"></a><a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">00028</a>   <span class="keyword">typedef</span> std::vector&lt;int&gt; <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a>;
<a name="l00029"></a><a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">00029</a>   <span class="keyword">typedef</span> std::vector&lt;RotorKey&gt; <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a>;
<a name="l00030"></a>00030 
<a name="l00033"></a>00033 
<a name="l00035"></a>00035   <span class="comment">//</span>
<a name="l00036"></a>00036   <span class="comment">//  OBConformerFilter(s)</span>
<a name="l00037"></a>00037   <span class="comment">//</span>
<a name="l00039"></a>00039 <span class="comment"></span>
<a name="l00052"></a><a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml">00052</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml" title="Interface used by OBConformerSearch for filtering conformers.">OBConformerFilter</a>
<a name="l00053"></a>00053   {
<a name="l00054"></a>00054     <span class="keyword">public</span>:
<a name="l00061"></a>00061       <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a> &amp;key, <span class="keywordtype">double</span> *coords) = 0;
<a name="l00062"></a>00062   };
<a name="l00063"></a>00063 
<a name="l00076"></a><a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml">00076</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml" title="Class for combining OBConformerFilter objects.">OBConformerFilters</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml" title="Interface used by OBConformerSearch for filtering conformers.">OBConformerFilter</a>
<a name="l00077"></a>00077   {
<a name="l00078"></a>00078     <span class="keyword">public</span>:
<a name="l00082"></a><a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#a3ce03124b1c399ec47c9f73311cc7808">00082</a>       <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml" title="Class for combining OBConformerFilter objects.">OBConformerFilters</a>(<span class="keyword">const</span> std::vector&lt;OBConformerFilter*&gt; &amp;filters) : m_filters(filters)
<a name="l00083"></a>00083       {
<a name="l00084"></a>00084       }
<a name="l00089"></a><a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#aa37ca1a89ffb71694922e4b90b012ab2">00089</a>       <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a> &amp;key, <span class="keywordtype">double</span> *coords)
<a name="l00090"></a>00090       {
<a name="l00091"></a>00091         <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; m_filters.size(); ++i)
<a name="l00092"></a>00092           <span class="keywordflow">if</span> (!m_filters[i]-&gt;IsGood(mol, key, coords))
<a name="l00093"></a>00093             <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00094"></a>00094         <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00095"></a>00095       }
<a name="l00096"></a>00096     <span class="keyword">protected</span>:
<a name="l00097"></a><a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#a18cff861d594e096ca411d3cefafe114">00097</a>       std::vector&lt;OBConformerFilter*&gt; <a class="code" href="classOpenBabel_1_1OBConformerFilters.shtml#a18cff861d594e096ca411d3cefafe114">m_filters</a>;
<a name="l00098"></a>00098   };
<a name="l00099"></a>00099 
<a name="l00109"></a><a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml">00109</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml" title="A steric conformer filter class.">OBStericConformerFilter</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml" title="Interface used by OBConformerSearch for filtering conformers.">OBConformerFilter</a>
<a name="l00110"></a>00110   {
<a name="l00111"></a>00111     <span class="keyword">public</span>:
<a name="l00112"></a><a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml#a914bcf8638e8e48af7c5f9dfc2222a2a">00112</a>       <a class="code" href="classOpenBabel_1_1OBStericConformerFilter.shtml#a914bcf8638e8e48af7c5f9dfc2222a2a">OBStericConformerFilter</a>(<span class="keywordtype">double</span> cutoff) : m_cutoff(cutoff) {}
<a name="l00113"></a>00113       <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a> &amp;key, <span class="keywordtype">double</span> *coords);
<a name="l00114"></a>00114     <span class="keyword">private</span>:
<a name="l00115"></a>00115       <span class="keywordtype">double</span> m_cutoff;
<a name="l00116"></a>00116   };
<a name="l00117"></a>00117 
<a name="l00119"></a>00119   <span class="comment">//</span>
<a name="l00120"></a>00120   <span class="comment">//  OBConformerScore(s)</span>
<a name="l00121"></a>00121   <span class="comment">//</span>
<a name="l00123"></a>00123 <span class="comment"></span>
<a name="l00137"></a><a class="code" href="classOpenBabel_1_1OBConformerScore.shtml">00137</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml" title="Interface used by OBConformerSearch for scoring conformers.">OBConformerScore</a>
<a name="l00138"></a>00138   {
<a name="l00139"></a>00139     <span class="keyword">public</span>:
<a name="l00143"></a><a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">00143</a>       <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> { HighScore, LowScore };
<a name="l00147"></a>00147       <span class="keyword">virtual</span> Preferred GetPreferred() = 0;
<a name="l00151"></a><a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cfa518f6bbe779cc0085da5461c257fd8a6">00151</a>       <span class="keyword">enum</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> { Highest, Lowest, <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cfa518f6bbe779cc0085da5461c257fd8a6">Sum</a>, Average };
<a name="l00155"></a>00155       <span class="keyword">virtual</span> Convergence GetConvergence() = 0;
<a name="l00159"></a>00159       <span class="keyword">virtual</span> <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a> &amp;keys,
<a name="l00160"></a>00160           <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers) = 0;
<a name="l00161"></a>00161   };
<a name="l00162"></a>00162 
<a name="l00171"></a><a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml">00171</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml" title="A RMSD conformer scoring class.">OBRMSDConformerScore</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml" title="Interface used by OBConformerSearch for scoring conformers.">OBConformerScore</a>
<a name="l00172"></a>00172   {
<a name="l00173"></a>00173     <span class="keyword">public</span>:
<a name="l00174"></a><a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">00174</a>       <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> <a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">GetPreferred</a>() { <span class="keywordflow">return</span> HighScore; }
<a name="l00175"></a><a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">00175</a>       <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> <a class="code" href="classOpenBabel_1_1OBRMSDConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">GetConvergence</a>() { <span class="keywordflow">return</span> Average; }
<a name="l00176"></a>00176       <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a> &amp;keys,
<a name="l00177"></a>00177           <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers);
<a name="l00178"></a>00178   };
<a name="l00179"></a>00179 
<a name="l00185"></a><a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml">00185</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml" title="A lowest energy conformer scoring class.">OBEnergyConformerScore</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml" title="Interface used by OBConformerSearch for scoring conformers.">OBConformerScore</a>
<a name="l00186"></a>00186   {
<a name="l00187"></a>00187     <span class="keyword">public</span>:
<a name="l00188"></a><a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">00188</a>       <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#ae5293b2df07c4f01e42a925f954fe199">Preferred</a> <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#acd1109a84508503c02e429be0fd3960b">GetPreferred</a>() { <span class="keywordflow">return</span> LowScore; }
<a name="l00189"></a><a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">00189</a>       <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml#a11429dfa214276750cb761b6261485cf">Convergence</a> <a class="code" href="classOpenBabel_1_1OBEnergyConformerScore.shtml#a58c03d41bd16b4017639f6bf41f8de45">GetConvergence</a>() { <span class="keywordflow">return</span> Lowest; }
<a name="l00190"></a>00190       <span class="keywordtype">double</span> Score(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a> &amp;keys,
<a name="l00191"></a>00191           <span class="keyword">const</span> std::vector&lt;double*&gt; &amp;conformers);
<a name="l00192"></a>00192   };
<a name="l00193"></a>00193 
<a name="l00194"></a>00194 
<a name="l00196"></a>00196   <span class="comment">//</span>
<a name="l00197"></a>00197   <span class="comment">//  OBConformerSearch</span>
<a name="l00198"></a>00198   <span class="comment">//</span>
<a name="l00200"></a>00200 <span class="comment"></span>
<a name="l00207"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml">00207</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml" title="Conformer searching using genetic algorithm. See Conformer Searching.">OBConformerSearch</a>
<a name="l00208"></a>00208   {
<a name="l00209"></a>00209     <span class="keyword">public</span>:
<a name="l00210"></a>00210       <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml" title="Conformer searching using genetic algorithm. See Conformer Searching.">OBConformerSearch</a>();
<a name="l00211"></a>00211       ~<a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml" title="Conformer searching using genetic algorithm. See Conformer Searching.">OBConformerSearch</a>();
<a name="l00225"></a>00225       <span class="keywordtype">bool</span> Setup(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, <span class="keywordtype">int</span> numConformers = 30, <span class="keywordtype">int</span> numChildren = 5,
<a name="l00226"></a>00226           <span class="keywordtype">int</span> mutability = 5, <span class="keywordtype">int</span> convergence = 25);
<a name="l00230"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a5ee2e4f8c4c9cc9fed9949e54b8c728e">00230</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a5ee2e4f8c4c9cc9fed9949e54b8c728e">SetNumConformers</a>(<span class="keywordtype">int</span> numConformers) { m_numConformers = numConformers; }
<a name="l00234"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a25b1f90c4963a806ac4aa898f542afa3">00234</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a25b1f90c4963a806ac4aa898f542afa3">SetNumChildren</a>(<span class="keywordtype">int</span> numChildren) { m_numChildren = numChildren; }
<a name="l00238"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a375b8f03c5cd5fd162cea6bd78c14356">00238</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a375b8f03c5cd5fd162cea6bd78c14356">SetMutability</a>(<span class="keywordtype">int</span> mutability) { m_mutability = mutability; }
<a name="l00243"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a259d7fb57066383560678537a93d79ad">00243</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a259d7fb57066383560678537a93d79ad">SetConvergence</a>(<span class="keywordtype">int</span> convergence) { m_convergence = convergence; }
<a name="l00247"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a045f339459d9cc1892cfe9dcdbed2b60">00247</a>       <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a045f339459d9cc1892cfe9dcdbed2b60">SetFixedBonds</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a> &amp;fixedBonds) { m_fixedBonds = fixedBonds; }
<a name="l00248"></a>00248 
<a name="l00249"></a>00249 
<a name="l00258"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a95879a373f39c05163d27941df8c18c6">00258</a>       <span class="keywordtype">void</span> SetFilter(<a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml" title="Interface used by OBConformerSearch for filtering conformers.">OBConformerFilter</a> *filter)
<a name="l00259"></a>00259       {
<a name="l00260"></a>00260         <span class="keyword">delete</span> m_filter;
<a name="l00261"></a>00261         m_filter = filter;
<a name="l00262"></a>00262       }
<a name="l00272"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#ab6e866e55e02b792a2b3837ee949bbfd">00272</a>       <span class="keywordtype">void</span> SetScore(<a class="code" href="classOpenBabel_1_1OBConformerScore.shtml" title="Interface used by OBConformerSearch for scoring conformers.">OBConformerScore</a> *score)
<a name="l00273"></a>00273       {
<a name="l00274"></a>00274         <span class="keyword">delete</span> m_score;
<a name="l00275"></a>00275         m_score = score;
<a name="l00276"></a>00276       }
<a name="l00277"></a>00277 
<a name="l00281"></a>00281       <span class="keywordtype">void</span> Search();
<a name="l00282"></a>00282 
<a name="l00283"></a><a class="code" href="classOpenBabel_1_1OBConformerSearch.shtml#a6753356d193ce72d72d1fc1cfee74639">00283</a>       <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a>&amp; GetRotorKeys()<span class="keyword"> const</span>
<a name="l00284"></a>00284 <span class="keyword">      </span>{
<a name="l00285"></a>00285         <span class="keywordflow">return</span> m_rotorKeys;
<a name="l00286"></a>00286       }
<a name="l00287"></a>00287 
<a name="l00288"></a>00288       <span class="keywordtype">void</span> GetConformers(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol);
<a name="l00289"></a>00289     <span class="keyword">private</span>:
<a name="l00293"></a>00293       <span class="keywordtype">void</span> NextGeneration();
<a name="l00297"></a>00297       <span class="keywordtype">double</span> MakeSelection();
<a name="l00301"></a>00301       <span class="keywordtype">bool</span> IsUniqueKey(<span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a> &amp;keys, <span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a> &amp;key) <span class="keyword">const</span>;
<a name="l00305"></a>00305       <span class="keywordtype">bool</span> IsGood(<span class="keyword">const</span> <a class="code" href="namespaceOpenBabel.shtml#a087fe4bdc2d57b56addb4b9fd7fc0415">RotorKey</a> &amp;key);
<a name="l00306"></a>00306 
<a name="l00307"></a>00307       <span class="keywordtype">int</span> m_numConformers; 
<a name="l00308"></a>00308       <span class="keywordtype">int</span> m_numChildren; 
<a name="l00309"></a>00309       <span class="keywordtype">int</span> m_mutability; 
<a name="l00310"></a>00310       <span class="keywordtype">int</span> m_convergence; 
<a name="l00311"></a>00311 
<a name="l00312"></a>00312       <a class="code" href="classOpenBabel_1_1OBBitVec.shtml" title="A speed-optimized vector of bits.">OBBitVec</a>      m_fixedBonds; 
<a name="l00313"></a>00313       <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>         m_mol; 
<a name="l00314"></a>00314       <a class="code" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,.">OBRotorList</a>   m_rotorList; 
<a name="l00315"></a>00315       <a class="code" href="namespaceOpenBabel.shtml#ad5ae0fb6c3d3406efb549fbc9f8c26f0">RotorKeys</a>     m_rotorKeys; 
<a name="l00316"></a>00316 
<a name="l00317"></a>00317       <a class="code" href="classOpenBabel_1_1OBConformerFilter.shtml" title="Interface used by OBConformerSearch for filtering conformers.">OBConformerFilter</a> *m_filter;
<a name="l00318"></a>00318       <a class="code" href="classOpenBabel_1_1OBConformerScore.shtml" title="Interface used by OBConformerSearch for scoring conformers.">OBConformerScore</a>  *m_score;
<a name="l00319"></a>00319 
<a name="l00320"></a>00320 
<a name="l00321"></a>00321   };
<a name="l00322"></a>00322 
<a name="l00429"></a>00429 
<a name="l00430"></a>00430 };
<a name="l00431"></a>00431 
<a name="l00432"></a>00432 <span class="preprocessor">#endif</span>
<a name="l00433"></a>00433 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
