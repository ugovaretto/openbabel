<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>grid.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">grid.h</div>  </div>
</div>
<div class="contents">
<a href="grid_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">grid.h - Handle grids of values.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span>
<a name="l00005"></a>00005 <span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span>
<a name="l00006"></a>00006 <span class="comment">Some Portions Copyright (C) 2008 by Marcus D. Hanwell</span>
<a name="l00007"></a>00007 <span class="comment"></span>
<a name="l00008"></a>00008 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00009"></a>00009 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00010"></a>00010 <span class="comment"></span>
<a name="l00011"></a>00011 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00012"></a>00012 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00013"></a>00013 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00014"></a>00014 <span class="comment"></span>
<a name="l00015"></a>00015 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00016"></a>00016 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00017"></a>00017 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00018"></a>00018 <span class="comment">GNU General Public License for more details.</span>
<a name="l00019"></a>00019 <span class="comment">***********************************************************************/</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="preprocessor">#ifndef OB_GRID_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span><span class="preprocessor">#define OB_GRID_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;<a class="code" href="vector3_8h.shtml" title="Handle 3D coordinates.">openbabel/math/vector3.h</a>&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml" title="Base classes to build a graph.">openbabel/base.h</a>&gt;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="comment">// Necessary evil for 2.x series -- should use OBMol* below</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel)...">openbabel/mol.h</a>&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;iosfwd&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">namespace </span>OpenBabel
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038 
<a name="l00039"></a>00039   <span class="comment">// Forward declaration</span>
<a name="l00040"></a>00040   <span class="keyword">class </span>OBMol;
<a name="l00041"></a>00041 
<a name="l00044"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml">00044</a>  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBGrid.shtml" title="A base grid class.">OBGrid</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>
<a name="l00045"></a>00045   {
<a name="l00046"></a>00046   <span class="keyword">protected</span>:
<a name="l00047"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#ad2367ec6a3d166e433fec916c5826aa1">00047</a>     <span class="keywordtype">double</span> _xmin,_xmax,_ymin,_ymax,<a class="code" href="classOpenBabel_1_1OBGrid.shtml#ad2367ec6a3d166e433fec916c5826aa1">_zmin</a>,_zmax; 
<a name="l00048"></a>00048 
<a name="l00049"></a>00049   <span class="keyword">public</span>:
<a name="l00050"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#a907e18c9891f0d2bf379c3f9be6b6dc2">00050</a>     <a class="code" href="classOpenBabel_1_1OBGrid.shtml#a907e18c9891f0d2bf379c3f9be6b6dc2">OBGrid</a>() {}
<a name="l00051"></a>00051 
<a name="l00055"></a>00055     <span class="keyword">virtual</span> <span class="keywordtype">void</span> Init(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;box);
<a name="l00056"></a>00056 
<a name="l00058"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#a1f6551dd07c7ac678e87490d5670aa7a">00058</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml#a1f6551dd07c7ac678e87490d5670aa7a">GetXmin</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_xmin);    }
<a name="l00060"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#ae8fcb907c909f575ef72e132e7b18ef8">00060</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml#ae8fcb907c909f575ef72e132e7b18ef8">GetYmin</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_ymin);    }
<a name="l00062"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#a5de60e41b3a8ae923af4acf34a5dd8b3">00062</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml#a5de60e41b3a8ae923af4acf34a5dd8b3">GetZmin</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_zmin);    }
<a name="l00064"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#aa3e98e4e3d520f6c796c89976cb48677">00064</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml#aa3e98e4e3d520f6c796c89976cb48677">GetXmax</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_xmax);    }
<a name="l00066"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#adf7089774e10eac6341d3662ece9b7ea">00066</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml#adf7089774e10eac6341d3662ece9b7ea">GetYmax</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_ymax);    }
<a name="l00068"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#ae1dab64d37bb4f2fee3dd9dbbb2dd3fd">00068</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml#ae1dab64d37bb4f2fee3dd9dbbb2dd3fd">GetZmax</a>()<span class="keyword"> const    </span>{ <span class="keywordflow">return</span>(_zmax);    }
<a name="l00069"></a>00069 
<a name="l00071"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#a2a499643ad2be70afaa1607b4affb310">00071</a>     <span class="keywordtype">bool</span> PointIsInBox(<span class="keywordtype">double</span> x,<span class="keywordtype">double</span> y,<span class="keywordtype">double</span> z)
<a name="l00072"></a>00072     {
<a name="l00073"></a>00073       <span class="keywordflow">return</span> (x&gt;=_xmin) &amp;&amp; (x&lt;=_xmax) &amp;&amp;
<a name="l00074"></a>00074         (y&gt;=_ymin) &amp;&amp; (y&lt;=_ymax) &amp;&amp;
<a name="l00075"></a>00075         (z&gt;=_zmin) &amp;&amp; (z&lt;=_zmax);
<a name="l00076"></a>00076     }
<a name="l00078"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#ad557d62926d0bc4cea092baba4466906">00078</a>     <span class="keywordtype">bool</span> PointIsInBox(<span class="keywordtype">double</span> *c)
<a name="l00079"></a>00079     {
<a name="l00080"></a>00080       <span class="keywordflow">return</span> (c[0]&gt;=_xmin) &amp;&amp; (c[0]&lt;=_xmax) &amp;&amp;
<a name="l00081"></a>00081         (c[1]&gt;=_ymin) &amp;&amp; (c[1]&lt;=_ymax) &amp;&amp;
<a name="l00082"></a>00082         (c[2]&gt;=_zmin) &amp;&amp; (c[2]&lt;=_zmax);
<a name="l00083"></a>00083     }
<a name="l00084"></a>00084 
<a name="l00086"></a><a class="code" href="classOpenBabel_1_1OBGrid.shtml#a4f56880aa1ad845fbc6c0c7a4ce45d3b">00086</a>     <span class="keywordtype">bool</span> PointIsInBox(<a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> v)
<a name="l00087"></a>00087     {
<a name="l00088"></a>00088       <span class="keywordflow">return</span> (v.<a class="code" href="classOpenBabel_1_1vector3.shtml#abef0821fe31ac502f2d11718aef50ae3" title="Access function to get the x-coordinate of the vector.">x</a>() &gt;= _xmin) &amp;&amp; (v.<a class="code" href="classOpenBabel_1_1vector3.shtml#abef0821fe31ac502f2d11718aef50ae3" title="Access function to get the x-coordinate of the vector.">x</a>() &lt;=_xmax) &amp;&amp;
<a name="l00089"></a>00089       (v.<a class="code" href="classOpenBabel_1_1vector3.shtml#a60e843e6f8ec7cf8709da2954bd2c202" title="Access function to get the y-coordinate of the vector.">y</a>()&gt;=_ymin) &amp;&amp; (v.<a class="code" href="classOpenBabel_1_1vector3.shtml#a60e843e6f8ec7cf8709da2954bd2c202" title="Access function to get the y-coordinate of the vector.">y</a>()&lt;=_ymax) &amp;&amp;
<a name="l00090"></a>00090       (v.<a class="code" href="classOpenBabel_1_1vector3.shtml#ac6512d9d5bc60ad02143f34ba62e010a" title="Access function to get the z-coordinate of the vector.">z</a>()&gt;=_zmin) &amp;&amp; (v.<a class="code" href="classOpenBabel_1_1vector3.shtml#ac6512d9d5bc60ad02143f34ba62e010a" title="Access function to get the z-coordinate of the vector.">z</a>()&lt;=_zmax);
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092   };
<a name="l00093"></a>00093 
<a name="l00101"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml">00101</a>  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol)">OBFloatGrid</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml" title="A base grid class.">OBGrid</a>
<a name="l00102"></a>00102   {
<a name="l00103"></a>00103   <span class="keyword">protected</span>:
<a name="l00104"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a7d7a76b9f2cf24040d65d2387f01ebd1">00104</a>     std::vector&lt;double&gt; <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a7d7a76b9f2cf24040d65d2387f01ebd1" title="floating point values">_values</a>;   
<a name="l00105"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a87d1e1b6b09eecaec2670dd0f8caa6a1">00105</a>     <span class="keywordtype">int</span>   *<a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a87d1e1b6b09eecaec2670dd0f8caa6a1" title="for integer values (deprecated)">_ival</a>;             
<a name="l00106"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a63f7b06cde4a057a2c76f8af0ff28e91">00106</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a63f7b06cde4a057a2c76f8af0ff28e91">_midz</a>,_midx,_midy; 
<a name="l00107"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#aa4d2282bc8cc51ffa66eb6c17aae17ee">00107</a>     <span class="keywordtype">int</span> _ydim,_xdim,<a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#aa4d2282bc8cc51ffa66eb6c17aae17ee" title="grid dimensions">_zdim</a>;    
<a name="l00108"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a382cc46cd19ec2a1e726d9c8191cedea">00108</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a382cc46cd19ec2a1e726d9c8191cedea">_spacing</a>,_inv_spa; 
<a name="l00109"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a314a0d1d51e74f040278d0de06f075b5">00109</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a314a0d1d51e74f040278d0de06f075b5">_halfSpace</a>;        
<a name="l00110"></a>00110 
<a name="l00111"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a0d3a8c489526216952d17734085e7287">00111</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> _xAxis, _yAxis, <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a0d3a8c489526216952d17734085e7287">_zAxis</a>;
<a name="l00112"></a>00112 
<a name="l00113"></a>00113   <span class="keyword">public</span>:
<a name="l00114"></a>00114 
<a name="l00115"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a7ddbf2110b572079e0dee5def5b97cf9">00115</a>     <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a7ddbf2110b572079e0dee5def5b97cf9">OBFloatGrid</a>() : _ival(NULL), _halfSpace(0.0) {}
<a name="l00116"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#ad84f091329edc731ab0fb4c53640923b">00116</a>     ~<a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol)">OBFloatGrid</a>()
<a name="l00117"></a>00117     {
<a name="l00118"></a>00118       <span class="keywordflow">if</span> (_ival) <span class="keyword">delete</span> [] _ival;
<a name="l00119"></a>00119     }
<a name="l00120"></a>00120 
<a name="l00123"></a>00123     <span class="keywordtype">void</span> Init(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;box,<span class="keywordtype">double</span> spacing, <span class="keywordtype">double</span> pad=0.0);
<a name="l00124"></a>00124 
<a name="l00126"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a8121470b4aa37e344630ffb3c8104cc0">00126</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a8121470b4aa37e344630ffb3c8104cc0">GetMin</a>() { <span class="keywordflow">return</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>(_xmin, _ymin, _zmin); }
<a name="l00127"></a>00127 
<a name="l00131"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#ab3d065904c33ecf6eaae0199fe6d0592">00131</a>     <span class="keywordtype">void</span> GetMin(<span class="keywordtype">double</span> *a)
<a name="l00132"></a>00132     {
<a name="l00133"></a>00133       a[0]=_xmin;
<a name="l00134"></a>00134       a[1]=_ymin;
<a name="l00135"></a>00135       a[2]=_zmin;
<a name="l00136"></a>00136     }
<a name="l00137"></a>00137 
<a name="l00139"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#adfbe5b67160cd2a39b96b48ef6a5ce20">00139</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#adfbe5b67160cd2a39b96b48ef6a5ce20">GetMax</a>() { <span class="keywordflow">return</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>(_xmax, _ymax, _zmax); }
<a name="l00140"></a>00140 
<a name="l00144"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a1aa43bea8911cf7665f6e2fd151b609c">00144</a>     <span class="keywordtype">void</span> GetMax(<span class="keywordtype">double</span> *a)
<a name="l00145"></a>00145     {
<a name="l00146"></a>00146       a[0]=_xmax;
<a name="l00147"></a>00147       a[1]=_ymax;
<a name="l00148"></a>00148       a[2]=_zmax;
<a name="l00149"></a>00149     }
<a name="l00150"></a>00150 
<a name="l00152"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a12a4638e627471ba4f9d2ec8837dff0d">00152</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a12a4638e627471ba4f9d2ec8837dff0d">GetSpacing</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span>(_spacing); }
<a name="l00156"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a78f75c8108f8539c255711029b37cedc">00156</a>     <span class="keywordtype">void</span> GetSpacing(<span class="keywordtype">double</span> &amp;s)
<a name="l00157"></a>00157     {
<a name="l00158"></a>00158       s=_spacing;
<a name="l00159"></a>00159     }
<a name="l00161"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a815a893513d9333dffce060b37d413cf">00161</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a815a893513d9333dffce060b37d413cf">GetScale</a>()<span class="keyword"> const   </span>{ <span class="keywordflow">return</span>(_inv_spa); }
<a name="l00163"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a59381fddeab9394eb1e6f881bc5bcfde">00163</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a59381fddeab9394eb1e6f881bc5bcfde">GetHalfSpace</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span>(_halfSpace);}
<a name="l00165"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a2d1899945af07ee0874f426dfa907301">00165</a>     <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a2d1899945af07ee0874f426dfa907301">GetXdim</a>()<span class="keyword"> const       </span>{ <span class="keywordflow">return</span>(_xdim);    }
<a name="l00167"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#af06d1abed456dfc5ae6df717bfdfd119">00167</a>     <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#af06d1abed456dfc5ae6df717bfdfd119">GetYdim</a>()<span class="keyword"> const       </span>{ <span class="keywordflow">return</span>(_ydim);    }
<a name="l00169"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a48f46d73fcb9f58a8fe51296a9b223df">00169</a>     <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a48f46d73fcb9f58a8fe51296a9b223df">GetZdim</a>()<span class="keyword"> const       </span>{ <span class="keywordflow">return</span>(_zdim);    }
<a name="l00173"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a6e6665768ad3b8fc18276c6517c0b03d">00173</a>     <span class="keywordtype">void</span> GetDim(<span class="keywordtype">int</span> *a)
<a name="l00174"></a>00174     {
<a name="l00175"></a>00175       a[0]=_xdim;
<a name="l00176"></a>00176       a[1]=_ydim;
<a name="l00177"></a>00177       a[2]=_zdim;
<a name="l00178"></a>00178     }
<a name="l00179"></a>00179 
<a name="l00181"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#accffd942b323dd88aebc6fb6c20e1e18">00181</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetMidpointVector()
<a name="l00182"></a>00182     {
<a name="l00183"></a>00183       <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> v;
<a name="l00184"></a>00184       v.<a class="code" href="classOpenBabel_1_1vector3.shtml#a685349dbc9e2d99a19616763811cbfba" title="Set x,y and z-component of a vector.">Set</a>(_midx,_midy,_midz);
<a name="l00185"></a>00185       <span class="keywordflow">return</span>(v);
<a name="l00186"></a>00186     }
<a name="l00187"></a>00187 
<a name="l00189"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a664e46425ebb4de07d1d3d44eced9fd7">00189</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetXAxis()<span class="keyword"> const</span>
<a name="l00190"></a>00190 <span class="keyword">    </span>{
<a name="l00191"></a>00191       <span class="keywordflow">return</span> _xAxis;
<a name="l00192"></a>00192     }
<a name="l00193"></a>00193 
<a name="l00195"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#af7bce82f6dfeb2b4f04f243e23e74dca">00195</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetYAxis()<span class="keyword"> const</span>
<a name="l00196"></a>00196 <span class="keyword">    </span>{
<a name="l00197"></a>00197       <span class="keywordflow">return</span> _yAxis;
<a name="l00198"></a>00198     }
<a name="l00199"></a>00199 
<a name="l00201"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a299ca4b8330c823e4c771888b09ac5ea">00201</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetZAxis()<span class="keyword"> const</span>
<a name="l00202"></a>00202 <span class="keyword">    </span>{
<a name="l00203"></a>00203       <span class="keywordflow">return</span> _zAxis;
<a name="l00204"></a>00204     }
<a name="l00205"></a>00205 
<a name="l00207"></a>00207     <span class="keywordtype">void</span> SetNumberOfPoints(<span class="keywordtype">int</span> nx, <span class="keywordtype">int</span> ny, <span class="keywordtype">int</span> nz);
<a name="l00208"></a>00208 
<a name="l00210"></a>00210     <span class="keywordtype">void</span> SetXAxis(<a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>);
<a name="l00212"></a>00212     <span class="keywordtype">void</span> SetYAxis(<a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>);
<a name="l00214"></a>00214     <span class="keywordtype">void</span> SetZAxis(<a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>);
<a name="l00215"></a>00215 
<a name="l00220"></a>00220     <span class="keywordtype">void</span> SetLimits(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>&amp; origin, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>&amp; x, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>&amp; y,
<a name="l00221"></a>00221                    <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>&amp; z);
<a name="l00224"></a>00224     <span class="keywordtype">void</span> SetLimits(<span class="keyword">const</span> <span class="keywordtype">double</span> origin[3], <span class="keyword">const</span> <span class="keywordtype">double</span> x[3], <span class="keyword">const</span> <span class="keywordtype">double</span> y[3],
<a name="l00225"></a>00225                    <span class="keyword">const</span> <span class="keywordtype">double</span> z[3]);
<a name="l00226"></a>00226 
<a name="l00228"></a>00228     std::vector&lt;double&gt; GetDataVector();
<a name="l00232"></a>00232     <span class="keywordtype">void</span> SetVals(<span class="keyword">const</span> std::vector&lt;double&gt; &amp; vals);
<a name="l00233"></a>00233 
<a name="l00238"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a5eb7667a7f7ac9876e632c35231fc44a">00238</a>     <span class="keywordtype">double</span> *<a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a5eb7667a7f7ac9876e632c35231fc44a">GetVals</a>()    {        <span class="keywordflow">return</span>(&amp;_values[0]);    }
<a name="l00239"></a>00239 
<a name="l00241"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#ac52efdf630f7f15198bf57bff1520113">00241</a>     <span class="keywordtype">double</span> GetValue(<span class="keywordtype">int</span> i, <span class="keywordtype">int</span> j, <span class="keywordtype">int</span> k)
<a name="l00242"></a>00242     {
<a name="l00243"></a>00243       <span class="keywordflow">if</span> (i*_ydim*_zdim + j*_zdim + k &gt; _xdim*_ydim*_zdim)
<a name="l00244"></a>00244         <span class="keywordflow">return</span> 0.0;
<a name="l00245"></a>00245       <span class="keywordflow">else</span>
<a name="l00246"></a>00246         <span class="keywordflow">return</span> _values[i*_ydim*_zdim + j*_zdim + k];
<a name="l00247"></a>00247     }
<a name="l00248"></a>00248 
<a name="l00251"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a70b7ebc269d7a65e00d8eae51a5f01f4">00251</a>     <span class="keywordtype">void</span> SetVals(<span class="keywordtype">double</span> *ptr)
<a name="l00252"></a>00252     {
<a name="l00253"></a>00253      <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; _xdim*_ydim*_zdim; ++i)
<a name="l00254"></a>00254        _values[i] = ptr[i];
<a name="l00255"></a>00255     }
<a name="l00256"></a>00256 
<a name="l00258"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a8e87e5ca8491e61def25764da4fdb46d">00258</a>     <span class="keywordtype">bool</span> SetValue(<span class="keywordtype">int</span> i, <span class="keywordtype">int</span> j, <span class="keywordtype">int</span> k, <span class="keywordtype">double</span> val)
<a name="l00259"></a>00259     {
<a name="l00260"></a>00260       <span class="keywordflow">if</span> (i*_ydim*_zdim + j*_zdim + k &gt; _xdim*_ydim*_zdim)
<a name="l00261"></a>00261         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00262"></a>00262 
<a name="l00263"></a>00263       _values[i*_ydim*_zdim + j*_zdim + k] = val;
<a name="l00264"></a>00264       <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00265"></a>00265     }
<a name="l00266"></a>00266 
<a name="l00268"></a><a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml#a2a6903cb1be80ac1055925f1074b75a7">00268</a>     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> Center()
<a name="l00269"></a>00269     {
<a name="l00270"></a>00270       <span class="keywordflow">return</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a>(_midx,_midy,_midz);
<a name="l00271"></a>00271     }
<a name="l00272"></a>00272 
<a name="l00273"></a>00273     <span class="keyword">friend</span> std::ostream&amp; <a class="code" href="namespaceOpenBabel.shtml#a70c653ee69fdbd27f77d430e4aed3cad" title="Prints a representation of the vector as a row vector of the form &quot;&lt;0.1,1,2&gt;&quot;.">operator&lt;&lt; </a>( std::ostream&amp;, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol)">OBFloatGrid</a>&amp; ) ;
<a name="l00274"></a>00274     <span class="keyword">friend</span> std::istream&amp; <a class="code" href="namespaceOpenBabel.shtml#a54358a339fc06df028bb5fbe403b0032">operator&gt;&gt; </a>( std::istream&amp;,<a class="code" href="classOpenBabel_1_1OBFloatGrid.shtml" title="Handle double precision floating point 3D grids (e.g., charge density around an OBMol)">OBFloatGrid</a>&amp; ) ;
<a name="l00275"></a>00275 
<a name="l00277"></a>00277     <span class="keywordtype">double</span> Inject(<span class="keywordtype">double</span> x,<span class="keywordtype">double</span> y,<span class="keywordtype">double</span> z);
<a name="l00278"></a>00278     <span class="keywordtype">void</span> IndexToCoords(<span class="keywordtype">int</span> idx, <span class="keywordtype">double</span> &amp;x, <span class="keywordtype">double</span> &amp;y, <span class="keywordtype">double</span> &amp;z);
<a name="l00279"></a>00279     <span class="keywordtype">void</span> CoordsToIndex(<span class="keywordtype">int</span>*,<span class="keywordtype">double</span>*);
<a name="l00280"></a>00280     <span class="keywordtype">int</span> CoordsToIndex(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> z);
<a name="l00282"></a>00282     <span class="keywordtype">double</span> Interpolate(<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>);
<a name="l00284"></a>00284     <span class="keywordtype">double</span> InterpolateDerivatives(<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span> *derivatives);
<a name="l00285"></a>00285   };
<a name="l00286"></a>00286 
<a name="l00287"></a>00287 <span class="preprocessor">#ifndef OBPolarGrid</span>
<a name="l00288"></a><a class="code" href="grid_8h.shtml#a42518804e5759469eaa8ff61664c91b0">00288</a> <span class="preprocessor"></span><span class="preprocessor">#define OBPolarGrid 0x01 </span><span class="comment">/* polar interactions? */</span>
<a name="l00289"></a>00289 <span class="preprocessor">#endif //OBPolarGrid</span>
<a name="l00290"></a>00290 <span class="preprocessor"></span>
<a name="l00291"></a>00291 <span class="preprocessor">#ifndef OBLipoGrid</span>
<a name="l00292"></a><a class="code" href="grid_8h.shtml#aff71b2a63281edf45027696def551dae">00292</a> <span class="preprocessor"></span><span class="preprocessor">#define OBLipoGrid 0x02 </span><span class="comment">/* lipophilicity? */</span>
<a name="l00293"></a>00293 <span class="preprocessor">#endif //OBLipoGrid</span>
<a name="l00294"></a>00294 <span class="preprocessor"></span>
<a name="l00298"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml">00298</a>  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBProxGrid.shtml" title="A grid for determining the proximity of a given point to atoms in an OBMol.">OBProxGrid</a>: <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGrid.shtml" title="A base grid class.">OBGrid</a>
<a name="l00299"></a>00299   {
<a name="l00300"></a>00300   <span class="keyword">protected</span>:
<a name="l00301"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a82f62033e7d83304ab2da3418f6be612">00301</a>     <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a82f62033e7d83304ab2da3418f6be612">_gridtype</a>;
<a name="l00302"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a76fe34283476439a274c9a7f099aeaae">00302</a>     <span class="keywordtype">int</span> _nxinc,_nyinc,<a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a76fe34283476439a274c9a7f099aeaae">_nzinc</a>,_maxinc;
<a name="l00303"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#aab8d6695bce362b593ab3dd8c021700b">00303</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#aab8d6695bce362b593ab3dd8c021700b">_inc</a>;
<a name="l00304"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a359e5bb0c1ace1a8d23717ae05ce804b">00304</a>     std::vector&lt;std::vector&lt;int&gt; &gt; <a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a359e5bb0c1ace1a8d23717ae05ce804b">cell</a>;
<a name="l00305"></a>00305 
<a name="l00306"></a>00306   <span class="keyword">public</span>:
<a name="l00307"></a>00307 
<a name="l00308"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a5d96dd1fe7ca31c165a7ba46527b9f94">00308</a>     <a class="code" href="classOpenBabel_1_1OBProxGrid.shtml" title="A grid for determining the proximity of a given point to atoms in an OBMol.">OBProxGrid</a>(<span class="keywordtype">int</span> gridtype=0)
<a name="l00309"></a>00309       {
<a name="l00310"></a>00310         _gridtype=gridtype;
<a name="l00311"></a>00311       }
<a name="l00312"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a4505a0fdb45f7049f787a3af0c6507e9">00312</a>     ~<a class="code" href="classOpenBabel_1_1OBProxGrid.shtml" title="A grid for determining the proximity of a given point to atoms in an OBMol.">OBProxGrid</a>()
<a name="l00313"></a>00313       {}
<a name="l00314"></a>00314     <span class="keywordtype">void</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol,<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;box, <span class="keywordtype">double</span> cutoff,<span class="keywordtype">double</span> resolution = 0.5);
<a name="l00315"></a>00315     <span class="keywordtype">void</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol,<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;box, <span class="keywordtype">double</span> cutoff,
<a name="l00316"></a>00316                std::vector&lt;bool&gt; &amp;use,<span class="keywordtype">double</span> resolution = 0.5);
<a name="l00317"></a>00317     std::vector&lt;int&gt; *GetProxVector(<span class="keywordtype">double</span>,<span class="keywordtype">double</span>,<span class="keywordtype">double</span>);
<a name="l00318"></a>00318     std::vector&lt;int&gt; *GetProxVector(<span class="keywordtype">double</span>*);
<a name="l00319"></a>00319 
<a name="l00320"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#ac83fec56359c563116ec5a845ae20e3e">00320</a>     <span class="keywordtype">bool</span> LipoGrid()
<a name="l00321"></a>00321     {
<a name="l00322"></a>00322       <span class="keywordflow">return</span>((_gridtype&amp;<a class="code" href="grid_8h.shtml#aff71b2a63281edf45027696def551dae">OBLipoGrid</a>) ? <span class="keyword">true</span> : <span class="keyword">false</span>);
<a name="l00323"></a>00323     }
<a name="l00324"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a68fd875c6e50932b149919ebf5fd486a">00324</a>     <span class="keywordtype">bool</span> PolarGrid()
<a name="l00325"></a>00325     {
<a name="l00326"></a>00326       <span class="keywordflow">return</span>(_gridtype&amp;<a class="code" href="grid_8h.shtml#a42518804e5759469eaa8ff61664c91b0">OBPolarGrid</a>);
<a name="l00327"></a>00327     }
<a name="l00328"></a><a class="code" href="classOpenBabel_1_1OBProxGrid.shtml#a018163ad162fcb4394833ac8c1a370e3">00328</a>     <span class="keywordtype">void</span> SetGridType(<span class="keywordtype">int</span> gridtype)
<a name="l00329"></a>00329     {
<a name="l00330"></a>00330       _gridtype = gridtype;
<a name="l00331"></a>00331     }
<a name="l00332"></a>00332   };
<a name="l00333"></a>00333 
<a name="l00334"></a>00334   <span class="comment">// scoring function used: PLP = Piecewise Linear Potential or ChemScore algorithm</span>
<a name="l00335"></a><a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2fa18f893264a00711081b62de694f99db4">00335</a>   <span class="keyword">typedef</span> <span class="keyword">enum</span> { <a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2fa18f893264a00711081b62de694f99db4">Undefined</a> = -1, <a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2fa39cfa0b4108a78db97edfb547ad3af91">PLP</a>, <a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2fae5edd6b49548b767c8b120ad2640b28c">ChemScore</a> } <a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2f">score_t</a>;
<a name="l00336"></a>00336 
<a name="l00340"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml">00340</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml" title="A base class for scoring docking interactions between multiple molecules.">OBScoreGrid</a>
<a name="l00341"></a>00341   {
<a name="l00342"></a>00342   <span class="keyword">protected</span>:
<a name="l00343"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a04fe4b9911de166e526288d95b4ce6e1">00343</a>     <a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2f">score_t</a> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a04fe4b9911de166e526288d95b4ce6e1">gridtype</a>;
<a name="l00344"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ab3f078684998b83967d507d0f453f454">00344</a>     <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ab3f078684998b83967d507d0f453f454">verbose</a>;
<a name="l00345"></a>00345 
<a name="l00346"></a>00346   <span class="keyword">public</span>:
<a name="l00347"></a>00347 
<a name="l00348"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a40a24ec85daa9ac70aa74e4ca744f838">00348</a>     <span class="keywordtype">double</span> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a40a24ec85daa9ac70aa74e4ca744f838">score</a>;
<a name="l00349"></a>00349 
<a name="l00350"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#aea55db91f06422c171c3939dd5691b0a">00350</a>     <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#aea55db91f06422c171c3939dd5691b0a">OBScoreGrid</a>(<span class="keywordtype">void</span>)                 {  verbose = <span class="keyword">false</span>;      }
<a name="l00351"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a14f9977e97f604f4e2f4f09ce7d6cb1b">00351</a>     <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a14f9977e97f604f4e2f4f09ce7d6cb1b">~OBScoreGrid</a>(<span class="keywordtype">void</span>) {}
<a name="l00352"></a>00352 
<a name="l00353"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a25911a8785e3fff79ce03278e09c74f1">00353</a>     <span class="keywordtype">void</span>    <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a25911a8785e3fff79ce03278e09c74f1">SetVerbose</a>(<span class="keywordtype">bool</span> v)        {      verbose = v;      }
<a name="l00354"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a81dba3e924fddc20b688ca613ec2636e">00354</a>     <span class="keywordtype">void</span>    <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a81dba3e924fddc20b688ca613ec2636e">SetType</a>(<a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2f">score_t</a> type)     {      gridtype = type;  }
<a name="l00355"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ade656857818e093c4caeada3babafd21">00355</a>     <a class="code" href="namespaceOpenBabel.shtml#ad5725304290545e0b3b549501893ce2f">score_t</a> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ade656857818e093c4caeada3babafd21">GetType</a>(<span class="keywordtype">void</span>)             {    <span class="keywordflow">return</span> gridtype;    }
<a name="l00356"></a>00356 
<a name="l00357"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a114a309251a09c82e63645b8eaa79f33">00357</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a114a309251a09c82e63645b8eaa79f33">Clear</a>(<span class="keywordtype">void</span>)        { }
<a name="l00358"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a1973f00ba0ab103d78305ba01323f18f">00358</a>     <span class="keyword">virtual</span> <span class="keywordtype">double</span>  <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a1973f00ba0ab103d78305ba01323f18f">Eval</a>(<span class="keywordtype">double</span> *)    {       <span class="keywordflow">return</span> -1;       }
<a name="l00359"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a17b8bb0e69ea72ff166768a24f84a03f">00359</a>     <span class="keyword">virtual</span> <span class="keywordtype">double</span>  <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a17b8bb0e69ea72ff166768a24f84a03f">Eval</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol){<span class="keywordflow">return</span> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a17b8bb0e69ea72ff166768a24f84a03f">Eval</a>(mol.<a class="code" href="classOpenBabel_1_1OBMol.shtml#ad11003513310725bd54265ef5bf004c0">GetCoordinates</a>());}
<a name="l00360"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ab885605cebc669554a96c7ebf10ed1e9">00360</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ab885605cebc669554a96c7ebf10ed1e9">Init</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, <a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, std::string &amp;, <span class="keywordtype">double</span>){}
<a name="l00361"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#adc3c7c5a6cb7592aff127db9b0ed320e">00361</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#adc3c7c5a6cb7592aff127db9b0ed320e">Setup</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;) {}
<a name="l00362"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ac766aa1aa09c55ea699945dba5fecc7b">00362</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ac766aa1aa09c55ea699945dba5fecc7b">Setup</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, std::vector&lt;int&gt; &amp;){}
<a name="l00363"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a18f46d19bc8a15c0c1f2ceacd3d16e7a">00363</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a18f46d19bc8a15c0c1f2ceacd3d16e7a">Setup</a>(std::vector&lt;int&gt; &amp;) {}
<a name="l00364"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a76941ad7910ff3d3864f3a0368836efd">00364</a>     <span class="keyword">virtual</span> <span class="keywordtype">void</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a76941ad7910ff3d3864f3a0368836efd">Config</a>(std::string) {}
<a name="l00365"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ac66c4ef5deacb26c213a9f46a15600c7">00365</a>     <span class="keyword">virtual</span> <span class="keywordtype">bool</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#ac66c4ef5deacb26c213a9f46a15600c7">Read</a>(std::string)   {      <span class="keywordflow">return</span> <span class="keyword">false</span>;    }
<a name="l00366"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a85fb990e29228c904dfcd80a3c9ed0dd">00366</a>     <span class="keyword">virtual</span> <span class="keywordtype">bool</span>   <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a85fb990e29228c904dfcd80a3c9ed0dd">Write</a>(std::string)  {      <span class="keywordflow">return</span> <span class="keyword">false</span>;    }
<a name="l00367"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a1563b71f50c0192978cecaed6fc11fcb">00367</a>     <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#a1563b71f50c0192978cecaed6fc11fcb">Center</a>()           {      <span class="keywordflow">return</span> <a class="code" href="namespaceOpenBabel.shtml#ace51dfd98be07acf3a9c75c21e8d8af2" title="The zero vector: &lt;0.0, 0.0, 0.0&gt;">VZero</a>;    }
<a name="l00368"></a><a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#af6996bda138d1b637cf36db2fab269d8">00368</a>     <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> <a class="code" href="classOpenBabel_1_1OBScoreGrid.shtml#af6996bda138d1b637cf36db2fab269d8">CenterMol</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;) {      <span class="keywordflow">return</span> <a class="code" href="namespaceOpenBabel.shtml#ace51dfd98be07acf3a9c75c21e8d8af2" title="The zero vector: &lt;0.0, 0.0, 0.0&gt;">VZero</a>;    }
<a name="l00369"></a>00369   };
<a name="l00370"></a>00370 
<a name="l00371"></a>00371 } <span class="comment">// end namespace OpenBabel</span>
<a name="l00372"></a>00372 
<a name="l00373"></a>00373 <span class="preprocessor">#endif // OB_GRID_H</span>
<a name="l00374"></a>00374 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
