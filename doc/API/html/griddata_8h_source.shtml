<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>griddata.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">griddata.h</div>  </div>
</div>
<div class="contents">
<a href="griddata_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">griddata.h - Store grids of data linked to a molecule (e.g. Gaussian cube)</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">// Molekel - Molecular Visualization Program</span>
<a name="l00005"></a>00005 <span class="comment">// Copyright (C) 2006, 2007 Swiss National Supercomputing Centre (CSCS)</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">Some Portions Copyright (C) 2008 by Marcus D. Hanwell</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00010"></a>00010 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00013"></a>00013 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00014"></a>00014 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00015"></a>00015 <span class="comment"></span>
<a name="l00016"></a>00016 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00017"></a>00017 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00018"></a>00018 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00019"></a>00019 <span class="comment">GNU General Public License for more details.</span>
<a name="l00020"></a>00020 <span class="comment">***********************************************************************/</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef OB_GRIDDATA_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define OB_GRIDDATA_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml" title="Base classes to build a graph.">openbabel/base.h</a>&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="vector3_8h.shtml" title="Handle 3D coordinates.">openbabel/math/vector3.h</a>&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">namespace </span>OpenBabel {
<a name="l00032"></a>00032 
<a name="l00033"></a>00033   <span class="comment">// Uses private data pointer for ABI compatibility</span>
<a name="l00034"></a>00034   <span class="comment">// http://techbase.kde.org/Policies/Library_Code_Policy#D-Pointers</span>
<a name="l00035"></a>00035   <span class="keyword">class </span>GridDataPrivate;
<a name="l00036"></a>00036 
<a name="l00037"></a>00037   <span class="comment">// Class to store values for generic (non axis aligned) grids like Gaussian cube files</span>
<a name="l00038"></a>00038   <span class="comment">// Class introduction in griddata.cpp</span>
<a name="l00039"></a><a class="code" href="classOpenBabel_1_1OBGridData.shtml">00039</a>   <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential.">OBGridData</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>
<a name="l00040"></a>00040   {
<a name="l00041"></a>00041   <span class="keyword">public</span>:
<a name="l00043"></a>00043     <a class="code" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential.">OBGridData</a>();
<a name="l00044"></a>00044 
<a name="l00046"></a>00046     ~<a class="code" href="classOpenBabel_1_1OBGridData.shtml" title="Store values for numeric grids such as orbitals or electrostatic potential.">OBGridData</a>();
<a name="l00047"></a>00047 
<a name="l00049"></a><a class="code" href="classOpenBabel_1_1OBGridData.shtml#abceb2331ad056e3c5ad27894199a49ed">00049</a>     <span class="keyword">typedef</span> <span class="keyword">enum</span> { BOHR, ANGSTROM, OTHER } Unit;
<a name="l00050"></a>00050 
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 
<a name="l00056"></a>00056     <span class="keywordtype">void</span> GetAxes(<span class="keywordtype">double</span> x[3], <span class="keywordtype">double</span> y[3], <span class="keywordtype">double</span> z[3]) <span class="keyword">const</span>;
<a name="l00058"></a>00058     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetXAxis() <span class="keyword">const</span>;
<a name="l00060"></a>00060     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetYAxis() <span class="keyword">const</span>;
<a name="l00062"></a>00062     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetZAxis() <span class="keyword">const</span>;
<a name="l00064"></a>00064     <span class="keywordtype">void</span> GetAxes(<a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;v1, <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;v2, <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;v3) <span class="keyword">const</span>;
<a name="l00066"></a>00066     <span class="keywordtype">void</span> GetNumberOfPoints(<span class="keywordtype">int</span> &amp;nx, <span class="keywordtype">int</span> &amp;ny, <span class="keywordtype">int</span> &amp;nz) <span class="keyword">const</span>;
<a name="l00068"></a>00068     <span class="keywordtype">int</span> GetNumberOfPoints() <span class="keyword">const</span>;
<a name="l00070"></a>00070     <span class="keywordtype">void</span> GetNumberOfSteps(<span class="keywordtype">int</span> steps[3]) <span class="keyword">const</span>;
<a name="l00072"></a>00072     std::vector&lt; double &gt; GetValues() <span class="keyword">const</span>;
<a name="l00074"></a>00074     <span class="keywordtype">double</span> GetValue(<span class="keywordtype">int</span> i, <span class="keywordtype">int</span> j, <span class="keywordtype">int</span> k) <span class="keyword">const</span>;
<a name="l00076"></a>00076     <span class="keywordtype">double</span> GetValue (<a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> pos) <span class="keyword">const</span>;
<a name="l00078"></a>00078     Unit GetUnit() <span class="keyword">const</span>;
<a name="l00080"></a>00080     <span class="keywordtype">double</span> GetMinValue() <span class="keyword">const</span>;
<a name="l00082"></a>00082     <span class="keywordtype">double</span> GetMaxValue() <span class="keyword">const</span>;
<a name="l00084"></a>00084     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetOriginVector() <span class="keyword">const</span>;
<a name="l00088"></a>00088     <span class="keywordtype">void</span> GetOriginVector(<span class="keywordtype">double</span> o[3]) <span class="keyword">const</span>;
<a name="l00090"></a>00090     <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> GetMaxVector() <span class="keyword">const</span>;
<a name="l00092"></a>00092     <span class="keywordtype">bool</span> GetUnrestricted() <span class="keyword">const</span>;
<a name="l00094"></a>00094     <span class="keywordtype">int</span> GetNumSymmetries() <span class="keyword">const</span>;
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 
<a name="l00101"></a>00101     <span class="keywordtype">void</span> SetNumberOfPoints(<span class="keywordtype">int</span> nx, <span class="keywordtype">int</span> ny, <span class="keywordtype">int</span> nz);
<a name="l00106"></a>00106     <span class="keywordtype">void</span> SetLimits(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;origin, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;x, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;y,
<a name="l00107"></a>00107                    <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1vector3.shtml" title="Represents a vector in 3-dimensional real space.">vector3</a> &amp;z);
<a name="l00110"></a>00110     <span class="keywordtype">void</span> SetLimits(<span class="keyword">const</span> <span class="keywordtype">double</span> origin[3], <span class="keyword">const</span> <span class="keywordtype">double</span> x[3], <span class="keyword">const</span> <span class="keywordtype">double</span> y[3],
<a name="l00111"></a>00111                    <span class="keyword">const</span> <span class="keywordtype">double</span> z[3]);
<a name="l00113"></a>00113     <span class="keywordtype">bool</span> SetValue(<span class="keywordtype">int</span> i, <span class="keywordtype">int</span> j, <span class="keywordtype">int</span> k, <span class="keywordtype">double</span> val);
<a name="l00115"></a>00115     <span class="keywordtype">void</span> SetValues(<span class="keyword">const</span> std::vector&lt; double &gt;&amp; v);
<a name="l00117"></a>00117     <span class="keywordtype">void</span> SetUnit(Unit u);
<a name="l00119"></a>00119     <span class="keywordtype">void</span> SetUnrestricted(<span class="keywordtype">bool</span> u);
<a name="l00121"></a>00121     <span class="keywordtype">void</span> SetNumSymmetries(<span class="keywordtype">int</span> s);
<a name="l00123"></a>00123 
<a name="l00124"></a>00124   <span class="keyword">private</span>:
<a name="l00125"></a>00125     GridDataPrivate *<span class="keyword">const</span> d;
<a name="l00126"></a>00126 
<a name="l00127"></a>00127   };
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 } <span class="comment">// end namespace</span>
<a name="l00130"></a>00130 
<a name="l00131"></a>00131 <span class="preprocessor">#endif </span><span class="comment">/*OBGRIDDATA_H_*/</span>
<a name="l00132"></a>00132 
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
