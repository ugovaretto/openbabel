<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>lineend.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">lineend.h</div>  </div>
</div>
<div class="contents">
<a href="lineend_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">lineend.h - Stream buffer for filtering line endings, converting \r or \r\n -&gt; \n</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment"> Copyright (C) 1998 by James Kanze</span>
<a name="l00005"></a>00005 <span class="comment"> Copyright (C) 2007 by Chris Morley</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00008"></a>00008 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00009"></a>00009 <span class="comment"></span>
<a name="l00010"></a>00010 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">This program is distributed in the hope that it will be useful, but</span>
<a name="l00015"></a>00015 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00017"></a>00017 <span class="comment">General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment">***********************************************************************/</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef OB_LINEEND_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define OB_LINEEND_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;streambuf&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;climits&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#ifndef OBCONV</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span><span class="preprocessor">#define OBCONV</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00029"></a>00029 <span class="preprocessor"></span>
<a name="l00030"></a>00030 <span class="keyword">namespace </span>OpenBabel
<a name="l00031"></a>00031 {
<a name="l00032"></a>00032 
<a name="l00058"></a>00058   <span class="keyword">template</span>&lt; <span class="keyword">class</span> Extractor &gt;
<a name="l00059"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml">00059</a>   <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml" title="Delivers characters from an istream or streambuf from a source while filtering.">FilteringInputStreambuf</a> : <span class="keyword">public</span> std::streambuf
<a name="l00060"></a>00060   {
<a name="l00061"></a>00061   <span class="keyword">public</span>:
<a name="l00062"></a>00062     <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a5286eeeb41318332c62b76dbf0f05430">FilteringInputStreambuf</a>(
<a name="l00063"></a>00063       std::streambuf*        source = NULL ,
<a name="l00064"></a>00064       <span class="keywordtype">bool</span>                   deleteWhenFinished = <span class="keyword">false</span>
<a name="l00065"></a>00065       ) ;
<a name="l00066"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a848f7550d0280c87631b47f76c715013">00066</a>     <span class="keyword">virtual</span>                 <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a848f7550d0280c87631b47f76c715013">~FilteringInputStreambuf</a>()
<a name="l00067"></a>00067     {
<a name="l00068"></a>00068       <span class="comment">//sync(); comment out so can be deleted in OBConversion destructor</span>
<a name="l00069"></a>00069     };
<a name="l00070"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a71cbc6b1ec560d3788dac4c02e9328da">00070</a>     <span class="keyword">virtual</span> <span class="keywordtype">int</span>              <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a71cbc6b1ec560d3788dac4c02e9328da">overflow</a>( <span class="keywordtype">int</span> ) {<span class="keywordflow">return</span> EOF;};
<a name="l00071"></a>00071     <span class="keyword">virtual</span> <span class="keywordtype">int</span>              <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a175cdf589e167db22f30ccacdf98e007">underflow</a>() ;
<a name="l00072"></a>00072     <span class="keyword">virtual</span> <span class="keywordtype">int</span>              <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a553fc1343cc7a747775864d1d124a5d5">sync</a>() ;
<a name="l00073"></a>00073 
<a name="l00074"></a>00074     <span class="comment">//Pass the random acess functions to the source rdbuf and synchronize</span>
<a name="l00075"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#aea680f1e3476af107476e375aaac4b6d">00075</a>     <span class="keyword">virtual</span> std::streampos   <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#aea680f1e3476af107476e375aaac4b6d">seekoff</a>(std::streamoff off, std::ios_base::seekdir way,
<a name="l00076"></a>00076       std::ios_base::openmode which = std::ios_base::in | std::ios_base::out )
<a name="l00077"></a>00077     {
<a name="l00078"></a>00078       std::streampos ret = mySource-&gt;pubseekoff(off, way, which);
<a name="l00079"></a>00079 <span class="comment">//      sync();</span>
<a name="l00080"></a>00080       <span class="keywordflow">return</span> ret;
<a name="l00081"></a>00081     };
<a name="l00082"></a>00082 
<a name="l00083"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a9f073109a0b2c593a7c63967869c366d">00083</a>     <span class="keyword">virtual</span> std::streampos   <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a9f073109a0b2c593a7c63967869c366d">seekpos</a>(std::streampos sp,
<a name="l00084"></a>00084       std::ios_base::openmode which = std::ios_base::in | std::ios_base::out )
<a name="l00085"></a>00085     {
<a name="l00086"></a>00086       std::streampos ret = mySource-&gt;pubseekpos(sp, which);
<a name="l00087"></a>00087 <span class="comment">//      sync();</span>
<a name="l00088"></a>00088       <span class="keywordflow">return</span> ret;
<a name="l00089"></a>00089     };
<a name="l00090"></a>00090 
<a name="l00092"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#aaa1ca82e0fba738f10a36f892007a114">00092</a>     std::streambuf* <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#aaa1ca82e0fba738f10a36f892007a114" title="Returns current source.">GetSource</a>()<span class="keyword">const</span>
<a name="l00093"></a>00093 <span class="keyword">    </span>{
<a name="l00094"></a>00094       <span class="keywordflow">return</span> mySource;
<a name="l00095"></a>00095     };
<a name="l00096"></a>00096 
<a name="l00098"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#ab8629df5351a87a231c5e95e5518dc4b">00098</a>     <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#ab8629df5351a87a231c5e95e5518dc4b" title="Changes the source.">SetSource</a>(std::streambuf* newsource)
<a name="l00099"></a>00099     {
<a name="l00100"></a>00100       mySource = newsource;
<a name="l00101"></a>00101       setg( &amp;myBuffer , &amp;myBuffer , &amp;myBuffer + 1 ) ;
<a name="l00102"></a>00102     }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 <span class="comment">//    Extractor&amp;   extractor() {return myExtractor;};</span>
<a name="l00105"></a>00105 
<a name="l00106"></a>00106   <span class="keyword">private</span>:
<a name="l00107"></a>00107     std::streambuf*          mySource ;
<a name="l00108"></a>00108     Extractor                myExtractor ;
<a name="l00109"></a>00109     <span class="keywordtype">char</span>                     myBuffer ;
<a name="l00110"></a>00110     <span class="keywordtype">bool</span>                     myDeleteWhenFinished ;
<a name="l00111"></a>00111   } ;
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="comment">//*******************************************************</span>
<a name="l00114"></a>00114   <span class="keyword">template</span>&lt; <span class="keyword">class</span> Extractor &gt;
<a name="l00115"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a5286eeeb41318332c62b76dbf0f05430">00115</a>   <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a5286eeeb41318332c62b76dbf0f05430">FilteringInputStreambuf&lt; Extractor &gt;::FilteringInputStreambuf</a>(
<a name="l00116"></a>00116     std::streambuf*        source ,
<a name="l00117"></a>00117     <span class="keywordtype">bool</span>                   deleteWhenFinished)
<a name="l00118"></a>00118     : mySource(source), myDeleteWhenFinished(deleteWhenFinished)
<a name="l00119"></a>00119   {
<a name="l00120"></a>00120     setg( &amp;myBuffer , &amp;myBuffer , &amp;myBuffer ) ;
<a name="l00121"></a>00121   }
<a name="l00122"></a>00122 
<a name="l00124"></a>00124   <span class="keyword">template</span>&lt; <span class="keyword">class</span> Extractor &gt;
<a name="l00125"></a>00125   <span class="keywordtype">int</span>
<a name="l00126"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a175cdf589e167db22f30ccacdf98e007">00126</a>   <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a175cdf589e167db22f30ccacdf98e007">FilteringInputStreambuf&lt; Extractor &gt;::underflow</a>()
<a name="l00127"></a>00127   {
<a name="l00128"></a>00128     <span class="keywordtype">int</span> result( EOF ) ;
<a name="l00129"></a>00129     <span class="keywordflow">if</span>( gptr() &lt; egptr() )
<a name="l00130"></a>00130       result = *gptr() ;
<a name="l00131"></a>00131     <span class="keywordflow">else</span> <span class="keywordflow">if</span> ( mySource != NULL )
<a name="l00132"></a>00132     {
<a name="l00133"></a>00133       result = myExtractor( *mySource ) ;
<a name="l00134"></a>00134       <span class="keywordflow">if</span> ( result != EOF )
<a name="l00135"></a>00135       {
<a name="l00136"></a>00136         <span class="keywordflow">if</span>( result &lt; 0 || result &gt; UCHAR_MAX )
<a name="l00137"></a>00137           std::cerr &lt;&lt; <span class="stringliteral">&quot;FilteringInputStreambuf error&quot;</span> &lt;&lt; std::endl;
<a name="l00138"></a>00138         myBuffer = result ;
<a name="l00139"></a>00139         setg( &amp;myBuffer , &amp;myBuffer , &amp;myBuffer + 1 ) ;
<a name="l00140"></a>00140       }
<a name="l00141"></a>00141     }
<a name="l00142"></a>00142     <span class="keywordflow">return</span> result ;
<a name="l00143"></a>00143   }
<a name="l00144"></a>00144 
<a name="l00146"></a>00146   <span class="keyword">template</span>&lt; <span class="keyword">class</span> Extractor &gt;
<a name="l00147"></a>00147   <span class="keywordtype">int</span>
<a name="l00148"></a><a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a553fc1343cc7a747775864d1d124a5d5">00148</a>   <a class="code" href="classOpenBabel_1_1FilteringInputStreambuf.shtml#a553fc1343cc7a747775864d1d124a5d5">FilteringInputStreambuf&lt; Extractor &gt;::sync</a>()
<a name="l00149"></a>00149   {
<a name="l00150"></a>00150     <span class="keywordtype">int</span> result( 0 ) ;
<a name="l00151"></a>00151     <span class="keywordflow">if</span> ( mySource != NULL )
<a name="l00152"></a>00152     {
<a name="l00153"></a>00153       <span class="keywordflow">if</span> ( gptr() &lt; egptr() )
<a name="l00154"></a>00154       {
<a name="l00155"></a>00155         result = mySource-&gt;sputbackc( *gptr() ) ;
<a name="l00156"></a>00156         setg( NULL , NULL , NULL ) ;
<a name="l00157"></a>00157       }
<a name="l00158"></a>00158       <span class="keywordflow">if</span> ( mySource-&gt;pubsync() == EOF )
<a name="l00159"></a>00159           result = EOF ;
<a name="l00160"></a>00160     }
<a name="l00161"></a>00161     <span class="keywordflow">return</span> result ;
<a name="l00162"></a>00162   }
<a name="l00163"></a>00163 
<a name="l00164"></a>00164 <span class="comment">//*********************************************</span>
<a name="l00167"></a><a class="code" href="classOpenBabel_1_1LineEndingExtractor.shtml">00167</a> <span class="comment"></span><span class="keyword">class </span>OBCONV <a class="code" href="classOpenBabel_1_1LineEndingExtractor.shtml" title="Replaces CRLF (DOS) and CR (Mac OS 9) line endings by LF (POSIX)">LineEndingExtractor</a>
<a name="l00168"></a>00168 {
<a name="l00169"></a>00169 <span class="keyword">public</span>:
<a name="l00170"></a><a class="code" href="classOpenBabel_1_1LineEndingExtractor.shtml#ae1607763657353932b1be8b2909371b6">00170</a>   <span class="keywordtype">int</span> operator()( std::streambuf&amp; src )
<a name="l00171"></a>00171   {
<a name="l00172"></a>00172     <span class="keywordtype">int</span> ch( src.sbumpc() ) ;
<a name="l00173"></a>00173     <span class="keywordflow">switch</span> (ch)
<a name="l00174"></a>00174     {
<a name="l00175"></a>00175       <span class="keywordflow">case</span> 13: <span class="comment">//CR or CRLF</span>
<a name="l00176"></a>00176         <span class="keywordflow">if</span>(src.sgetc() == 10)
<a name="l00177"></a>00177           src.sbumpc(); <span class="comment">//CRLF</span>
<a name="l00178"></a>00178         <span class="comment">//fall through</span>
<a name="l00179"></a>00179       <span class="keywordflow">case</span> 10: <span class="comment">//LF</span>
<a name="l00180"></a>00180         <span class="keywordflow">return</span> <span class="charliteral">&#39;\n&#39;</span>;
<a name="l00181"></a>00181         <span class="keywordflow">break</span>;
<a name="l00182"></a>00182       <span class="keywordflow">default</span>:
<a name="l00183"></a>00183         <span class="keywordflow">return</span> ch;
<a name="l00184"></a>00184     }
<a name="l00185"></a>00185   }
<a name="l00186"></a><a class="code" href="classOpenBabel_1_1LineEndingExtractor.shtml#a1d0aa4bfb893ffbd31600926710db47d">00186</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1LineEndingExtractor.shtml#a1d0aa4bfb893ffbd31600926710db47d">finalize</a>( std::streambuf&amp; ) {}
<a name="l00187"></a>00187 };
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 } <span class="comment">//namespace</span>
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 <span class="preprocessor">#endif //OB_LINEEND_H</span>
<a name="l00192"></a>00192 <span class="preprocessor"></span>
<a name="l00193"></a>00193 
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:06 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
