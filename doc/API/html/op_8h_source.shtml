<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>op.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">op.h</div>  </div>
</div>
<div class="contents">
<a href="op_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">op.h - plugin options or operations</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2007 by Chris Morley</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"></span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful, but</span>
<a name="l00014"></a>00014 <span class="comment">WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>
<a name="l00016"></a>00016 <span class="comment">General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_OP_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_OP_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;<a class="code" href="plugin_8h.shtml" title="Simplify &#39;plugin&#39; classes to be discovered and/or loaded at runtime.">openbabel/plugin.h</a>&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="base_8h.shtml" title="Base classes to build a graph.">openbabel/base.h</a>&gt;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="keyword">namespace </span>OpenBabel
<a name="l00029"></a>00029 {
<a name="l00030"></a>00030   <span class="keyword">class </span>OBConversion; <span class="comment">//used only as a pointer</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="comment">// Class introduction below</span>
<a name="l00033"></a><a class="code" href="classOpenBabel_1_1OBOp.shtml">00033</a> <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBOp.shtml" title="Operations to modify molecules before output.">OBOp</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBPlugin.shtml" title="Base class for all types of dynamic classes discovered at runtime.">OBPlugin</a>
<a name="l00034"></a>00034 {
<a name="l00035"></a>00035   <a class="code" href="group__plugins.shtml#gadd740e2a386b7db3e1f0e271cbe8a3f1">MAKE_PLUGIN</a>(<a class="code" href="classOpenBabel_1_1OBOp.shtml" title="Operations to modify molecules before output.">OBOp</a>);
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keyword">public</span>:
<a name="l00038"></a><a class="code" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">00038</a>   <span class="keyword">typedef</span> <span class="keyword">const</span> std::map&lt;std::string, std::string&gt; <a class="code" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a> ;
<a name="l00039"></a>00039 
<a name="l00041"></a><a class="code" href="classOpenBabel_1_1OBOp.shtml#a45dfda1fb13d3c26ab7f8f7631e3351c">00041</a>   <span class="keyword">virtual</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OBOp.shtml#a45dfda1fb13d3c26ab7f8f7631e3351c" title="Provides the name of this kind of plugin. Use -L &quot;ops&quot; to list from commandline.">TypeID</a>(){ <span class="keywordflow">return</span> <span class="stringliteral">&quot;ops&quot;</span>; }
<a name="l00042"></a>00042 
<a name="l00044"></a>00044   <span class="comment">//NOTE: the parameters were changed in r3532</span>
<a name="l00045"></a>00045   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Do(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* pOb, <span class="keyword">const</span> <span class="keywordtype">char</span>* OptionText=NULL, OpMap* pOptions=NULL, <a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv=NULL)=0;
<a name="l00046"></a>00046 
<a name="l00048"></a>00048   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> WorksWith(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* pOb)<span class="keyword">const</span>=0;
<a name="l00049"></a>00049 
<a name="l00051"></a><a class="code" href="classOpenBabel_1_1OBOp.shtml#ad3d67611882dee42047de32adf603602">00051</a>   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBOp.shtml#ad3d67611882dee42047de32adf603602" title="Do something with an array of objects. Used a a callback routine in OpSort, etc.">ProcessVec</a>(std::vector&lt;OBBase*&gt;&amp; <span class="comment">/* vec */</span>){ <span class="keywordflow">return</span> <span class="keyword">false</span>; }
<a name="l00052"></a>00052 
<a name="l00054"></a><a class="code" href="classOpenBabel_1_1OBOp.shtml#a64e598f68f30107a74319b9fc6d26cd0">00054</a>   <span class="keyword">static</span> std::string OpOptions(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* pOb)
<a name="l00055"></a>00055   {
<a name="l00056"></a>00056     std::string s;
<a name="l00057"></a>00057     <a class="code" href="group__plugins.shtml#ga8fac85f5497f873a2dd8734b47f0bdc0">OBPlugin::PluginIterator</a> itr;
<a name="l00058"></a>00058     <span class="keywordflow">for</span>(itr=<a class="code" href="group__plugins.shtml#ga1d4d73999ab0518ee471c635bd0a7e87">OBPlugin::Begin</a>(<span class="stringliteral">&quot;ops&quot;</span>);itr!=<a class="code" href="group__plugins.shtml#ga9a330280c1cd2e7119dac87a6fd0b762">OBPlugin::End</a>(<span class="stringliteral">&quot;ops&quot;</span>);++itr)
<a name="l00059"></a>00059     {
<a name="l00060"></a>00060       <a class="code" href="classOpenBabel_1_1OBOp.shtml" title="Operations to modify molecules before output.">OBOp</a>* pOp = <span class="keyword">dynamic_cast&lt;</span><a class="code" href="classOpenBabel_1_1OBOp.shtml" title="Operations to modify molecules before output.">OBOp</a>*<span class="keyword">&gt;</span>(itr-&gt;second);
<a name="l00061"></a>00061        <span class="comment">//ignore ops with IDs that begin with &#39;_&#39; or have &quot;not displayed in GUI&quot; in their first line of description</span>
<a name="l00062"></a>00062       <span class="keywordflow">if</span>(*(itr-&gt;first)==<span class="charliteral">&#39;_&#39;</span>
<a name="l00063"></a>00063         || <a class="code" href="group__plugins.shtml#ga84fc973fdf4bba5a6b0e2d402077991c" title="Utility function to return only the first line of a string.">OBPlugin::FirstLine</a>(pOp-&gt;<a class="code" href="group__plugins.shtml#ga4a6b8d1611d5d963fc29982cc1ebcbf7" title="Required description of a sub-type.">Description</a>()).find(<span class="stringliteral">&quot;not displayed in GUI&quot;</span>)!=std::string::npos)
<a name="l00064"></a>00064         <span class="keywordflow">continue</span>;
<a name="l00065"></a>00065       <span class="keywordflow">if</span>(pOp &amp;&amp; pOp-&gt;<a class="code" href="classOpenBabel_1_1OBOp.shtml#a841238ff5ff03c1c9341dea0105469c6">WorksWith</a>(pOb))
<a name="l00066"></a>00066       {
<a name="l00067"></a>00067         s += <span class="stringliteral">&quot;--&quot;</span>;
<a name="l00068"></a>00068         s += itr-&gt;first; <span class="comment">//ID</span>
<a name="l00069"></a>00069         s += <span class="charliteral">&#39; &#39;</span>;
<a name="l00070"></a>00070         s += <a class="code" href="group__plugins.shtml#ga84fc973fdf4bba5a6b0e2d402077991c" title="Utility function to return only the first line of a string.">OBPlugin::FirstLine</a>(pOp-&gt;<a class="code" href="group__plugins.shtml#ga4a6b8d1611d5d963fc29982cc1ebcbf7" title="Required description of a sub-type.">Description</a>()) + <span class="charliteral">&#39;\n&#39;</span>;
<a name="l00071"></a>00071       }
<a name="l00072"></a>00072     }
<a name="l00073"></a>00073     s += <span class="charliteral">&#39;\n&#39;</span>;
<a name="l00074"></a>00074     <span class="keywordflow">return</span> s;
<a name="l00075"></a>00075   }
<a name="l00076"></a>00076 
<a name="l00082"></a><a class="code" href="classOpenBabel_1_1OBOp.shtml#a139b43c8cee15687f02550c031e558d7">00082</a>   <span class="keyword">static</span> <span class="keywordtype">bool</span> DoOps(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* pOb, <a class="code" href="classOpenBabel_1_1OBOp.shtml#a4e98002937e35472f2b829eaf98913d3">OpMap</a>* pOptions, <a class="code" href="classOpenBabel_1_1OBConversion.shtml" title="Class to convert from one format to another.">OBConversion</a>* pConv)
<a name="l00083"></a>00083   {
<a name="l00084"></a>00084     OpMap::const_iterator itr;
<a name="l00085"></a>00085     <span class="keywordflow">for</span>(itr=pOptions-&gt;begin();itr!=pOptions-&gt;end();++itr)
<a name="l00086"></a>00086     {
<a name="l00087"></a>00087       <a class="code" href="classOpenBabel_1_1OBOp.shtml" title="Operations to modify molecules before output.">OBOp</a>* pOp = FindType(itr-&gt;first.c_str());
<a name="l00088"></a>00088       <span class="keywordflow">if</span>(pOp)
<a name="l00089"></a>00089         <span class="keywordflow">if</span>(!pOp-&gt;<a class="code" href="classOpenBabel_1_1OBOp.shtml#ad1f068b2923689e4c4c48a76a3e885e4" title="Required function that does the work. Normally return true, unless object is not to be output...">Do</a>(pOb, itr-&gt;second.c_str(), pOptions, pConv))
<a name="l00090"></a>00090           <span class="keywordflow">return</span> <span class="keyword">false</span>; <span class="comment">//Op has decided molecule should not be output</span>
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00093"></a>00093   }
<a name="l00094"></a>00094 };
<a name="l00095"></a>00095 
<a name="l00138"></a>00138 }<span class="comment">//namespace</span>
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 <span class="preprocessor">#endif</span>
<a name="l00141"></a>00141 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:07 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
