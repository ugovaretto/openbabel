<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>reaction.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">reaction.h</div>  </div>
</div>
<div class="contents">
<a href="reaction_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">reaction.h - Handle chemical reactions (i.e., lists of reagents and products).</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 2005 by Chris Morley</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00012"></a>00012 <span class="comment"></span>
<a name="l00013"></a>00013 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00014"></a>00014 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00015"></a>00015 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00016"></a>00016 <span class="comment">GNU General Public License for more details.</span>
<a name="l00017"></a>00017 <span class="comment">***********************************************************************/</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 <span class="preprocessor">#ifndef OB_REACT_H</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span><span class="preprocessor">#define OB_REACT_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;<a class="code" href="shared__ptr_8h.shtml" title="Shared pointer.">openbabel/shared_ptr.h</a>&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel)...">openbabel/mol.h</a>&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="keyword">namespace </span>OpenBabel
<a name="l00027"></a>00027 {
<a name="l00028"></a>00028 
<a name="l00035"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml">00035</a> <span class="keyword">class </span><a class="code" href="classOpenBabel_1_1OBReaction.shtml" title="Used to store chemical reactions (i.e., reactants -&gt; products)">OBReaction</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>
<a name="l00036"></a>00036 {
<a name="l00037"></a>00037 <span class="keyword">private</span>:
<a name="l00038"></a>00038   std::vector&lt;shared_ptr&lt;OBMol&gt; &gt; _reactants;
<a name="l00039"></a>00039   std::vector&lt;shared_ptr&lt;OBMol&gt; &gt; _products;
<a name="l00040"></a>00040   shared_ptr&lt;OBMol&gt; _ts;
<a name="l00041"></a>00041   shared_ptr&lt;OBMol&gt; _agent;
<a name="l00042"></a>00042   std::string _title;
<a name="l00043"></a>00043   std::string _comment;
<a name="l00044"></a>00044   <span class="keywordtype">bool</span> _reversible;
<a name="l00045"></a>00045 <span class="keyword">public</span>:
<a name="l00046"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#ad4146c04740bf08485bdea0a457015b0">00046</a>   <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ad4146c04740bf08485bdea0a457015b0">OBReaction</a>() : _reversible(false)
<a name="l00047"></a>00047   {}
<a name="l00048"></a>00048 
<a name="l00049"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a98af182824f0924e7582c98a7252b89f">00049</a>   <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a98af182824f0924e7582c98a7252b89f">NumReactants</a>()<span class="keyword"> const</span>
<a name="l00050"></a>00050 <span class="keyword">  </span>{ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span> (_reactants.size()); }
<a name="l00051"></a>00051 
<a name="l00052"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#ade31c5d085eac99f304d8f93c0f8a68a">00052</a>   <span class="keywordtype">int</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ade31c5d085eac99f304d8f93c0f8a68a">NumProducts</a>()<span class="keyword">const</span>
<a name="l00053"></a>00053 <span class="keyword">  </span>{ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span> (_products.size()); }
<a name="l00054"></a>00054 
<a name="l00055"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a4171118b3e4bf11e9b2d13d93eae3e8b">00055</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a4171118b3e4bf11e9b2d13d93eae3e8b">AddReactant</a>(<span class="keyword">const</span> shared_ptr&lt;OBMol&gt; sp)
<a name="l00056"></a>00056   { _reactants.push_back(sp); }
<a name="l00057"></a>00057 
<a name="l00058"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#acbd47ab999f149265823af35f27ad787">00058</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#acbd47ab999f149265823af35f27ad787">AddProduct</a>(<span class="keyword">const</span> shared_ptr&lt;OBMol&gt; sp)
<a name="l00059"></a>00059   { _products.push_back(sp); }
<a name="l00060"></a>00060 
<a name="l00061"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a2186438986f347ffe3c9746d075781c4">00061</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a2186438986f347ffe3c9746d075781c4">SetTransitionState</a>(<span class="keyword">const</span> shared_ptr&lt;OBMol&gt; sp)
<a name="l00062"></a>00062   { _ts = sp; }
<a name="l00063"></a>00063 
<a name="l00064"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a19792b954ce336496b82309eb6c0746f">00064</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a19792b954ce336496b82309eb6c0746f">AddAgent</a>(<span class="keyword">const</span> shared_ptr&lt;OBMol&gt; sp)
<a name="l00065"></a>00065   { _agent = sp; }
<a name="l00066"></a>00066 
<a name="l00067"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#acb36f72353ba8b8c1ebe6ac8001708f1">00067</a>   shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#acb36f72353ba8b8c1ebe6ac8001708f1">GetReactant</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> i)
<a name="l00068"></a>00068   {
<a name="l00069"></a>00069     shared_ptr&lt;OBMol&gt; sp;
<a name="l00070"></a>00070     <span class="keywordflow">if</span>(i&lt;_reactants.size())
<a name="l00071"></a>00071       sp = _reactants[i];
<a name="l00072"></a>00072     <span class="keywordflow">return</span> sp; <span class="comment">//returns empty if out of range</span>
<a name="l00073"></a>00073   }
<a name="l00074"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#aee9da7b864a095ddc7b6d94b10aaf447">00074</a>   shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#aee9da7b864a095ddc7b6d94b10aaf447">GetProduct</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> i)
<a name="l00075"></a>00075   {
<a name="l00076"></a>00076     shared_ptr&lt;OBMol&gt; sp;
<a name="l00077"></a>00077     <span class="keywordflow">if</span>(i&lt;_products.size())
<a name="l00078"></a>00078       sp = _products[i];
<a name="l00079"></a>00079     <span class="keywordflow">return</span> sp; <span class="comment">//returns empty if out of range</span>
<a name="l00080"></a>00080   }
<a name="l00081"></a>00081 
<a name="l00082"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a365dfe016a68767a312d77519abae9c5">00082</a>   shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a365dfe016a68767a312d77519abae9c5">GetTransitionState</a>()<span class="keyword">const</span>
<a name="l00083"></a>00083 <span class="keyword">  </span>{ <span class="keywordflow">return</span> _ts; }
<a name="l00084"></a>00084 
<a name="l00085"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a5e0a1d7c68077cd8ed5b5a41132459e1">00085</a>   shared_ptr&lt;OBMol&gt; <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a5e0a1d7c68077cd8ed5b5a41132459e1">GetAgent</a>()<span class="keyword">const</span>
<a name="l00086"></a>00086 <span class="keyword">  </span>{ <span class="keywordflow">return</span> _agent; }
<a name="l00087"></a>00087 
<a name="l00088"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a85cb18896dd69857181b9f0fee289f53">00088</a>   std::string <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a85cb18896dd69857181b9f0fee289f53">GetTitle</a>()<span class="keyword">        const </span>{ <span class="keywordflow">return</span> _title; }
<a name="l00089"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a756028b52b8e0945201426d53a80b47a">00089</a>   std::string <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a756028b52b8e0945201426d53a80b47a">GetComment</a>()<span class="keyword">      const </span>{ <span class="keywordflow">return</span> _comment; }
<a name="l00090"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a54294c70e5c7d4e8edacbdde65a07ab3">00090</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a54294c70e5c7d4e8edacbdde65a07ab3">SetTitle</a>(<span class="keyword">const</span> std::string&amp; title) { _title=title; }
<a name="l00091"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a172c10e306c608ed9687a06d065dcf7d">00091</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a172c10e306c608ed9687a06d065dcf7d">SetComment</a>(<span class="keyword">const</span> std::string&amp; comment) { _comment=comment; }
<a name="l00092"></a>00092 
<a name="l00093"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#affd0e8a81e6376c7af13d9265170bb93">00093</a>   <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#affd0e8a81e6376c7af13d9265170bb93">IsReversible</a>()<span class="keyword"> const       </span>{<span class="keywordflow">return</span> _reversible;}
<a name="l00094"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#ab8592aab9b061be89f1d86e642d748b4">00094</a>   <span class="keywordtype">void</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ab8592aab9b061be89f1d86e642d748b4">SetReversible</a>(<span class="keywordtype">bool</span> b=<span class="keyword">true</span>) {_reversible=b;}
<a name="l00095"></a>00095 
<a name="l00096"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">00096</a>   <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classOpenBabel_1_1OBReaction.shtml#a6bb6ed5c064e3957d8dd03aba51e61f7">ClassDescription</a>()
<a name="l00097"></a>00097   {
<a name="l00098"></a>00098     <span class="keywordflow">return</span> <span class="stringliteral">&quot; reactions\n&quot;</span>;
<a name="l00099"></a>00099   }
<a name="l00100"></a>00100 
<a name="l00101"></a><a class="code" href="classOpenBabel_1_1OBReaction.shtml#ad12fd937da5f4b0c4562888252fe214b">00101</a>   <span class="keywordtype">bool</span> <a class="code" href="classOpenBabel_1_1OBReaction.shtml#ad12fd937da5f4b0c4562888252fe214b" title="Clear any and all data associated with this object.">Clear</a>()
<a name="l00102"></a>00102   {
<a name="l00103"></a>00103     _reactants.clear();
<a name="l00104"></a>00104     _products.clear();
<a name="l00105"></a>00105     _ts.reset();
<a name="l00106"></a>00106     _agent.reset();
<a name="l00107"></a>00107     _title.clear();
<a name="l00108"></a>00108     _comment.clear();
<a name="l00109"></a>00109     _reversible = <span class="keyword">false</span>;
<a name="l00110"></a>00110     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00111"></a>00111   }
<a name="l00112"></a>00112 };
<a name="l00113"></a>00113 
<a name="l00114"></a>00114 
<a name="l00115"></a>00115 } <span class="comment">//namespace OpenBabel</span>
<a name="l00116"></a>00116 <span class="preprocessor">#endif</span>
<a name="l00117"></a>00117 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:08 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
