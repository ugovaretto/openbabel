<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>rotamer.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">rotamer.h</div>  </div>
</div>
<div class="contents">
<a href="rotamer_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">rotamer.h - Handle rotamer list data.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 1998-2000 by OpenEye Scientific Software, Inc.</span>
<a name="l00005"></a>00005 <span class="comment">Some portions Copyright (C) 2001-2006 by Geoffrey R. Hutchison</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00008"></a>00008 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00009"></a>00009 <span class="comment"></span>
<a name="l00010"></a>00010 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment">***********************************************************************/</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef OB_ROTAMER_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define OB_ROTAMER_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;<a class="code" href="mol_8h.shtml" title="Handle molecules. Declarations of OBMol, OBAtom, OBBond, OBResidue. (the main header for Open Babel)...">openbabel/mol.h</a>&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="rotor_8h.shtml" title="Rotate torsional according to rotor rules.">openbabel/rotor.h</a>&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="generic_8h.shtml" title="Handle generic data classes. Custom data for atoms, bonds, etc.">openbabel/generic.h</a>&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">namespace </span>OpenBabel
<a name="l00031"></a>00031 {
<a name="l00032"></a>00032 
<a name="l00034"></a>00034   <span class="comment">// Further class introduction in rotamer.cpp</span>
<a name="l00035"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml">00035</a>  <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRotamerList.shtml" title="Supports a set of rotamer coordinate sets for some number of potentially rotatable bonds...">OBRotamerList</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>
<a name="l00036"></a>00036   {
<a name="l00038"></a>00038     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                         _NBaseCoords;
<a name="l00040"></a>00040     std::vector&lt;double*&gt;                 _c;
<a name="l00042"></a>00042     std::vector&lt;std::pair&lt;OBAtom**,std::vector&lt;int&gt; &gt; &gt; _vrotor;
<a name="l00045"></a>00045     std::vector&lt;std::vector&lt;double&gt; &gt;    _vres;
<a name="l00047"></a>00047     std::vector&lt;unsigned char*&gt;          _vrotamer;
<a name="l00048"></a>00048 
<a name="l00049"></a>00049     <span class="comment">/*Because contains OBAtom*, these aren&#39;t meaningful without knowing the parent molecule</span>
<a name="l00050"></a>00050 <span class="comment">      OBRotamerList(const OBRotamerList &amp;cpy) : OBGenericData(cpy)</span>
<a name="l00051"></a>00051 <span class="comment">      {}</span>
<a name="l00052"></a>00052 <span class="comment">      OBRotamerList&amp; operator =(const OBRotamerList &amp;)</span>
<a name="l00053"></a>00053 <span class="comment">      {</span>
<a name="l00054"></a>00054 <span class="comment">      return *this;</span>
<a name="l00055"></a>00055 <span class="comment">      }</span>
<a name="l00056"></a>00056 <span class="comment">                */</span>
<a name="l00057"></a>00057 
<a name="l00058"></a>00058   <span class="keyword">public</span>:
<a name="l00059"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#aa1cef5a8affd0b0f75891495f1674805">00059</a>     <a class="code" href="classOpenBabel_1_1OBRotamerList.shtml" title="Supports a set of rotamer coordinate sets for some number of potentially rotatable bonds...">OBRotamerList</a>()
<a name="l00060"></a>00060       {
<a name="l00061"></a>00061         _NBaseCoords=0;
<a name="l00062"></a>00062         _type= <a class="code" href="namespaceOpenBabel_1_1OBGenericDataType.shtml#a06fc87d81c62e9abb8790b6e5713c55ba6792a664f1614a75f33128e139392ef1" title="Information for generating &amp; manipulating rotamers, i.e. OBRotamerList.">OBGenericDataType::RotamerList</a>;
<a name="l00063"></a>00063         _attr=<span class="stringliteral">&quot;RotamerList&quot;</span>;
<a name="l00064"></a>00064       }
<a name="l00065"></a>00065                 <span class="keyword">virtual</span> <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>* Clone(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a>* parent) <span class="keyword">const</span>;
<a name="l00066"></a>00066 
<a name="l00067"></a>00067     ~<a class="code" href="classOpenBabel_1_1OBRotamerList.shtml" title="Supports a set of rotamer coordinate sets for some number of potentially rotatable bonds...">OBRotamerList</a>();
<a name="l00069"></a>00069     <span class="keywordtype">void</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;,<a class="code" href="classOpenBabel_1_1OBRotorList.shtml" title="Given an OBMol, set up a list of possibly rotatable torsions,.">OBRotorList</a>&amp;);
<a name="l00074"></a>00074     <span class="keywordtype">void</span> Setup(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol,<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*ref,<span class="keywordtype">int</span> nrotors);
<a name="l00076"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#abccb611f60719e4ec9acf271a5aa934d">00076</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> NumRotors()<span class="keyword">   const</span>
<a name="l00077"></a>00077 <span class="keyword">    </span>{
<a name="l00078"></a>00078       <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)_vrotor.size();
<a name="l00079"></a>00079     }
<a name="l00081"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#a747209e491f2149ac86230cf6c3bd146">00081</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> NumRotamers()<span class="keyword"> const</span>
<a name="l00082"></a>00082 <span class="keyword">    </span>{
<a name="l00083"></a>00083       <span class="keywordflow">return</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)_vrotamer.size();
<a name="l00084"></a>00084     }
<a name="l00086"></a>00086     <span class="keywordtype">void</span> AddRotamer(<span class="keywordtype">double</span>*);
<a name="l00088"></a>00088     <span class="keywordtype">void</span> AddRotamer(<span class="keywordtype">int</span> *key);
<a name="l00090"></a>00090     <span class="keywordtype">void</span> AddRotamer(std::vector&lt;int&gt; key);
<a name="l00092"></a>00092     <span class="keywordtype">void</span> AddRotamer(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *key);
<a name="l00094"></a>00094     <span class="keywordtype">void</span> AddRotamers(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *arr,<span class="keywordtype">int</span> nconf);
<a name="l00096"></a>00096     <span class="keywordtype">void</span> GetReferenceArray(<span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*) <span class="keyword">const</span>;
<a name="l00097"></a>00097 
<a name="l00099"></a>00099 
<a name="l00100"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#a2948e1a74f2c22c575d6ddc6643f6ef1">00100</a>     std::vector&lt;unsigned char*&gt;::iterator BeginRotamer()
<a name="l00101"></a>00101       {
<a name="l00102"></a>00102         <span class="keywordflow">return</span> _vrotamer.begin();
<a name="l00103"></a>00103       }
<a name="l00104"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#a589d2df01c6f3e1cb1bf95b25e804409">00104</a>     std::vector&lt;unsigned char*&gt;::iterator EndRotamer()
<a name="l00105"></a>00105       {
<a name="l00106"></a>00106         <span class="keywordflow">return</span> _vrotamer.end();
<a name="l00107"></a>00107       }
<a name="l00109"></a>00109 
<a name="l00112"></a>00112     std::vector&lt;double*&gt; CreateConformerList(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp; mol);
<a name="l00113"></a>00113 
<a name="l00116"></a>00116     <span class="keywordtype">void</span> ExpandConformerList(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;mol,std::vector&lt;double*&gt;&amp; confs);
<a name="l00117"></a>00117 
<a name="l00118"></a>00118     <span class="keywordtype">void</span> SetCurrentCoordinates(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;mol, std::vector&lt;int&gt; arr);
<a name="l00119"></a>00119 
<a name="l00122"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#a91c3efe37db1542a2f553440143915f9">00122</a>     <span class="keywordtype">void</span> SetBaseCoordinateSets(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp; mol)
<a name="l00123"></a>00123     {
<a name="l00124"></a>00124       SetBaseCoordinateSets(mol.<a class="code" href="classOpenBabel_1_1OBMol.shtml#a5246a44bf82aa31c2f428665db94bfb8">GetConformers</a>(), mol.<a class="code" href="classOpenBabel_1_1OBMol.shtml#a0c317a10161689c407f29a6fcacdb852">NumAtoms</a>());
<a name="l00125"></a>00125     }
<a name="l00126"></a>00126 
<a name="l00128"></a>00128 
<a name="l00131"></a>00131     <span class="keywordtype">void</span> SetBaseCoordinateSets(std::vector&lt;double*&gt; bc, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> N);
<a name="l00132"></a>00132 
<a name="l00134"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#a11ab9cdfece6567dfc4db629cddd0a93">00134</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> NumBaseCoordinateSets()<span class="keyword"> const</span>
<a name="l00135"></a>00135 <span class="keyword">    </span>{
<a name="l00136"></a>00136       <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span><span class="keyword">&gt;</span> (_c.size());
<a name="l00137"></a>00137     }
<a name="l00138"></a>00138 
<a name="l00140"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#adbaf9eeafb825763acadfc785220412a">00140</a>     <span class="keywordtype">double</span> *GetBaseCoordinateSet(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i)<span class="keyword"> const</span>
<a name="l00141"></a>00141 <span class="keyword">    </span>{
<a name="l00142"></a>00142       <span class="keywordflow">return</span> (i&lt;_c.size()) ? _c[i] : NULL;
<a name="l00143"></a>00143     }
<a name="l00144"></a>00144 
<a name="l00146"></a><a class="code" href="classOpenBabel_1_1OBRotamerList.shtml#a0c317a10161689c407f29a6fcacdb852">00146</a>     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> NumAtoms()<span class="keyword"> const</span>
<a name="l00147"></a>00147 <span class="keyword">    </span>{
<a name="l00148"></a>00148       <span class="keywordflow">return</span> _NBaseCoords;
<a name="l00149"></a>00149     }
<a name="l00150"></a>00150   };
<a name="l00151"></a>00151 
<a name="l00153"></a>00153   <span class="keywordtype">int</span> <a class="code" href="namespaceOpenBabel.shtml#a8b1ba3c73d4038fd69729fbeb588008a" title="Swap Byte instruction (i.e., handle transfers between endian forms)">Swab</a>(<span class="keywordtype">int</span>);
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 }
<a name="l00156"></a>00156 
<a name="l00157"></a>00157 <span class="preprocessor">#endif // OB_ROTAMER_H</span>
<a name="l00158"></a>00158 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:08 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
