<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>squareplanar.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">squareplanar.h</div>  </div>
</div>
<div class="contents">
<a href="squareplanar_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">  squareplanar.h - Class for handling and storing squareplanar stereochemistry.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">  Copyright (C) 2009-2010 by Tim Vandermeersch</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">  This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">  For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">  This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">  it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">  the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00012"></a>00012 <span class="comment">  (at your option) any later version.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">  This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">  GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment"></span>
<a name="l00019"></a>00019 <span class="comment">  You should have received a copy of the GNU General Public License</span>
<a name="l00020"></a>00020 <span class="comment">  along with this program; if not, write to the Free Software</span>
<a name="l00021"></a>00021 <span class="comment">  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span>
<a name="l00022"></a>00022 <span class="comment">  02110-1301, USA.</span>
<a name="l00023"></a>00023 <span class="comment"> **********************************************************************/</span>
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef OB_SQUAREPLANAR_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#define OB_SQUAREPLANAR_H</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="tetraplanar_8h.shtml" title="Base class for handling and storing planar stereochemistry with 4 reference atoms.">openbabel/stereo/tetraplanar.h</a>&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">namespace </span>OpenBabel {
<a name="l00031"></a>00031 
<a name="l00034"></a>00034 
<a name="l00048"></a><a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml">00048</a> <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml" title="Class for handling and storing square planar stereochemistry.">OBSquarePlanarStereo</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBTetraPlanarStereo.shtml" title="Base class for handling and storing planar stereochemistry with 4 reference atoms.">OBTetraPlanarStereo</a>
<a name="l00049"></a>00049 {
<a name="l00050"></a>00050   <span class="keyword">public</span>:
<a name="l00070"></a>00070 <span class="preprocessor">#ifndef SWIG</span>
<a name="l00071"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml">00071</a> <span class="preprocessor"></span>    <span class="keyword">struct </span>OBAPI <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml" title="Stereochemical configuration for square planar stereocenters.">Config</a>
<a name="l00072"></a>00072     {
<a name="l00077"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a539a941e29cde8d13e413c515d9801cd">00077</a>       <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml" title="Stereochemical configuration for square planar stereocenters.">Config</a>() : center(<a class="code" href="structOpenBabel_1_1OBStereo.shtml" title="Placeholder for enums &amp; Ref/Refs related functions.">OBStereo</a>::NoRef), shape(<a class="code" href="structOpenBabel_1_1OBStereo.shtml" title="Placeholder for enums &amp; Ref/Refs related functions.">OBStereo</a>::ShapeU),
<a name="l00078"></a>00078           specified(true)
<a name="l00079"></a>00079       {  }
<a name="l00087"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3932e85a5b2cc866ab349584485a5b1c">00087</a>       <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml" title="Stereochemical configuration for square planar stereocenters.">Config</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> _center, <span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;_refs,
<a name="l00088"></a>00088           <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> _shape = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>) : center(_center),
<a name="l00089"></a>00089           refs(_refs), shape(_shape), specified(true)
<a name="l00090"></a>00090       {  }
<a name="l00155"></a>00155       <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ac001b331f648fbbd8590576f59d4d2ab">operator==</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml" title="Stereochemical configuration for square planar stereocenters.">Config</a> &amp;other) <span class="keyword">const</span>;
<a name="l00161"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3f058aa3902997deaaefc72fe0355477">00161</a>       <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml" title="Stereochemical configuration for square planar stereocenters.">Config</a> &amp;other)<span class="keyword"> const</span>
<a name="l00162"></a>00162 <span class="keyword">      </span>{
<a name="l00163"></a>00163         <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);
<a name="l00164"></a>00164       }
<a name="l00165"></a>00165 
<a name="l00170"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">00170</a>       <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>; <span class="comment">//&lt;! The central atom id.</span>
<a name="l00171"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">00171</a>       <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1" title="The 4 reference ids.">refs</a>; 
<a name="l00172"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85">00172</a>       <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#a77f6538bd30b4203bd2b2bba33c28c85" title="The shape of the 4 reference ids.">shape</a>; 
<a name="l00173"></a><a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">00173</a>       <span class="keywordtype">bool</span> specified; 
<a name="l00174"></a>00174 
<a name="l00175"></a>00175 
<a name="l00176"></a>00176     };
<a name="l00177"></a>00177 <span class="preprocessor">#endif</span>
<a name="l00178"></a>00178 <span class="preprocessor"></span>
<a name="l00181"></a>00181     <a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml" title="Class for handling and storing square planar stereochemistry.">OBSquarePlanarStereo</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> *mol);
<a name="l00185"></a>00185     <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml" title="Class for handling and storing square planar stereochemistry.">OBSquarePlanarStereo</a>();
<a name="l00186"></a>00186 
<a name="l00189"></a>00189 
<a name="l00193"></a><a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml#a25d3547525ae04f2769c976552a55b34">00193</a>     <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1d1cfd8ffb84e947f82999c682b666a7">OBStereo::Type</a> <a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml#a25d3547525ae04f2769c976552a55b34">GetType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1d1cfd8ffb84e947f82999c682b666a7a793d15fd6e6d225fcddc0cf4b65259d3" title="Square-planar stereochemistry.">OBStereo::SquarePlanar</a>; }
<a name="l00198"></a>00198     <span class="keywordtype">bool</span> IsValid() <span class="keyword">const</span>;
<a name="l00199"></a>00199 
<a name="l00203"></a>00203 <span class="preprocessor">#ifndef SWIG</span>
<a name="l00204"></a>00204 <span class="preprocessor"></span>    <span class="keywordtype">void</span> SetConfig(<span class="keyword">const</span> Config &amp;config);
<a name="l00208"></a>00208     Config GetConfig(<a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> shape = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>) <span class="keyword">const</span>;
<a name="l00213"></a>00213     Config GetConfig(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> start,
<a name="l00214"></a>00214         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37c">OBStereo::Shape</a> shape = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a55b506070847a13554f8b879c1bfb37ca0ab366e13e0cfd59ccb06cd77b673bca">OBStereo::ShapeU</a>) <span class="keyword">const</span>;
<a name="l00215"></a>00215 <span class="preprocessor">#endif</span>
<a name="l00216"></a>00216 <span class="preprocessor"></span>
<a name="l00222"></a>00222     <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ac001b331f648fbbd8590576f59d4d2ab">operator==</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml" title="Class for handling and storing square planar stereochemistry.">OBSquarePlanarStereo</a> &amp;other) <span class="keyword">const</span>;
<a name="l00228"></a><a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml#ac0773f2ca467c400db0a32bf809dbd9f">00228</a>     <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml" title="Class for handling and storing square planar stereochemistry.">OBSquarePlanarStereo</a> &amp;other)<span class="keyword"> const</span>
<a name="l00229"></a>00229 <span class="keyword">    </span>{
<a name="l00230"></a>00230       <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);
<a name="l00231"></a>00231     }
<a name="l00233"></a>00233 
<a name="l00234"></a>00234     <span class="comment">/*</span>
<a name="l00235"></a>00235 <span class="comment">     * Implement OBGenericData::Clone().</span>
<a name="l00236"></a>00236 <span class="comment">     */</span>
<a name="l00237"></a>00237     <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>* Clone(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a> *mol) <span class="keyword">const</span>;
<a name="l00238"></a>00238 
<a name="l00240"></a>00240 
<a name="l00241"></a>00241 
<a name="l00244"></a>00244     <span class="keywordtype">bool</span> IsTrans(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> id1, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> id2) <span class="keyword">const</span>;
<a name="l00248"></a>00248     <span class="keywordtype">bool</span> IsCis(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> id1, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> id2) <span class="keyword">const</span>;
<a name="l00253"></a>00253     <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> GetTransRef(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">id</span>) <span class="keyword">const</span>;
<a name="l00257"></a>00257     std::vector&lt;unsigned long&gt; GetCisRefs(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">id</span>) <span class="keyword">const</span>;
<a name="l00259"></a>00259 
<a name="l00260"></a>00260   <span class="keyword">private</span>:
<a name="l00261"></a>00261     Config m_cfg; 
<a name="l00262"></a>00262     <span class="comment">// The following function sits behind GetCisRef and GetTransRef</span>
<a name="l00263"></a>00263     <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> GetCisOrTransRef(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">id</span>, <span class="keywordtype">bool</span> getcisref) <span class="keyword">const</span>;
<a name="l00264"></a>00264 };
<a name="l00266"></a>00266 <span class="comment">// end addtogroup doxygen</span>
<a name="l00267"></a>00267 
<a name="l00268"></a>00268 } <span class="comment">// namespace OpenBabel</span>
<a name="l00269"></a>00269 
<a name="l00270"></a>00270 <span class="preprocessor">#ifndef SWIG</span>
<a name="l00271"></a>00271 <span class="preprocessor"></span><span class="keyword">namespace </span>std {
<a name="l00272"></a>00272 
<a name="l00275"></a>00275 
<a name="l00291"></a>00291 OBAPI ostream&amp; <a class="code" href="namespaceOpenBabel.shtml#a70c653ee69fdbd27f77d430e4aed3cad" title="Prints a representation of the vector as a row vector of the form &quot;&lt;0.1,1,2&gt;&quot;.">operator&lt;&lt;</a>(ostream &amp;out, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBSquarePlanarStereo.shtml" title="Class for handling and storing square planar stereochemistry.">OpenBabel::OBSquarePlanarStereo</a> &amp;ct);
<a name="l00305"></a>00305 OBAPI ostream&amp; <a class="code" href="namespaceOpenBabel.shtml#a70c653ee69fdbd27f77d430e4aed3cad" title="Prints a representation of the vector as a row vector of the form &quot;&lt;0.1,1,2&gt;&quot;.">operator&lt;&lt;</a>(ostream &amp;out, <span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBSquarePlanarStereo_1_1Config.shtml" title="Stereochemical configuration for square planar stereocenters.">OpenBabel::OBSquarePlanarStereo::Config</a> &amp;cfg);
<a name="l00306"></a>00306 
<a name="l00308"></a>00308 
<a name="l00309"></a>00309 } <span class="comment">// namespace std</span>
<a name="l00310"></a>00310 <span class="preprocessor">#endif // Not SWIG</span>
<a name="l00311"></a>00311 <span class="preprocessor"></span>
<a name="l00312"></a>00312 <span class="preprocessor">#endif</span>
<a name="l00313"></a>00313 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:08 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
