<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>OBTetrahedralStereo::Config Struct Reference</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.shtml"><span>Classes</span></a></li>
      <li><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.shtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.shtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.shtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.shtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="namespaceOpenBabel.shtml">OpenBabel</a>      </li>
      <li class="navelem"><a class="el" href="classOpenBabel_1_1OBTetrahedralStereo.shtml">OBTetrahedralStereo</a>      </li>
      <li class="navelem"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">OBTetrahedralStereo::Config Struct Reference</div>  </div>
</div>
<div class="contents">
<!-- doxytag: class="OpenBabel::OBTetrahedralStereo::Config" -->
<p><code>#include &lt;<a class="el" href="tetrahedral_8h_source.shtml">openbabel/stereo/tetrahedral.h</a>&gt;</code></p>

<p><a href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config-members.shtml">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a539a941e29cde8d13e413c515d9801cd">Config</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a1410755ad2d5b4c0f3a6b9f0c9f04789">Config</a> (unsigned long _center, unsigned long from_or_towards, const <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;_refs, <a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> _winding=OBStereo::Clockwise, <a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> _view=OBStereo::ViewFrom)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a929278c4f025d8340ab65d86696386e4">operator==</a> (const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;other) const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3f058aa3902997deaaefc72fe0355477">operator!=</a> (const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;other) const </td></tr>
<tr><td colspan="2"><h2><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">towards</a></td></tr>
<tr><td colspan="2"><div class="groupHeader">Data members defining stereochemistry.</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a></td></tr>
<tr><td class="memItemLeft" >union {</td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;unsigned long&#160;&#160;&#160;<a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a></td></tr>
<tr><td class="memItemLeft" >&#160;&#160;&#160;unsigned long&#160;&#160;&#160;<a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">towards</a></td></tr>
<tr><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184">view</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Stereochemical configuration for tetrahedral stereocenters. </p>
<p>The config struct represents the stereochemistry in a well defined way. For tetrahedral stereo centers, the following data members define the special orientation of the atoms:</p>
<ul>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> <code>center:</code> Atom id of the stereogenic center atom.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> <code>from/towards</code>: Atom id (or <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aba01db17f4a2bfbc3db60dc172972a25a02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...).">OBStereo::ImplicitRef</a>) for the atom to view from/towards.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <code>refs:</code> The three remaining atom ids (may also contain one <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aba01db17f4a2bfbc3db60dc172972a25a7295d9aeb6e0e6f3a5b77aa0ce7ed0db" title="No Ref set (invalid Ref)">OBStereo::NoRef</a> element if from/towards is set to a real atom id).</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> <code>view:</code> Specify the viewing from or towards the atom with <code>from/towards</code> id.</li>
<li><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> <code>winding:</code> Clockwise or AntiClockwise (order in the Refs <code>refs</code> list)</li>
</ul>
<div class="image">
<img src="tetrahedral.png" alt="tetrahedral.png"/>
</div>
<p>Only <code>center</code> is specific for <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">OBTetrahedralStereo::Config</a>. The other data members occur in all <a class="el" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml" title="Base class for handling and storing non-planar stereochemistry with 4 reference atom ids...">OBTetraNonPlanarStereo</a> derived classes. </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a539a941e29cde8d13e413c515d9801cd"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::Config" ref="a539a941e29cde8d13e413c515d9801cd" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Default constructor. Initializes the <code>from/torards</code> and <code>center</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aba01db17f4a2bfbc3db60dc172972a25a7295d9aeb6e0e6f3a5b77aa0ce7ed0db" title="No Ref set (invalid Ref)">OBStereo::NoRef</a>, the <code>winding</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7" title="Clockwise winding.">OBStereo::Clockwise</a> and <code>view</code> to <a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e" title="view from the atom (id parameter) towards the center atom">OBStereo::ViewFrom</a>. </p>

</div>
</div>
<a class="anchor" id="a1410755ad2d5b4c0f3a6b9f0c9f04789"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::Config" ref="a1410755ad2d5b4c0f3a6b9f0c9f04789" args="(unsigned long _center, unsigned long from_or_towards, const OBStereo::Refs &amp;_refs, OBStereo::Winding _winding=OBStereo::Clockwise, OBStereo::View _view=OBStereo::ViewFrom)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>_center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>from_or_towards</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;&#160;</td>
          <td class="paramname"><em>_refs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a>&#160;</td>
          <td class="paramname"><em>_winding</em> = <code>OBStereo::Clockwise</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a>&#160;</td>
          <td class="paramname"><em>_view</em> = <code>OBStereo::ViewFrom</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Constructor with all parameters.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">_center</td><td>The center (chiral) atom id. </td></tr>
    <tr><td class="paramname">from_or_towards</td><td>The atom id from which to view or view towards (see <code>view</code>). </td></tr>
    <tr><td class="paramname">_refs</td><td>The 3 reference ids. </td></tr>
    <tr><td class="paramname">_winding</td><td>The winding for the 3 ids in <code>_refs</code>. </td></tr>
    <tr><td class="paramname">_view</td><td>Specify viewing from or towards the atom with <code>from_or_towards</code> id. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a929278c4f025d8340ab65d86696386e4"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::operator==" ref="a929278c4f025d8340ab65d86696386e4" args="(const Config &amp;other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Equal to operator. Comparing <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">OBTetrahedralStereo::Config</a> structs is done using the information stored in the struct's data members (i.e. <code>view</code>, <code>winding</code>, <code>from/towards</code> and <code>refs</code>).</p>
<p>There are a number of cases resuling in false being returned:</p>
<ul>
<li>The centers don't match.</li>
<li>One of the Refs lists does not contain 3 elements.</li>
<li>2 or more <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aba01db17f4a2bfbc3db60dc172972a25a02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...).">OBStereo::ImplicitRef</a> values in a single <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> struct</li>
</ul>
<p>When either <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> struct is unspecified (i.e. the stereochemistry implied is accidental), true is returned.</p>
<p>It doesn't matter if the two <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> structs use the same view, same from/towards Ref or the same winding. All needed conversions will be carried out automatically (see OBTetraNonPlanerStereo::ToConfig). These conversions ensure the spacial orientation of the 4 groups remains unchanged.</p>
<p>Another key feature is the ability to comapre <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> structs regardless of implicit (<a class="el" href="structOpenBabel_1_1OBStereo.shtml#aba01db17f4a2bfbc3db60dc172972a25a02b1798105615b9c057d777fd19f1015" title="Implicit Ref (i.e. hydrogen, N lone pair, ...).">OBStereo::ImplicitRef</a>) or explicit hydrogens. This is best illustrated with some examples. In these examples the same ref has already been selected as from/towards atom and both use the same winding and view direction. We will focus on how the three remaining refs are interpreted.</p>
<div class="fragment"><pre class="fragment">
         234 == 234 // true
         2H4 == 234 // 3 is missing, must be the implicit --&gt; 234 == 234 // true
         2H4 == 243 // same as above, but now 234 == 243 // false
         234 == H34 // 2 is missing, must be implicit --&gt; 234 == 234 // true
       </pre></div><p>By comparing the second and third example above, it can be clearly seen that the value of 1 Ref can actually be ignored. It's position in the sequence (or the winding) is defined by the two explicit Ref values.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>True if both <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> structs represent the same stereochemistry. </dd></dl>

</div>
</div>
<a class="anchor" id="a3f058aa3902997deaaefc72fe0355477"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::operator!=" ref="a3f058aa3902997deaaefc72fe0355477" args="(const Config &amp;other) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">Config</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const<code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Not equal to operator. This is the inverse of the Equal to operator==.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>True if the two <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> structs represent a different stereochemistry. </dd></dl>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a822b3ed2ceea391277903da02d1fd0a2"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::center" ref="a822b3ed2ceea391277903da02d1fd0a2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, <a class="el" href="classOpenBabel_1_1OBBuilder.shtml#a568e42fdfa07962a14761bb9875ee138">OBBuilder::CorrectStereoAtoms()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a class="anchor" id="a3237fb5e8bbcbececce85cb5d85195b6"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::from" ref="a3237fb5e8bbcbececce85cb5d85195b6" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a class="anchor" id="aa88a28c7375e3d579bb0c28ef8a1cb57"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::towards" ref="aa88a28c7375e3d579bb0c28ef8a1cb57" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">towards</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a725d858b5acde11b8bcc4af55d42dbba"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::@17" ref="a725d858b5acde11b8bcc4af55d42dbba" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union { ... } </td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This anonymous union helps to keep code clean. Both the <code>from</code> and <code>towards</code> data members contain the same <a class="el" href="structOpenBabel_1_1OBStereo.shtml#aff913cc7d694153b33e2b3ac168a6350">OBStereo::Ref</a> (same memory address) but can be used interchangeably to match the context of the code. The real viewing direction is specified by the <code>view</code> data member. </p>

</div>
</div>
<a class="anchor" id="a3e3f2a8fefc9f694040bbb8685cb61e1"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::refs" ref="a3e3f2a8fefc9f694040bbb8685cb61e1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">refs</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The 3 reference ids. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ea32436f7428861ff7d4543570f4451"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::winding" ref="a4ea32436f7428861ff7d4543570f4451" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a class="anchor" id="a3a41b22504236f1bc6908201a3289184"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::view" ref="a3a41b22504236f1bc6908201a3289184" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184">view</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Specify viewing from or towards the atom with <code>from/towards</code> id. </p>

<p>Referenced by <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<a class="anchor" id="ad137707f900f599f5f403d9639e2aec3"></a><!-- doxytag: member="OpenBabel::OBTetrahedralStereo::Config::specified" ref="ad137707f900f599f5f403d9639e2aec3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">specified</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>True if the stereochemistry is specified. When false, the described special orientation is only accidental (i.e. unspecified). </p>

<p>Referenced by <a class="el" href="namespaceOpenBabel.shtml#a62d602f9ffb93ae1f37c2d3bbf010d77">OpenBabel::CanonicalLabels()</a>, and <a class="el" href="classOpenBabel_1_1OBSmartsMatcher.shtml#a1d4c0074445aa349628c1d417794581b">OBSmartsMatcher::match()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li><a class="el" href="tetrahedral_8h_source.shtml">tetrahedral.h</a></li>
</ul>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:11 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
