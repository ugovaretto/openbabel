<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>tetrahedral.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">tetrahedral.h</div>  </div>
</div>
<div class="contents">
<a href="tetrahedral_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">  tetrahedral.h - OBTetrahedralStereo</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">  Copyright (C) 2009 by Tim Vandermeersch</span>
<a name="l00005"></a>00005 <span class="comment"></span>
<a name="l00006"></a>00006 <span class="comment">  This file is part of the Open Babel project.</span>
<a name="l00007"></a>00007 <span class="comment">  For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00008"></a>00008 <span class="comment"></span>
<a name="l00009"></a>00009 <span class="comment">  This program is free software; you can redistribute it and/or modify</span>
<a name="l00010"></a>00010 <span class="comment">  it under the terms of the GNU General Public License as published by</span>
<a name="l00011"></a>00011 <span class="comment">  the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00012"></a>00012 <span class="comment">  (at your option) any later version.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">  This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">  GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment"></span>
<a name="l00019"></a>00019 <span class="comment">  You should have received a copy of the GNU General Public License</span>
<a name="l00020"></a>00020 <span class="comment">  along with this program; if not, write to the Free Software</span>
<a name="l00021"></a>00021 <span class="comment">  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span>
<a name="l00022"></a>00022 <span class="comment">  02110-1301, USA.</span>
<a name="l00023"></a>00023 <span class="comment"> **********************************************************************/</span>
<a name="l00024"></a>00024 <span class="preprocessor">#ifndef OB_TETRAHEDRAL_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span><span class="preprocessor">#define OB_TETRAHEDRAL_H</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;<a class="code" href="tetranonplanar_8h.shtml" title="Base class for handling and storing non-planar stereochemistry with 4 reference atom ids...">openbabel/stereo/tetranonplanar.h</a>&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">namespace </span>OpenBabel {
<a name="l00030"></a>00030 
<a name="l00033"></a>00033 
<a name="l00058"></a><a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml">00058</a> <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml" title="Class for handling and storing tetrahedral atom stereochemistry.">OBTetrahedralStereo</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBTetraNonPlanarStereo.shtml" title="Base class for handling and storing non-planar stereochemistry with 4 reference atom ids...">OBTetraNonPlanarStereo</a>
<a name="l00059"></a>00059 {
<a name="l00060"></a>00060   <span class="keyword">public</span>:
<a name="l00061"></a>00061 <span class="preprocessor">#ifndef SWIG</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span>
<a name="l00084"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml">00084</a>     <span class="keyword">struct </span>OBAPI <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a>
<a name="l00085"></a>00085     {
<a name="l00091"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a539a941e29cde8d13e413c515d9801cd">00091</a>       <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a>() : center(<a class="code" href="structOpenBabel_1_1OBStereo.shtml" title="Placeholder for enums &amp; Ref/Refs related functions.">OBStereo</a>::NoRef), from(<a class="code" href="structOpenBabel_1_1OBStereo.shtml" title="Placeholder for enums &amp; Ref/Refs related functions.">OBStereo</a>::NoRef),
<a name="l00092"></a>00092           winding(<a class="code" href="structOpenBabel_1_1OBStereo.shtml" title="Placeholder for enums &amp; Ref/Refs related functions.">OBStereo</a>::Clockwise), view(<a class="code" href="structOpenBabel_1_1OBStereo.shtml" title="Placeholder for enums &amp; Ref/Refs related functions.">OBStereo</a>::ViewFrom),
<a name="l00093"></a>00093           specified(true)
<a name="l00094"></a>00094       {  }
<a name="l00104"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a1410755ad2d5b4c0f3a6b9f0c9f04789">00104</a>       <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> _center, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> from_or_towards,
<a name="l00105"></a>00105           <span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> &amp;_refs, <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> _winding = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7" title="Clockwise winding.">OBStereo::Clockwise</a>,
<a name="l00106"></a>00106           <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> _view = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e" title="view from the atom (id parameter) towards the center atom">OBStereo::ViewFrom</a>) : center(_center),
<a name="l00107"></a>00107           from(from_or_towards), refs(_refs), winding(_winding), view(_view),
<a name="l00108"></a>00108           specified(true)
<a name="l00109"></a>00109       {  }
<a name="l00149"></a>00149       <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ac001b331f648fbbd8590576f59d4d2ab">operator==</a>(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> &amp;other) <span class="keyword">const</span>;
<a name="l00155"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3f058aa3902997deaaefc72fe0355477">00155</a>       <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">Config</a> &amp;other)<span class="keyword"> const</span>
<a name="l00156"></a>00156 <span class="keyword">      </span>{
<a name="l00157"></a>00157         <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);
<a name="l00158"></a>00158       }
<a name="l00159"></a>00159 
<a name="l00164"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">00164</a>       <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a822b3ed2ceea391277903da02d1fd0a2">center</a>; <span class="comment">//&lt;! The center (chiral) atom id.</span>
<a name="l00172"></a>00172 <span class="comment"></span>      <span class="keyword">union </span>{
<a name="l00173"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">00173</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3237fb5e8bbcbececce85cb5d85195b6">from</a>; <span class="comment">//&lt;! The viewing from atom id.</span>
<a name="l00174"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">00174</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#aa88a28c7375e3d579bb0c28ef8a1cb57">towards</a>; <span class="comment">//&lt;! The viewing towards id.</span>
<a name="l00175"></a>00175       };
<a name="l00176"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1">00176</a>       <a class="code" href="structOpenBabel_1_1OBStereo.shtml#aa6d4491769cb9af32f3ea22e9f9a66c4">OBStereo::Refs</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3e3f2a8fefc9f694040bbb8685cb61e1" title="The 3 reference ids.">refs</a>; 
<a name="l00177"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">00177</a>       <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a4ea32436f7428861ff7d4543570f4451">winding</a>; <span class="comment">//&lt;! The winding for the 3 reference ids.</span>
<a name="l00178"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184">00178</a>       <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#a3a41b22504236f1bc6908201a3289184" title="Specify viewing from or towards the atom with from/towards id.">view</a>; 
<a name="l00179"></a><a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml#ad137707f900f599f5f403d9639e2aec3">00179</a>       <span class="keywordtype">bool</span> specified; 
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 
<a name="l00182"></a>00182     };
<a name="l00183"></a>00183 <span class="preprocessor">#endif</span>
<a name="l00184"></a>00184 <span class="preprocessor"></span>
<a name="l00187"></a>00187     <a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml" title="Class for handling and storing tetrahedral atom stereochemistry.">OBTetrahedralStereo</a>(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> *mol);
<a name="l00191"></a>00191     <span class="keyword">virtual</span> ~<a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml" title="Class for handling and storing tetrahedral atom stereochemistry.">OBTetrahedralStereo</a>();
<a name="l00192"></a>00192 
<a name="l00195"></a>00195 
<a name="l00199"></a><a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml#a25d3547525ae04f2769c976552a55b34">00199</a>     <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1d1cfd8ffb84e947f82999c682b666a7">OBStereo::Type</a> <a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml#a25d3547525ae04f2769c976552a55b34">GetType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="structOpenBabel_1_1OBStereo.shtml#a1d1cfd8ffb84e947f82999c682b666a7a398755acaa38c780e5a4dc5db1c205be" title="tetrahedral">OBStereo::Tetrahedral</a>; }
<a name="l00204"></a>00204     <span class="keywordtype">bool</span> IsValid() <span class="keyword">const</span>;
<a name="l00205"></a>00205 <span class="preprocessor">#ifndef SWIG</span>
<a name="l00206"></a>00206 <span class="preprocessor"></span>
<a name="l00209"></a>00209     <span class="keywordtype">void</span> SetConfig(<span class="keyword">const</span> Config &amp;config);
<a name="l00213"></a>00213     Config GetConfig(<a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> winding = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7" title="Clockwise winding.">OBStereo::Clockwise</a>,
<a name="l00214"></a>00214         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> view = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e" title="view from the atom (id parameter) towards the center atom">OBStereo::ViewFrom</a>) <span class="keyword">const</span>;
<a name="l00218"></a>00218     Config GetConfig(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> from_or_towards,
<a name="l00219"></a>00219         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31">OBStereo::Winding</a> winding = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#ac3e0e8e3a194037cdf6103a95a1c6d31adc82829d52b935bb1ba087f98f44dac7" title="Clockwise winding.">OBStereo::Clockwise</a>,
<a name="l00220"></a>00220         <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7">OBStereo::View</a> view = <a class="code" href="structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7ad67cd67454910029af59ecf137366d0e" title="view from the atom (id parameter) towards the center atom">OBStereo::ViewFrom</a>) <span class="keyword">const</span>;
<a name="l00221"></a>00221 <span class="preprocessor">#endif</span>
<a name="l00222"></a>00222 <span class="preprocessor"></span>
<a name="l00228"></a>00228     <span class="keywordtype">bool</span> <a class="code" href="namespaceOpenBabel.shtml#ac001b331f648fbbd8590576f59d4d2ab">operator==</a>(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml" title="Class for handling and storing tetrahedral atom stereochemistry.">OBTetrahedralStereo</a> &amp;other) <span class="keyword">const</span>;
<a name="l00234"></a><a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml#af7131dc819715522744c42ab9fb30df8">00234</a>     <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml" title="Class for handling and storing tetrahedral atom stereochemistry.">OBTetrahedralStereo</a> &amp;other)<span class="keyword"> const</span>
<a name="l00235"></a>00235 <span class="keyword">    </span>{
<a name="l00236"></a>00236       <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);
<a name="l00237"></a>00237     }
<a name="l00239"></a>00239 
<a name="l00240"></a>00240     <span class="comment">/*</span>
<a name="l00241"></a>00241 <span class="comment">     * Implement OBGenericData::Clone().</span>
<a name="l00242"></a>00242 <span class="comment">     */</span>
<a name="l00243"></a>00243     <a class="code" href="classOpenBabel_1_1OBGenericData.shtml" title="Base class for generic data.">OBGenericData</a>* Clone(<a class="code" href="classOpenBabel_1_1OBBase.shtml" title="Base Class.">OBBase</a> *mol) <span class="keyword">const</span>;
<a name="l00244"></a>00244   <span class="keyword">private</span>:
<a name="l00245"></a>00245     Config m_cfg; 
<a name="l00246"></a>00246 };
<a name="l00248"></a>00248 <span class="comment">// end addtogroup doxygen</span>
<a name="l00249"></a>00249 
<a name="l00250"></a>00250 } <span class="comment">// namespace OpenBabel</span>
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="preprocessor">#ifndef SWIG</span>
<a name="l00253"></a>00253 <span class="preprocessor"></span><span class="keyword">namespace </span>std {
<a name="l00254"></a>00254 
<a name="l00257"></a>00257 
<a name="l00275"></a>00275 OBAPI ostream&amp; <a class="code" href="namespaceOpenBabel.shtml#a70c653ee69fdbd27f77d430e4aed3cad" title="Prints a representation of the vector as a row vector of the form &quot;&lt;0.1,1,2&gt;&quot;.">operator&lt;&lt;</a>(ostream &amp;out, <span class="keyword">const</span> <a class="code" href="classOpenBabel_1_1OBTetrahedralStereo.shtml" title="Class for handling and storing tetrahedral atom stereochemistry.">OpenBabel::OBTetrahedralStereo</a> &amp;ts);
<a name="l00291"></a>00291 OBAPI ostream&amp; <a class="code" href="namespaceOpenBabel.shtml#a70c653ee69fdbd27f77d430e4aed3cad" title="Prints a representation of the vector as a row vector of the form &quot;&lt;0.1,1,2&gt;&quot;.">operator&lt;&lt;</a>(ostream &amp;out, <span class="keyword">const</span> <a class="code" href="structOpenBabel_1_1OBTetrahedralStereo_1_1Config.shtml" title="Stereochemical configuration for tetrahedral stereocenters.">OpenBabel::OBTetrahedralStereo::Config</a> &amp;cfg);
<a name="l00292"></a>00292 
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 } <span class="comment">// namespace std</span>
<a name="l00296"></a>00296 <span class="preprocessor">#endif // SWIG</span>
<a name="l00297"></a>00297 <span class="preprocessor"></span>
<a name="l00298"></a>00298 <span class="preprocessor">#endif</span>
<a name="l00299"></a>00299 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:08 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
