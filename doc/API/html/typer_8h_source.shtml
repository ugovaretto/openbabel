<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head><meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>typer.h Source File</title>
<link href="/site.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="search/search.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
</head>

<body>

<!--#include file="header.html" -->
<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.shtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.shtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.shtml"><span>Modules</span></a></li>
      <li><a href="namespaces.shtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.shtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.shtml"><span>Files</span></a></li>
      <li><a href="examples.shtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.shtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.shtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">typer.h</div>  </div>
</div>
<div class="contents">
<a href="typer_8h.shtml">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**********************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">typer.h - Open Babel atom and aromaticity typer.</span>
<a name="l00003"></a>00003 <span class="comment"></span>
<a name="l00004"></a>00004 <span class="comment">Copyright (C) 1998-2001 by OpenEye Scientific Software, Inc.</span>
<a name="l00005"></a>00005 <span class="comment">Some portions Copyright (C) 2001-2005 by Geoffrey R. Hutchison</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">This file is part of the Open Babel project.</span>
<a name="l00008"></a>00008 <span class="comment">For more information, see &lt;http://openbabel.org/&gt;</span>
<a name="l00009"></a>00009 <span class="comment"></span>
<a name="l00010"></a>00010 <span class="comment">This program is free software; you can redistribute it and/or modify</span>
<a name="l00011"></a>00011 <span class="comment">it under the terms of the GNU General Public License as published by</span>
<a name="l00012"></a>00012 <span class="comment">the Free Software Foundation version 2 of the License.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">This program is distributed in the hope that it will be useful,</span>
<a name="l00015"></a>00015 <span class="comment">but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00016"></a>00016 <span class="comment">MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00017"></a>00017 <span class="comment">GNU General Public License for more details.</span>
<a name="l00018"></a>00018 <span class="comment">***********************************************************************/</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef OB_TYPER_H</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define OB_TYPER_H</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;openbabel/babelconfig.h&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="parsmart_8h.shtml" title="Daylight SMARTS parser.">openbabel/parsmart.h</a>&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;<a class="code" href="data_8h.shtml" title="Global data and resource file parsers.">openbabel/data.h</a>&gt;</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keyword">namespace </span>OpenBabel
<a name="l00032"></a>00032 {
<a name="l00033"></a>00033 
<a name="l00034"></a>00034   <span class="comment">// Forward declaration</span>
<a name="l00035"></a>00035   <span class="keyword">class </span>OBSmartsPattern;
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="comment">// class introduction in typer.cpp</span>
<a name="l00038"></a><a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml">00038</a> <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges.">OBAtomTyper</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files.">OBGlobalDataBase</a>
<a name="l00039"></a>00039 {
<a name="l00040"></a>00040   <span class="comment">//    int                                                      _rc;</span>
<a name="l00041"></a>00041   std::vector&lt;std::vector&lt;int&gt; &gt;                           _mlist; 
<a name="l00042"></a>00042   std::vector&lt;std::pair&lt;OBSmartsPattern*,int&gt; &gt;            _vinthyb; 
<a name="l00043"></a>00043   std::vector&lt;std::pair&lt;OBSmartsPattern*,int&gt; &gt;            _vimpval; 
<a name="l00044"></a>00044   std::vector&lt;std::pair&lt;OBSmartsPattern*,std::string&gt; &gt;    _vexttyp; 
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="keyword">public</span>:
<a name="l00047"></a>00047     <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges.">OBAtomTyper</a>();
<a name="l00048"></a>00048     ~<a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml" title="Assigns atom types, hybridization, implicit valence and formal charges.">OBAtomTyper</a>();
<a name="l00049"></a>00049 
<a name="l00050"></a>00050     <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00052"></a><a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml#aab7c531e5ffc5174e57a85e853931534">00052</a>     <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBAtomTyper.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>()                 { <span class="keywordflow">return</span> _vimpval.size();}
<a name="l00053"></a>00053 
<a name="l00055"></a>00055     <span class="keywordtype">void</span> AssignHyb(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00057"></a>00057     <span class="keywordtype">void</span> AssignTypes(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00060"></a>00060     <span class="keywordtype">void</span> AssignImplicitValence(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00062"></a>00062     <span class="keywordtype">void</span> CorrectAromaticNitrogens(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00063"></a>00063 };
<a name="l00064"></a>00064 
<a name="l00065"></a>00065 <span class="comment">// class introduction in typer.cpp</span>
<a name="l00066"></a><a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml">00066</a> <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml" title="Assigns aromatic typing to atoms and bonds.">OBAromaticTyper</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files.">OBGlobalDataBase</a>
<a name="l00067"></a>00067 {
<a name="l00068"></a>00068     std::vector&lt;bool&gt;             _vpa;   
<a name="l00069"></a>00069     std::vector&lt;bool&gt;             _visit;
<a name="l00070"></a>00070     std::vector&lt;bool&gt;             _root;
<a name="l00071"></a>00071     std::vector&lt;std::vector&lt;int&gt; &gt;     _mlist;
<a name="l00072"></a>00072     std::vector&lt;OBSmartsPattern*&gt; _vsp;   
<a name="l00073"></a>00073     std::vector&lt;std::pair&lt;int,int&gt; &gt;   _verange; 
<a name="l00074"></a>00074     std::vector&lt;std::pair&lt;int,int&gt; &gt;   _velec;   
<a name="l00075"></a>00075 <span class="keyword">public</span>:
<a name="l00076"></a>00076     <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml" title="Assigns aromatic typing to atoms and bonds.">OBAromaticTyper</a>();
<a name="l00077"></a>00077     ~<a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml" title="Assigns aromatic typing to atoms and bonds.">OBAromaticTyper</a>();
<a name="l00078"></a>00078 
<a name="l00080"></a><a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml#aab7c531e5ffc5174e57a85e853931534">00080</a>     <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBAromaticTyper.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>()                 { <span class="keywordflow">return</span> _vsp.size();}
<a name="l00081"></a>00081 
<a name="l00082"></a>00082     <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00084"></a>00084     <span class="keywordtype">void</span> AssignAromaticFlags(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00087"></a>00087     <span class="keywordtype">void</span> PropagatePotentialAromatic(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a>*);
<a name="l00088"></a>00088     <span class="comment">// Documentation in typer.cpp</span>
<a name="l00089"></a>00089     <span class="keywordtype">void</span> SelectRootAtoms(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;, <span class="keywordtype">bool</span> avoidInnerRingAtoms = <span class="keyword">true</span>);
<a name="l00091"></a>00091     <span class="keywordtype">void</span> ExcludeSmallRing(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a> &amp;);
<a name="l00093"></a>00093     <span class="keywordtype">void</span> CheckAromaticity(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *root,<span class="keywordtype">int</span> searchDepth);
<a name="l00094"></a>00094     <span class="comment">// Documentation in typer.cpp</span>
<a name="l00095"></a>00095     <span class="keywordtype">bool</span> TraverseCycle(<a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *root, <a class="code" href="classOpenBabel_1_1OBAtom.shtml" title="Atom class.">OBAtom</a> *atom, <a class="code" href="classOpenBabel_1_1OBBond.shtml" title="Bond class.">OBBond</a> *prev,
<a name="l00096"></a>00096                        std::pair&lt;int,int&gt; &amp;er,<span class="keywordtype">int</span> depth);
<a name="l00097"></a>00097 };
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 <span class="comment">// class introduction in typer.cpp</span>
<a name="l00100"></a><a class="code" href="classOpenBabel_1_1OBRingTyper.shtml">00100</a> <span class="keyword">class </span>OBAPI <a class="code" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a> : <span class="keyword">public</span> <a class="code" href="classOpenBabel_1_1OBGlobalDataBase.shtml" title="Base data table class, handles reading data files.">OBGlobalDataBase</a>
<a name="l00101"></a>00101 {
<a name="l00102"></a>00102   std::vector&lt;std::vector&lt;int&gt; &gt;                           _mlist; 
<a name="l00103"></a>00103   std::vector&lt;std::pair&lt;OBSmartsPattern*,std::string&gt; &gt;    _ringtyp; 
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="keyword">public</span>:
<a name="l00106"></a>00106     <a class="code" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a>();
<a name="l00107"></a>00107     ~<a class="code" href="classOpenBabel_1_1OBRingTyper.shtml" title="Assigns ring types.">OBRingTyper</a>();
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     <span class="keywordtype">void</span> ParseLine(<span class="keyword">const</span> <span class="keywordtype">char</span>*);
<a name="l00111"></a><a class="code" href="classOpenBabel_1_1OBRingTyper.shtml#aab7c531e5ffc5174e57a85e853931534">00111</a>     <span class="keywordtype">size_t</span> <a class="code" href="classOpenBabel_1_1OBRingTyper.shtml#aab7c531e5ffc5174e57a85e853931534">GetSize</a>()                 { <span class="keywordflow">return</span> _ringtyp.size();}
<a name="l00112"></a>00112 
<a name="l00114"></a>00114     <span class="keywordtype">void</span> AssignTypes(<a class="code" href="classOpenBabel_1_1OBMol.shtml" title="Molecule Class.">OBMol</a>&amp;);
<a name="l00115"></a>00115 };
<a name="l00116"></a>00116 
<a name="l00117"></a>00117 
<a name="l00118"></a>00118 } <span class="comment">//namespace OpenBabel</span>
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 <span class="preprocessor">#endif // OB_TYPER_H</span>
<a name="l00121"></a>00121 <span class="preprocessor"></span>
</pre></div></div>
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

</div><!-- end content -->

<!--#include file="footer.html" -->

<div id="footer">
<hr size="1">
<img src="http://openbabel.org/babel256.png" width="136" height="127" alt="" style="float: left;" />
<p>This file is part of the documentation for <a href="http://openbabel.org/wiki/">Open Babel</a>, version 2.3.</p>
<div class="bottom">
Documentation copyright &copy; 1998-2007, the <a href="http://openbabel.org/wiki/THANKS">Open Babel Developers</a>.<br>
Open Babel is hosted by: <a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=40728" 
width="88" height="31" border="0" alt="SourceForge Logo"></a><br>
Generated on Thu Oct 13 2011 16:08:08 by&nbsp;<a href="http://www.doxygen.org/"><img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.7.5.1.
</div>

</body>
</html>
